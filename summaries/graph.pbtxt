node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1200
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "tensors/component_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1200
          }
        }
        tensor_content: "\256\006\000\000\000\000\000\000\356\004\000\000\000\000\000\000\372\006\000\000\000\000\000\000\265\006\000\000\000\000\000\000\226\010\000\000\000\000\000\000R\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000*\010\000\000\000\000\000\000\356\006\000\000\000\000\000\0005\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\024\t\000\000\000\000\000\000\220\003\000\000\000\000\000\000\326\005\000\000\000\000\000\000\345\004\000\000\000\000\000\000V\003\000\000\000\000\000\000\354\003\000\000\000\000\000\000\020\005\000\000\000\000\000\000Z\004\000\000\000\000\000\000;\005\000\000\000\000\000\000H\t\000\000\000\000\000\000T\004\000\000\000\000\000\000\003\007\000\000\000\000\000\000$\004\000\000\000\000\000\000$\004\000\000\000\000\000\000@\006\000\000\000\000\000\000\204\003\000\000\000\000\000\000\250\006\000\000\000\000\000\000@\006\000\000\000\000\000\000\010\002\000\000\000\000\000\000%\005\000\000\000\000\000\000\314\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000\244\006\000\000\000\000\000\000\031\006\000\000\000\000\000\000\224\t\000\000\000\000\000\000I\004\000\000\000\000\000\000\021\005\000\000\000\000\000\000!\004\000\000\000\000\000\000\200\004\000\000\000\000\000\000,\005\000\000\000\000\000\0000\005\000\000\000\000\000\000t\003\000\000\000\000\000\000\252\003\000\000\000\000\000\000~\004\000\000\000\000\000\000\330\006\000\000\000\000\000\000e\010\000\000\000\000\000\000xt\000\000\000\000\000\000\237\010\000\000\000\000\000\000\307\005\000\000\000\000\000\000\353\002\000\000\000\000\000\000\357\010\000\000\000\000\000\000\257\010\000\000\000\000\000\000M\003\000\000\000\000\000\000\266\006\000\000\000\000\000\000>\004\000\000\000\000\000\000E\006\000\000\000\000\000\000\334\003\000\000\000\000\000\000\270\003\000\000\000\000\000\000\005\005\000\000\000\000\000\000\350\006\000\000\000\000\000\000\316\004\000\000\000\000\000\000^\010\000\000\000\000\000\0009\005\000\000\000\000\000\000\033\006\000\000\000\000\000\000)\004\000\000\000\000\000\000\302\005\000\000\000\000\000\000q\tn\000\000\000\000\000\000\323\010\000\000\000\000\000\000\020\t\000\000\000\000\000\000\262\005\000\000\000\000\000\000D\004\000\000\000\000\000\000e\004\000\000\000\000\000\000\226\014\000\000\000\000\000\000\260\005\000\000\000\000\000\000\334\003\000\000\000\000\000\000c\004\000\000\000\000\000\0008\004\000\000\000\000\000\000\257\004\000\000\000\000\000\0002\006\000\000\000\000\000\000\362\002\000\000\000\000\000\000\276\003\000\000\000\000\000\000H\003\000\000\000\000\000\000D\005\000\000\000\000\000\000\035\004\000\000\000\000\000\000m\010\000\000\000\000\000\000\006\010\000\000\000\000\000\000/\005\000\000\000\000\000\000\020\005\000\000\000\000\000\000\271\006\000\000\000\000\000\000\222\006\000\000\000\000\000\000\276\004\000\000\000\000\000\000\247\007\000\000\000\000\000\000<\007\000\000\000\000\000\000\344\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000i\005\000\000\000\000\000\000\335\005\000\000\000\000\000\000\300\006\000\000\000\000\000\000\255\006\000\000\000\000\000\000k\003\000\000\000\000\000\000\363\007\000\000\000\000\000\0008\004\000\000\000\000\000\000@\005\000\000\000\000\000\000\311\003\000\000\000\000\000\000\256\006\000\000\000\000\000\000\311\007\000\000\000\000\000\000\344\004\000\000\000\000\000\000\260\004\000\000\000\000\000\000H\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\260\007\000\000\000\000\000\000\233\007\000\000\000\000\000\000\236\t\000\000\000\000\000\000\320\004\000\000\000\000\000\000l\n\000\000\000\000\000\000\005\006\000\000\000\000\000\000r\003\000\000\000\000\000\000P\006\000\000\000\000\000\000K\005\000\000\000\000\000\000K\007\000\000\000\000\000\000q\010\000\000\000\000\000\000\270\006\000\000\000\000\000\000\253\006\000\000\000\000\000\000f\005\000\000\000\000\000\000x\006\000\000\000\000\000\000\347\006\000\000\000\000\000\000R\005\000\000\000\000\000\000s\006\000\000\000\000\000\000n\010\000\000\000\000\000\000\014\010\000\000\000\000\000\000\200\007\000\000\000\000\000\000\272\010\000\000\000\000\000\000\310\003\000\000\000\000\000\000\365\005\000\000\000\000\000\000\n\007\000\000\000\000\000\000<\005\000\000\000\000\000\000\"\010\000\000\000\000\000\000\344\004\000\000\000\000\000\000\030\016\000\000\000\000\000\000\301\004\000\000\000\000\000\000x\006\000\000\000\000\000\000\310\004\000\000\000\000\000\0009\006\000\000\000\000\000\000\247\n\000\000\000\000\000\000\307\005\000\000\000\000\000\000\227\005\000\000\000\000\000\000\255\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\260\005\000\000\000\000\000\000\276\006\000\000\000\000\000\000(\014\000\000\000\000\000\000\265\010\000\000\000\000\000\000\261\006\000\000\000\000\000\000a\004\000\000\000\000\000\000\377\004\000\000\000\000\000\000\036\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\004\005\000\000\000\000\000\000\242\005\000\000\000\000\000\000\240\006\000\000\000\000\000\000L\004\000\000\000\000\000\000\016\010\000\000\000\000\000\000D\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000<\007\000\000\000\000\000\000\336\003\000\000\000\000\000\000p\005\000\000\000\000\000\000\324\004\000\000\000\000\000\000\234\005\000\000\000\000\000\0000\005\000\000\000\000\000\000\242\007\000\000\000\000\000\000\340\004\000\000\000\000\000\000\332\005\000\000\000\000\000\000\333\010\000\000\000\000\000\000\020\006\000\000\000\000\000\000`\003\000\000\000\000\000\000X\t\000\000\000\000\000\000\026\005\000\000\000\000\000\000\330\t\000\000\000\000\000\000\333\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\023\006\000\000\000\000\000\000\252\004\000\000\000\000\000\000\352\n\000\000\000\000\000\000\333\003\000\000\000\000\000\000~\003\000\000\000\000\000\000\250\007\000\000\000\000\000\000\333\003\000\000\000\000\000\000\206\005\000\000\000\000\000\000\320\006\000\000\000\000\000\000\236\006\000\000\000\000\000\000\317\005\000\000\000\000\000\000\036\006\000\000\000\000\000\000b\003\000\000\000\000\000\000\240\005\000\000\000\000\000\000\301\004\000\000\000\000\000\000>\010\000\000\000\000\000\000P\007\000\000\000\000\000\000\210\007\000\000\000\000\000\000_\005\000\000\000\000\000\000\204\006\000\000\000\000\000\000`\010\000\000\000\000\000\000\032\005\000\000\000\000\000\000Y\006\000\000\000\000\000\000h\006\000\000\000\000\000\000\026\005\000\000\000\000\000\000\"\005\000\000\000\000\000\000\363\010\000\000\000\000\000\000\300\006\000\000\000\000\000\000D\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000r\003\000\000\000\000\000\000f\005\000\000\000\000\000\000\016\n\000\000\000\000\000\000\274\004\000\000\000\000\000\000$\005\000\000\000\000\000\000\374\002\000\000\000\000\000\000\216\005\000\000\000\000\000\000\347\005\000\000\000\000\000\000\220\010\000\000\000\000\000\000\n\003\000\000\000\000\000\000Y\004\000\000\000\000\000\000\223\007\000\000\000\000\000\000S\005\000\000\000\000\000\000\336\010\000\000\000\000\000\000`\006\000\000\000\000\000\0000\003\000\000\000\000\000\000\014\006\000\000\000\000\000\000\030\006\000\000\000\000\000\000`\003\000\000\000\000\000\000I\010\000\000\000\000\000\000\346\007\000\000\000\000\000\000\276\007\000\000\000\000\000\000\356\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000\274\005\000\000\000\000\000\000\'\006\000\000\000\000\000\000\342\004\000\000\000\000\000\000\306\006\000\000\000\000\000\000Z\003\000\000\000\000\000\000\204\003\000\000\000\000\000\000t\005\000\000\000\000\000\000\177\007\000\000\000\000\000\000\264\006\000\000\000\000\000\000\264\006\000\000\000\000\000\000\327\010\000\000\000\000\000\000l\006\000\000\000\000\000\000\353\003\000\000\000\000\000\000\026\006\000\000\000\000\000\000\236\007\000\000\000\000\000\000\317\006\000\000\000\000\000\000\200\004\000\000\000\000\000\0008\005\000\000\000\000\000\000\224\t\000\000\000\000\000\000\005\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\245\r\000\000\000\000\000\000\320\007\000\000\000\000\000\000\303\010\000\000\000\000\000\000~\005\000\000\000\000\000\000]\003\000\000\000\000\000\000\230\007\000\000\000\000\000\000\335\005\000\000\000\000\000\000\314\003\000\000\000\000\000\000^\004\000\000\000\000\000\000\364\007\000\000\000\000\000\000i\006\000\000\000\000\000\000\230\005\000\000\000\000\000\0001\t\000\000\000\000\000\000\247\007\000\000\000\000\000\000V\n\000\000\000\000\000\000\300\005\000\000\000\000\000\000$\n\000\000\000\000\000\000\244\t\000\000\000\000\000\000\252\n\000\000\000\000\000\000\213\004\000\000\000\000\000\000\242\013\000\000\000\000\000\000#\003\000\000\000\000\000\000\267\006\000\000\000\000\000\000g\005\000\000\000\000\000\000V\010\000\000\000\000\000\000\250\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000 \004\000\000\000\000\000\000]\006\000\000\000\000\000\000N\005\000\000\000\000\000\000f\006\000\000\000\000\000\000\372\006\000\000\000\000\000\000\202\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000U\006\000\000\000\000\000\000\277\004\000\000\000\000\000\000t\007\000\000\000\000\000\000I\003\000\000\000\000\000\000\020\004\000\000\000\000\000\000\224\006\000\000\000\000\000\000X\004\000\000\000\000\000\000)\006\000\000\000\000\000\000\276\003\000\000\000\000\000\000\306\005\000\000\000\000\000\000Z\006\000\000\000\000\000\000\250\n\000\000\000\000\000\000M\007\000\000\000\000\000\000\255\005\000\000\000\000\000\000W\004\000\000\000\000\000\000\320\002\000\000\000\000\000\000;\006\000\000\000\000\000\000\260\004\000\000\000\000\000\000\217\004\000\000\000\000\000\000v\004\000\000\000\000\000\000H\005\000\000\000\000\000\000\204\007\000\000\000\000\000\000\220\003\000\000\000\000\000\000\341\005\000\000\000\000\000\000\202\007\000\000\000\000\000\000\333\003\000\000\000\000\000\000&\006\000\000\000\000\000\000@\005\000\000\000\000\000\000r\005\000\000\000\000\000\000\227\005\000\000\000\000\000\000\364\004\000\000\000\000\000\000\007\005\000\000\000\000\000\000\200\006\000\000\000\000\000\0004\006\000\000\000\000\000\000\360\002\000\000\000\000\000\000\'\005\000\000\000\000\000\000\210\007\000\000\000\000\000\000\210\003\000\000\000\000\000\000\222\003\000\000\000\000\000\000\242\t\000\000\000\000\000\000@\007\000\000\000\000\000\000\010\007\000\000\000\000\000\000\233\006\000\000\000\000\000\000\025\005\000\000\000\000\000\000\005\007\000\000\000\000\000\000\020\003\000\000\000\000\000\000\241\007\000\000\000\000\000\000\365\004\000\000\000\000\000\000\240\004\000\000\000\000\000\000e\004\000\000\000\000\000\000\307\005\000\000\000\000\000\000\034\t\000\000\000\000\000\000W\005\000\000\000\000\000\000\251\007\000\000\000\000\000\000r\003\000\000\000\000\000\000\024\003\000\000\000\000\000\000\n\004\000\000\000\000\000\000x\004\000\000\000\000\000\000~\003\000\000\000\000\000\000\024\007\000\000\000\000\000\0005\004\000\000\000\000\000\000\016\006\000\000\000\000\000\000\010\005\000\000\000\000\000\000\036\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000\327\010\000\000\000\000\000\000$\006\000\000\000\000\000\000T\006\000\000\000\000\000\000g\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000|\010\000\000\000\000\000\000\036\010\000\000\000\000\000\000\374\004\000\000\000\000\000\000 \004\000\000\000\000\000\000\306\005\000\000\000\000\000\000\004\004\000\000\000\000\000\0001\010\000\000\000\000\000\000<\005\000\000\000\000\000\000x\005\000\000\000\000\000\000@\n\000\000\000\000\000\000n\004\000\000\000\000\000\000 \004\000\000\000\000\000\000@\005\000\000\000\000\000\000B\006\000\000\000\000\000\000\334\003\000\000\000\000\000\000F\n\000\000\000\000\000\000\254\004\000\000\000\000\000\000m\005\000\000\000\000\000\000l\006\000\000\000\000\000\000\213\003\000\000\000\000\000\000\270\004\000\000\000\000\000\000\204\005\000\000\000\000\000\000\333\003\000\000\000\000\000\000\256\004\000\000\000\000\000\000U\005\000\000\000\000\000\000D\006\000\000\000\000\000\000v\002\000\000\000\000\000\000}\006\000\000\000\000\000\000^\004\000\000\000\000\000\000\210\003\000\000\000\000\000\000\266\002\000\000\000\000\000\000\254\004\000\000\000\000\000\000b\t\000\000\000\000\000\000\240\005\000\000\000\000\000\000%\006\000\000\000\000\000\000\352\004\000\000\000\000\000\000t\007\000\000\000\000\000\000\231\006\000\000\000\000\000\000`\007\000\000\000\000\000\000^\007\000\000\000\000\000\000`\005\000\000\000\000\000\000\237\004\000\000\000\000\000\000-\003\000\000\000\000\000\000\375\005\000\000\000\000\000\000\334\006\000\000\000\000\000\0006\006\000\000\000\000\000\000\300\006\000\000\000\000\000\000\332\004\000\000\000\000\000\000@\005\000\000\000\000\000\000\177\006\000\000\000\000\000\000\202\006\000\000\000\000\000\000\263\004\000\000\000\000\000\000\217\007\000\000\000\000\000\000o\004\000\000\000\000\000\000`\003\000\000\000\000\000\000|\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\206\005\000\000\000\000\000\000\375\004\000\000\000\000\000\000l\006\000\000\000\000\000\000b\006\000\000\000\000\000\000\256\006\000\000\000\000\000\000\336\005\000\000\000\000\000\000\261\007\000\000\000\000\000\0000\004\000\000\000\000\000\000\270\007\000\000\000\000\000\000t\006\000\000\000\000\000\000\312\003\000\000\000\000\000\000\325\005\000\000\000\000\000\000S\n\000\000\000\000\000\000\266\006\000\000\000\000\000\000k\004\000\000\000\000\000\000:\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\"\007\000\000\000\000\000\000\300\004\000\000\000\000\000\000\347\003\000\000\000\000\000\000Y\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000n\t\000\000\000\000\000\000v\002\000\000\000\000\000\000\030\005\000\000\000\000\000\000*\006\000\000\000\000\000\000\260\005\000\000\000\000\000\000\365\004\000\000\000\000\000\000v\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\234\014\000\000\000\000\000\000\034\007\000\000\000\000\000\000\203\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\302\004\000\000\000\000\000\000\350\006\000\000\000\000\000\000\276\004\000\000\000\000\000\000\t\007\000\000\000\000\000\000*\005\000\000\000\000\000\000\250\007\000\000\000\000\000\000w\007\000\000\000\000\000\000\302\004\000\000\000\000\000\000b\005\000\000\000\000\000\000\021\004\000\000\000\000\000\000S\005\000\000\000\000\000\000X\005\000\000\000\000\000\000`\003\000\000\000\000\000\0008\004\000\000\000\000\000\000\025\003\000\000\000\000\000\000\344\007\000\000\000\000\000\000G\010\000\000\000\000\000\000(\t\000\000\000\000\000\000\004\007\000\000\000\000\000\000 \010\000\000\000\000\000\000\016\005\000\000\000\000\000\000\334\004\000\000\000\000\000\000\200\006\000\000\000\000\000\000D\022\000\000\000\000\000\000^\t\000\000\000\000\000\000\362\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\231\n\000\000\000\000\000\000]\002\000\000\000\000\000\000\323\t\000\000\000\000\000\000\345\005\000\000\000\000\000\000R\005\000\000\000\000\000\000;\003\000\000\000\000\000\000N\001\000\000\000\000\000\000\206\005\000\000\000\000\000\000C\005\000\000\000\000\000\000\274\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\207\004\000\000\000\000\000\000A\006\000\000\000\000\000\000.\007\000\000\000\000\000\000\355\010\000\000\000\000\000\000\220\006\000\000\000\000\000\000\377\002\000\000\000\000\000\000\330\005\000\000\000\000\000\000\207\010\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\003\000\000\000\000\000\0009\003\000\000\000\000\000\000.\010\000\000\000\000\000\000-\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\265\006\000\000\000\000\000\000f\004\000\000\000\000\000\000\376\007\000\000\000\000\000\000\030\004\000\000\000\000\000\000D\004\000\000\000\000\000\0008\005\000\000\000\000\000\000\246\005\000\000\000\000\000\000\025\006\000\000\000\000\000\000p\005\000\000\000\000\000\000m\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\212\006\000\000\000\000\000\000\367\010\000\000\000\000\000\000o\006\000\000\000\000\000\000\310\t\000\000\000\000\000\000\377\005\000\000\000\000\000\000T\010\000\000\000\000\000\000\257\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\234\006\000\000\000\000\000\000\226\005\000\000\000\000\000\000U\004\000\000\000\000\000\000\300\004\000\000\000\000\000\000\305\005\000\000\000\000\000\000(\005\000\000\000\000\000\000p\005\000\000\000\000\000\000\003\007\000\000\000\000\000\000\225\005\000\000\000\000\000\000\372\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\327\n\000\000\000\000\000\000%\006\000\000\000\000\000\000\354\007\000\000\000\000\000\000F\003\000\000\000\000\000\000\\\003\000\000\000\000\000\000\301\005\000\000\000\000\000\000\247\003\000\000\000\000\000\000.\006\000\000\000\000\000\000\370\010\000\000\000\000\000\0000\003\000\000\000\000\000\000P\003\000\000\000\000\000\000\234\003\000\000\000\000\000\000\"\007\000\000\000\000\000\000X\005\000\000\000\000\000\000z\005\000\000\000\000\000\000o\006\000\000\000\000\000\000\024\006\000\000\000\000\000\000p\007\000\000\000\000\000\000_\005\000\000\000\000\000\000{\007\000\000\000\000\000\000\260\004\000\000\000\000\000\000\326\005\000\000\000\000\000\000\302\007\000\000\000\000\000\000\020\004\000\000\000\000\000\000\330\007\000\000\000\000\000\000z\014\000\000\000\000\000\000\005\004\000\000\000\000\000\000i\010\000\000\000\000\000\000\010\004\000\000\000\000\000\000P\007\000\000\000\000\000\000`\004\000\000\000\000\000\000v\002\000\000\000\000\000\000\036\004\000\000\000\000\000\000\345\005\000\000\000\000\000\000@\003\000\000\000\000\000\000$\007\000\000\000\000\000\000\326\010\000\000\000\000\000\000`\003\000\000\000\000\000\0006\n\000\000\000\000\000\000\324\003\000\000\000\000\000\000\350\005\000\000\000\000\000\000\376\006\000\000\000\000\000\000\\\004\000\000\000\000\000\000\216\005\000\000\000\000\000\000\360\005\000\000\000\000\000\000 \010\000\000\000\000\000\000F\005\000\000\000\000\000\000\326\006\000\000\000\000\000\000\022\006\000\000\000\000\000\000\203\005\000\000\000\000\000\000 \004\000\000\000\000\000\000 \004\000\000\000\000\000\000C\r\000\000\000\000\000\000 \003\000\000\000\000\000\000k\005\000\000\000\000\000\000\034\003\000\000\000\000\000\000\037\006\000\000\000\000\000\000\356\005\000\000\000\000\000\000\211\007\000\000\000\000\000\000\220\n\000\000\000\000\000\000T\006\000\000\000\000\000\000\346\006\000\000\000\000\000\000\325\003\000\000\000\000\000\000\030\004\000\000\000\000\000\000F\004\000\000\000\000\000\000/\007\000\000\000\000\000\000v\002\000\000\000\000\000\000\201\006\000\000\000\000\000\000\346\005\000\000\000\000\000\000\264\006\000\000\000\000\000\000\275\005\000\000\000\000\000\000A\010\000\000\000\000\000\000D\004\000\000\000\000\000\000\035\004\000\000\000\000\000\000\336\005\000\000\000\000\000\000\262\005\000\000\000\000\000\000\316\005\000\000\000\000\000\000\217\007\000\000\000\000\000\000\220\t\000\000\000\000\000\000p\005\000\000\000\000\000\000\235\004\000\000\000\000\000\0001\010\000\000\000\000\000\000\220\007\000\000\000\000\000\000L\t\000\000\000\000\000\000\217\006\000\000\000\000\000\000\235\005\000\000\000\000\000\000\234\004\000\000\000\000\000\000\304\005\000\000\000\000\000\000Y\005\000\000\000\000\000\000\270\004\000\000\000\000\000\000/\007\000\000\000\000\000\000pt\000\000\000\000\000\0001\004\000\000\000\000\000\000\003\006\000\000\000\000\000\000q\004\000\000\000\000\000\000h\002\000\000\000\000\000\000|\004\000\000\000\000\000\000~\003\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\007\000\000\000\000\000\000\214\004\000\000\000\000\000\000\020\n\000\000\000\000\000\000\024\007\000\000\000\000\000\000\314\005\000\000\000\000\000\000D\004\000\000\000\000\000\000 \007\000\000\000\000\000\000,\005\000\000\000\000\000\000\260\005\000\000\000\000\000\000\210\003\000\000\000\000\000\000\331\002\000\000\000\000\000\000\232\004\000\000\000\000\000\000\314\004\000\000\000\000\000\000\300\003\000\000\000\000\000\000\307\005\000\000\000\000\000\000F\005\000\000\000\000\000\000\372\t\000\000\000\000\000\000\232\004\000\000\000\000\000\000r\t\000\000\000\000\000\000\313\003\000\000\000\000\000\000\316\006\000\000\000\000\000\000P\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\276\005\000\000\000\000\000\000\242\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\220\006\000\000\000\000\000\000\320\004\000\000\000\000\000\000\360\006\000\000\000\000\000\000\270\004\000\000\000\000\000\000P\006\000\000\000\000\000\000z\004\000\000\000\000\000\000\357\007\000\000\000\000\000\000x\004\000\000\000\000\000\000\264\003\000\000\000\000\000\000\350\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\t\007\000\000\000\000\000\000\260\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000\230\005\000\000\000\000\000\000\220\003\000\000\000\000\000\000E\005\000\000\000\000\000\000\270\005\000\000\000\000\000\0009\005\000\000\000\000\000\000\233\n\000\000\000\000\000\000\320\010\000\000\000\000\000\000P\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\371\005\000\000\000\000\000\000t\004\000\000\000\000\000\000(\005\000\000\000\000\000\000\326\005\000\000\000\000\000\0002\010\000\000\000\000\000\000\002\004\000\000\000\000\000\000\277\005\000\000\000\000\000\000\350\006\000\000\000\000\000\000j\005\000\000\000\000\000\000\335\005\000\000\000\000\000\000\343\t\000\000\000\000\000\000`\003\000\000\000\000\000\000\025\005\000\000\000\000\000\000\013\006\000\000\000\000\000\000=\t\000\000\000\000\000\000\326\005\000\000\000\000\000\000\342\005\000\000\000\000\000\000\262\006\000\000\000\000\000\000\326\006\000\000\000\000\000\000,\007\000\000\000\000\000\000\317\014\000\000\000\000\000\000Z\003\000\000\000\000\000\000\304\004\000\000\000\000\000\000]\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\265\007\000\000\000\000\000\000\264\004\000\000\000\000\000\000N\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\344\007\000\000\000\000\000\000\354\003\000\000\000\000\000\000\345\004\000\000\000\000\000\000C\006\000\000\000\000\000\000\226\005\000\000\000\000\000\000V\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000>\005\000\000\000\000\000\000t\006\000\000\000\000\000\000$\010\000\000\000\000\000\000\205\003\000\000\000\000\000\000\'\010\000\000\000\000\000\000y\004\000\000\000\000\000\000&\004\000\000\000\000\000\000\335\007\000\000\000\000\000\000\330\005\000\000\000\000\000\000g\007\000\000\000\000\000\000\034\006\000\000\000\000\000\000\005\005\000\000\000\000\000\000\005\003\000\000\000\000\000\000D\014\000\000\000\000\000\000\350\006\000\000\000\000\000\000\230\006\000\000\000\000\000\000\254\004\000\000\000\000\000\000\260\005\000\000\000\000\000\000\006\013\000\000\000\000\000\000h\004\000\000\000\000\000\000\224\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000(\006\000\000\000\000\000\000>\004\000\000\000\000\000\000Z\010\000\000\000\000\000\000\035\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\024\004\000\000\000\000\000\000\242\005\000\000\000\000\000\000\342\004\000\000\000\000\000\000}\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000\231\006\000\000\000\000\000\000\034\004\000\000\000\000\000\000N\005\000\000\000\000\000\000h\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\305\006\000\000\000\000\000\000\321\005\000\000\000\000\000\000\321\005\000\000\000\000\000\000$\010\000\000\000\000\000\000\020\003\000\000\000\000\000\000\232\005\000\000\000\000\000\000N\010\000\000\000\000\000\000\307\004\000\000\000\000\000\000p\005\000\000\000\000\000\000\260\004\000\000\000\000\000\000%\007\000\000\000\000\000\000\354\005\000\000\000\000\000\000x\004\000\000\000\000\000\000+\004\000\000\000\000\000\000\027\006\000\000\000\000\000\000\333\003\000\000\000\000\000\000K\004\000\000\000\000\000\000\260\004\000\000\000\000\000\000\312\005\000\000\000\000\000\000\003\006\000\000\000\000\000\000\215\004\000\000\000\000\000\000\010\007\000\000\000\000\000\000\210\005\000\000\000\000\000\000\245\006\000\000\000\000\000\000\357\006\000\000\000\000\000\000`\003\000\000\000\000\000\0006\t\000\000\000\000\000\000?\007\000\000\000\000\000\000P\003\000\000\000\000\000\000\260\005\000\000\000\000\000\000n\006\000\000\000\000\000\000\245\005\000\000\000\000\000\000\363\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\002\004\000\000\000\000\000\000\311\005\000\000\000\000\000\000Z\005\000\000\000\000\000\000^\n\000\000\000\000\000\000\222\005\000\000\000\000\000\000\017\004\000\000\000\000\000\000I\004\000\000\000\000\000\000|\004\000\000\000\000\000\000\\\005\000\000\000\000\000\000\352\003\000\000\000\000\000\000n\006\000\000\000\000\000\000`\004\000\000\000\000\000\000\020\t\000\000\000\000\000\000\235\007\000\000\000\000\000\000~\003\000\000\000\000\000\000\222\006\000\000\000\000\000\000\216\003\000\000\000\000\000\000\364\004\000\000\000\000\000\000k\004\000\000\000\000\000\0002\n\000\000\000\000\000\000\020\004\000\000\000\000\000\000\260\010\000\000\000\000\000\000\203\004\000\000\000\000\000\000`\003\000\000\000\000\000\000B\004\000\000\000\000\000\000\265\006\000\000\000\000\000\0009\006\000\000\000\000\000\000\266\010\000\000\000\000\000\000|\003\000\000\000\000\000\000\255\006\000\000\000\000\000\000\260\006\000\000\000\000\000\000q\005\000\000\000\000\000\000\251\010\000\000\000\000\000\000\341\005\000\000\000\000\000\000\234\003\000\000\000\000\000\000\223\006\000\000\000\000\000\000,\004\000\000\000\000\000\000g\005\000\000\000\000\000\000\377\005\000\000\000\000\000\000\004\007\000\000\000\000\000\000\267\003\000\000\000\000\000\000\300\010\000\000\000\000\000\000<\t\000\000\000\000\000\000\324\004\000\000\000\000\000\000Z\003\000\000\000\000\000\000\032\005\000\000\000\000\000\000\345\005\000\000\000\000\000\000\206\006\000\000\000\000\000\000\206\003\000\000\000\000\000\000\'\004\000\000\000\000\000\000d\006\000\000\000\000\000\000\tf\004\000\000\000\000\000\000F\t\000\000\000\000\000\000\272\007\000\000\000\000\000\000\374\006\000\000\000\000\000\000\274\010\000\000\000\000\000\000\272\005\000\000\000\000\000\000\235\003\000\000\000\000\000\000q\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000\025\010\000\000\000\000\000\000\353\002\000\000\000\000\000\000\260\004\000\000\000\000\000\000\263\007\000\000\000\000\000\000\252\007\000\000\000\000\000\000c\t\000\000\000\000\000\000\300\006\000\000\000\000\000\000\014\010\000\000\000\000\000\000\240\005\000\000\000\000\000\000`\006\000\000\000\000\000\000@\005\000\000\000\000\000\000M\007\000\000\000\000\000\000x\004\000\000\000\000\000\000]\006\000\000\000\000\000\000\360\006\000\000\000\000\000\000e\005\000\000\000\000\000\000`\003\000\000\000\000\000\000\305\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\260\007\000\000\000\000\000\000\324\003\000\000\000\000\000\000\246\007\000\000\000\000\000\000\315\004\000\000\000\000\000\000!\004\000\000\000\000\000\0009\005\000\000\000\000\000\000\210\005\000\000\000\000\000\000Z\003\000\000\000\000\000\0008\013\000\000\000\000\000\000\014\006\000\000\000\000\000\000\010\007\000\000\000\000\000\000f\007\000\000\000\000\000\000\314\005\000\000\000\000\000\000\034\005\000\000\000\000\000\000J\004\000\000\000\000\000\000\310\003\000\000\000\000\000\000G\004\000\000\000\000\000\000\250\004\000\000\000\000\000\000Z\006\000\000\000\000\000\000\226\003\000\000\000\000\000\000\224\005\000\000\000\000\000\000\343\007\000\000\000\000\000\000f\005\000\000\000\000\000\000e\003\000\000\000\000\000\000\331\004\000\000\000\000\000\000~\003\000\000\000\000\000\000a\004\000\000\000\000\000\000\347\003\000\000\000\000\000\0004\n\000\000\000\000\000\000\362\004\000\000\000\000\000\000\362\010\000\000\000\000\000\000\306\006\000\000\000\000\000\000\214\004\000\000\000\000\000\000c\006\000\000\000\000\000\000\224\007\000\000\000\000\000\000\356\007\000\000\000\000\000\000(\006\000\000\000\000\000\000X\t\000\000\000\000\000\000\316\006\000\000\000\000\000\000;\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000\266\006\000\000\000\000\000\000\316\004\000\000\000\000\000\000\032\004\000\000\000\000\000\000\242\005\000\000\000\000\000\0005\004\000\000\000\000\000\000\270\004\000\000\000\000\000\000\260\003\000\000\000\000\000\000\263\002\000\000\000\000\000\000&\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000\340\005\000\000\000\000\000\000\331\003\000\000\000\000\000\000y\006\000\000\000\000\000\000D\004\000\000\000\000\000\000\256\006\000\000\000\000\000\000\362\005\000\000\000\000\000\000\367\004\000\000\000\000\000\000\200\006\000\000\000\000\000\000\336\005\000\000\000\000\000\000\376\003\000\000\000\000\000\000:\004\000\000\000\000\000\000\201\006\000\000\000\000\000\000\340\005\000\000\000\000\000\000P\005\000\000\000\000\000\000\300\005\000\000\000\000\000\000\342\005\000\000\000\000\000\000l\004\000\000\000\000\000\000\304\004\000\000\000\000\000\000\340\004\000\000\000\000\000\000\340\005\000\000\000\000\000\000R\013\000\000\000\000\000\000r\003\000\000\000\000\000\000\360\004\000\000\000\000\000\000n\006\000\000\000\000\000\000`\005\000\000\000\000\000\000\302\004\000\000\000\000\000\000\210\007\000\000\000\000\000\000\n\014\000\000\000\000\000\000\330\t\000\000\000\000\000\000v\006\000\000\000\000\000\000\272\003\000\000\000\000\000\000M\003\000\000\000\000\000\000T\006\000\000\000\000\000\000\327\010\000\000\000\000\000\000@\005\000\000\000\000\000\000v\002\000\000\000\000\000\000\013\007\000\000\000\000\000\000`\006\000\000\000\000\000\000\032\005\000\000\000\000\000\000\031\t\000\000\000\000\000\000\334\t\000\000\000\000\000\000\305\006\000\000\000\000\000\0004\013\000\000\000\000\000\000\336\003\000\000\000\000\000\000\353\006\000\000\000\000\000\000\242\003\000\000\000\000\000\000\026\005\000\000\000\000\000\000$\005\000\000\000\000\000\000\271\007\000\000\000\000\000\000\366\005\000\000\000\000\000\000\305\007\000\000\000\000\000\000\363\005\000\000\000\000\000\000T\005\000\000\000\000\000\000:\007\000\000\000\000\000\000\210\010\000\000\000\000\000\000\307\007\000\000\000\000\000\000:\005\000\000\000\000\000\000~\003\000\000\000\000\000\000!\t\000\000\000\000\000\000O\004\000\000\000\000\000\000\202\004\000\000\000\000\000\000\324\010\000\000\000\000\000\000#\006\000\000\000\000\000\000K\006\000\000\000\000\000\000\331\t\000\000\000\000\000\000}n\004\000\000\000\000\000\000\252\004\000\000\000\000\000\000\026\005\000\000\000\000\000\000>\n\000\000\000\000\000\000\242\005\000\000\000\000\000\000\345\007\000\000\000\000\000\000\232\006\000\000\000\000\000\000,\007\000\000\000\000\000\000z\006\000\000\000\000\000\000\254\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000A\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\213\005\000\000\000\000\000\000~h\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\352\004\000\000\000\000\000\000\230\005\000\000\000\000\000\000\336\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000\207\006\000\000\000\000\000\000<\010\000\000\000\000\000\000+\016\000\000\000\000\000\000^\004\000\000\000\000\000\000\355\004\000\000\000\000\000\000\342\004\000\000\000\000\000\000\016\014\000\000\000\000\000\000)\t\000\000\000\000\000\0008\013\000\000\000\000\000\000\233\003\000\000\000\000\000\000\310\004\000\000\000\000\000\000?\005\000\000\000\000\000\000d\004\000\000\000\000\000\000\322\t\000\000\000\000\000\000t\006\000\000\000\000\000\000|\021\000\000\000\000\000\000j\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\305\004\000\000\000\000\000\000\243\006\000\000\000\000\000\000X\006\000\000\000\000\000\000|\006\000\000\000\000\000\000\014\007\000\000\000\000\000\000V\006\000\000\000\000\000\000\241\005\000\000\000\000\000\000\300\005\000\000\000\000\000\000\310\004\000\000\000\000\000\000H\005\000\000\000\000\000\000\260\005\000\000\000\000\000\000G\007\000\000\000\000\000\000\232\006\000\000\000\000\000\000\274\004\000\000\000\000\000\000f\005\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "tensors/component_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1200
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\ntt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\nntt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\tt\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\tt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\nnt\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\tn\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\nt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\ttt\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\nttt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\nt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\tttt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\nt\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "tensors/component_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1200
          }
        }
        tensor_content: "X\003\000\000\000\000\000\000\356\004\000\000\000\000\000\000\230\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000y}\002\000\000\000\000\000\000\361\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000$\004\000\000\000\000\000\000\036\006\000\000\000\000\000\000\204\003\000\000\000\000\000\000\250\006\000\000\000\000\000\000\314\005\000\000\000\000\000\000\010\002\000\000\000\000\000\000\211\002\000\000\000\000\000\000\314\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000v\005\000\000\000\000\000\000\031\006\000\000\000\000\000\000]\004\000\000\000\000\000\000I\004\000\000\000\000\000\000\021\005\000\000\000\000\000\000!\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\004\000\000\000\000\000\000F\005\000\000\000\000\000\000H\003\000\000\000\000\000\000\252\003\000\000\000\000\000\000~\004\000\000\000\000\000\000\330\006\000\000\000\000\000\000\232\005\000\000\000\000\000\000xwd\002\000\000\000\000\000\000\365\003\000\000\000\000\000\000\336\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\004\000\000\000\000\000\000les\007\000\000\000\000\000\000\354\003\000\000\000\000\000\000\240\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\216\003\000\000\000\000\000\000\322\005\000\000\000\000\000\000\300\006\000\000\000\000\000\000\312\003\000\000\000\000\000\000\313\002\000\000\000\000\000\000t\003\000\000\000\000\000\0008\004\000\000\000\000\000\000\200\003\000\000\000\000\000\000\311\003\000\000\000\000\000\000\256\006\000\000\000\000\000\0009\003\000\000\000\000\000\000B\006\000\000\000\000\000\000\260\004\000\000\000\000\000\000<\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\003\000\000\000\000\000\000\337\003\000\000\000\000\000\000p\005\000\000\000\000\000\000\320\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\005\006\000\000\000\000\000\000r\003\000\000\000\000\000\000}`\003\000\000\000\000\000\000W\003\000\000\000\000\000\000\276\006\000\000\000\000\000\000P\005\000\000\000\000\000\000\363\002\000\000\000\000\000\000\261\006\000\000\000\000\000\000a\004\000\000\000\000\000\000\254\004\000\000\000\000\000\000i\002\000\000\000\000\000\000P\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\220\005\000\000\000\000\000\000t\004\000\000\000\000\000\000L\004\000\000\000\000\000\000\205\004\000\000\000\000\000\000D\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000\204\003\000\000\000\000\000\000\336\003\000\000\000\000\000\000\261\002\000\000\000\000\000\000.\004\000\000\000\000\000\000\234\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000\036\003\000\000\000\000\000\000\340\004\000\000\000\000\000\000\332\005\000\000\000\000\000\000\362\003\000\000\000\000\000\000\311\002\000\000\000\000\000\000`\003\000\000\000\000\000\000X\t\000\000\000\000\000\000v\002\000\000\000\000\000\000\263\004\000\000\000\000\000\000\343\001\000\000\000\000\000\000\220\003\000\000\000\000\000\000]\005\000\000\000\000\000\000\252\004\000\000\000\000\000\000\266\005\000\000\000\000\000\000\343\001\000\000\000\000\000\000~\003\000\000\000\000\000\000\\\003\000\000\000\000\000\000\343\001\000\000\000\000\000\000\206\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\236\006\000\000\000\000\000\000\337\002\000\000\000\000\000\000\036\006\000\000\000\000\000\000\256\002\000\000\000\000\000\000\034\002\000\000\000\000\000\000r\002\000\000\000\000\000\000\264\003\000\000\000\000\000\0005\007\000\000\000\000\000\000\374\003\000\000\000\000\000\000W\005\000\000\000\000\000\000H\003\000\000\000\000\000\000\244\005\000\000\000\000\000\000\330\002\000\000\000\000\000\000%\006\000\000\000\000\000\000\036\003\000\000\000\000\000\000\026\005\000\000\000\000\000\000\"\005\000\000\000\000\000\000\317\003\000\000\000\000\000\000`\003\000\000\000\000\000\000D\006\000\000\000\000\000\000\303\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\005\000\000\000\000\000\000\312\005\000\000\000\000\000\000\372\001\000\000\000\000\000\000\236\003\000\000\000\000\000\000\250\002\000\000\000\000\000\000\216\005\000\000\000\000\000\000\"\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\344\002\000\000\000\000\000\000w\004\000\000\000\000\000\000G\004\000\000\000\000\000\000i\005\000\000\000\000\000\000\200\004\000\000\000\000\000\000\330\004\000\000\000\000\000\0000\003\000\000\000\000\000\000\270\003\000\000\000\000\000\000\030\006\000\000\000\000\000\000`\003\000\000\000\000\000\000I\010\000\000\000\000\000\000\210\004\000\000\000\000\000\000\'\003\000\000\000\000\000\000\356\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000\274\005\000\000\000\000\000\000\'\006\000\000\000\000\000\000q\002\000\000\000\000\000\000\220\003\000\000\000\000\000\000Z\003\000\000\000\000\000\000r\003\000\000\000\000\000\000\272\002\000\000\000\000\000\0007\004\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\033\003\000\000\000\000\000\000\210\005\000\000\000\000\000\000\353\003\000\000\000\000\000\000\216\003\000\000\000\000\000\000\317\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000D\004\000\000\000\000\000\000\215\004\000\000\000\000\000\000\004\004\000\000\000\000\000\000\005\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\276\005\000\000\000\000\000\000\320\007\000\000\000\000\000\000\274\002\000\000\000\000\000\000?\001\000\000\000\000\000\000]\003\000\000\000\000\000\000h\007\000\000\000\000\000\000\271\002\000\000\000\000\000\000\314\003\000\000\000\000\000\000\031\003\000\000\000\000\000\000X\010\000\000\000\000\000\000\330\002\000\000\000\000\000\000\314\002\000\000\000\000\000\000M\003\000\000\000\000\000\000@\004\000\000\000\000\000\000C\005\000\000\000\000\000\000\\\005\000\000\000\000\000\000\341\004\000\000\000\000\000\000p\004\000\000\000\000\000\000\336\005\000\000\000\000\000\000\212\004\000\000\000\000\000\000\306\002\000\000\000\000\000\000\320\002\000\000\000\000\000\000\267\006\000\000\000\000\000\000gh\002\000\000\000\000\000\000p\002\000\000\000\000\000\000\254\003\000\000\000\000\000\000\260\004\000\000\000\000\000\000\206\004\000\000\000\000\000\000v\004\000\000\000\000\000\000&\004\000\000\000\000\000\000>\004\000\000\000\000\000\000x\003\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\001\000\000\000\000\000\000\034\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000r\005\000\000\000\000\000\000K\004\000\000\000\000\000\000\364\004\000\000\000\000\000\000\'\004\000\000\000\000\000\000\271\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\002\000\000\000\000\000\000`\002\000\000\000\000\000\000O\003\000\000\000\000\000\000\253\002\000\000\000\000\000\000f\003\000\000\000\000\000\000,\006\000\000\000\000\000\000@\007\000\000\000\000\000\000\326\003\000\000\000\000\000\000\002\004\000\000\000\000\000\000\r\005\000\000\000\000\000\000\253\003\000\000\000\000\000\000\020\003\000\000\000\000\000\000,\006\000\000\000\000\000\000\350\004\000\000\000\000\000\000\222\002\000\000\000\000\000\000\021\004\000\000\000\000\000\000\274\005\000\000\000\000\000\000\222\006\000\000\000\000\000\000]\003\000\000\000\000\000\000$\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\003\000\000\000\000\000\000\337\002\000\000\000\000\000\000x\004\000\000\000\000\000\000~\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\301\003\000\000\000\000\000\000D\004\000\000\000\000\000\000\354\004\000\000\000\000\000\000\036\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000u\004\000\000\000\000\000\000&\003\000\000\000\000\000\000\001\005\000\000\000\000\000\000(\004\000\000\000\000\000\000H\003\000\000\000\000\000\000\'\004\000\000\000\000\000\000\np\005\000\000\000\000\000\000\343\001\000\000\000\000\000\000\205\003\000\000\000\000\000\000\375\002\000\000\000\000\000\000\236\003\000\000\000\000\000\000v\002\000\000\000\000\000\000\037\003\000\000\000\000\000\000\210\002\000\000\000\000\000\000t\003\000\000\000\000\000\000\270\001\000\000\000\000\000\000\254\002\000\000\000\000\000\000\026\014\000\000\000\000\000\000\240\005\000\000\000\000\000\0006\004\000\000\000\000\000\000\352\004\000\000\000\000\000\000\223\003\000\000\000\000\000\000\234\005\000\000\000\000\000\000\355\005\000\000\000\000\000\000\242\003\000\000\000\000\000\000\014\003\000\000\000\000\000\000\211\002\000\000\000\000\000\000-\003\000\000\000\000\000\000\375\005\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000\332\004\000\000\000\000\000\000p\002\000\000\000\000\000\000T\005\000\000\000\000\000\000L\002\000\000\000\000\000\000\305\002\000\000\000\000\000\000@\003\000\000\000\000\000\0000\002\000\000\000\000\000\000`\003\000\000\000\000\000\000\313\002\000\000\000\000\000\000\020\004\000\000\000\000\000\000_\005\000\000\000\000\000\000\375\004\000\000\000\000\000\000\330\002\000\000\000\000\000\000Z\006\000\000\000\000\000\000@\003\000\000\000\000\000\000\320\005\000\000\000\000\000\000(\003\000\000\000\000\000\000#\002\000\000\000\000\000\000\270\007\000\000\000\000\000\000\326\005\000\000\000\000\000\000\312\003\000\000\000\000\000\000\306\005\000\000\000\000\000\000i\010\000\000\000\000\000\000\251\006\000\000\000\000\000\000\213\003\000\000\000\000\000\000)\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\216\003\000\000\000\000\000\000\300\004\000\000\000\000\000\000\347\003\000\000\000\000\000\000Y\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000\272\003\000\000\000\000\000\000v\002\000\000\000\000\000\000\010\001\000\000\000\000\000\000&\003\000\000\000\000\000\000\330\002\000\000\000\000\000\000\365\004\000\000\000\000\000\000\276\000\000\000\000\000\000\000\320\002\000\000\000\000\000\000\200\014\000\000\000\000\000\000\002\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000b\003\000\000\000\000\000\000\276\004\000\000\000\000\000\000\335\005\000\000\000\000\000\000W\003\000\000\000\000\000\000\300\003\000\000\000\000\000\000\t\003\000\000\000\000\000\000\302\004\000\000\000\000\000\000\261\002\000\000\000\000\000\000\021\004\000\000\000\000\000\000\360\003\000\000\000\000\000\000X\005\000\000\000\000\000\000`\003\000\000\000\000\000\000<\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\326\007\000\000\000\000\000\000\261\002\000\000\000\000\000\000\360\004\000\000\000\000\000\000\032\003\000\000\000\000\000\000\374\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\004\000\000\000\000\000\000\354\003\000\000\000\000\000\000B\014\000\000\000\000\000\000c\005\000\000\000\000\000\000\351\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\254\005\000\000\000\000\000\000\020\002\000\000\000\000\000\000\363\007\000\000\000\000\000\000\265\005\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\002\000\000\000\000\000\000]\004\000\000\000\000\000\000p\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\033\004\000\000\000\000\000\000-\006\000\000\000\000\000\000.\007\000\000\000\000\000\000\311\003\000\000\000\000\000\000r\006\000\000\000\000\000\000\323\002\000\000\000\000\000\000\216\002\000\000\000\000\000\000\264\004\000\000\000\000\000\000)\004\000\000\000\000\000\000\000\003\000\000\000\000\000\0009\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000-\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\255\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\003\000\000\000\000\000\000\341\003\000\000\000\000\000\000D\004\000\000\000\000\000\000}\002\000\000\000\000\000\000\331\002\000\000\000\000\000\000^\005\000\000\000\000\000\000p\005\000\000\000\000\000\000m\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\213\004\000\000\000\000\000\000G\004\000\000\000\000\000\000&\003\000\000\000\000\000\000b\004\000\000\000\000\000\000\355\005\000\000\000\000\000\000\330\005\000\000\000\000\000\000\257\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000`\003\000\000\000\000\000\000N\003\000\000\000\000\000\000\200\001\000\000\000\000\000\000t\001\000\000\000\000\000\000@\003\000\000\000\000\000\000]\003\000\000\000\000\000\000\214\004\000\000\000\000\000\000\261\002\000\000\000\000\000\000\032\004\000\000\000\000\000\000x\004\000\000\000\000\000\000\372\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\325\004\000\000\000\000\000\000t`\004\000\000\000\000\000\000v\002\000\000\000\000\000\000\250\003\000\000\000\000\000\000\017\003\000\000\000\000\000\000@\003\000\000\000\000\000\000\036\007\000\000\000\000\000\000\312\005\000\000\000\000\000\000`\003\000\000\000\000\000\000\362\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000\334\002\000\000\000\000\000\000\\\004\000\000\000\000\000\000\322\003\000\000\000\000\000\000\204\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\340\004\000\000\000\000\000\000|\002\000\000\000\000\000\000\022\006\000\000\000\000\000\000jv\002\000\000\000\000\000\000-\003\000\000\000\000\000\000\363\002\000\000\000\000\000\000p\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000=\010\000\000\000\000\000\000\r\002\000\000\000\000\000\000\035\004\000\000\000\000\000\000\010\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\316\005\000\000\000\000\000\000\031\003\000\000\000\000\000\000]\006\000\000\000\000\000\000p\005\000\000\000\000\000\000r\004\000\000\000\000\000\000\035\010\000\000\000\000\000\000~\005\000\000\000\000\000\000\375\003\000\000\000\000\000\000\200\005\000\000\000\000\000\000\244\004\000\000\000\000\000\000\274\002\000\000\000\000\000\000\342\002\000\000\000\000\000\000\240\002\000\000\000\000\000\000\270\004\000\000\000\000\000\000\305\005\000\000\000\000\000\000p\004\000\000\000\000\000\000W\003\000\000\000\000\000\000G\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\376\007\000\000\000\000\000\000\334\003\000\000\000\000\000\000\233\003\000\000\000\000\000\000\031\003\000\000\000\000\000\000\013\005\000\000\000\000\000\000Z\006\000\000\000\000\000\000\253\004\000\000\000\000\000\000\246\004\000\000\000\000\000\000j\003\000\000\000\000\000\000\'\002\000\000\000\000\000\000\213\005\000\000\000\000\000\000R\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\214\t\000\000\000\000\000\000\272\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\237\003\000\000\000\000\000\000X\004\000\000\000\000\000\000h\002\000\000\000\000\000\000\324\003\000\000\000\000\000\000~\003\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\007\000\000\000\000\000\000\214\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000h\001\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000,\005\000\000\000\000\000\000\330\002\000\000\000\000\000\000l\003\000\000\000\000\000\000\016\001\000\000\000\000\000\000[\003\000\000\000\000\000\000\314\004\000\000\000\000\000\000\300\003\000\000\000\000\000\000\325\002\000\000\000\000\000\000(\004\000\000\000\000\000\000\316\002\000\000\000\000\000\000\230\004\000\000\000\000\000\000\037\005\000\000\000\000\000\000\313\003\000\000\000\000\000\000\316\006\000\000\000\000\000\000P\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\255\003\000\000\000\000\000\000\242\006\000\000\000\000\000\000`\003\000\000\000\000\000\000p\003\000\000\000\000\000\000\320\004\000\000\000\000\000\0000\006\000\000\000\000\000\000\014\003\000\000\000\000\000\000;\006\000\000\000\000\000\000d\003\000\000\000\000\000\000\201\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\264\003\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\260\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\010\001\000\000\000\000\000\000\220\003\000\000\000\000\000\000E\005\000\000\000\000\000\000\010\002\000\000\000\000\000\0009\005\000\000\000\000\000\000v\004\000\000\000\000\000\000\270\003\000\000\000\000\000\000\330\004\000\000\000\000\000\000\270\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\002\000\000\000\000\000\000\224\002\000\000\000\000\000\000\307\005\000\000\000\000\000\000\006\004\000\000\000\000\000\000\002\004\000\000\000\000\000\000\331\002\000\000\000\000\000\000b\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\350\002\000\000\000\000\000\000&\005\000\000\000\000\000\000`\003\000\000\000\000\000\000y\004\000\000\000\000\000\000\364\002\000\000\000\000\000\000\344\004\000\000\000\000\000\000\326\005\000\000\000\000\000\000\332\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000\327\003\000\000\000\000\000\000D\007\000\000\000\000\000\000r\006\000\000\000\000\000\000Z\003\000\000\000\000\000\000D\003\000\000\000\000\000\000\005\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\217\007\000\000\000\000\000\000\264\004\000\000\000\000\000\000N\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\003\000\000\000\000\000\000\325\004\000\000\000\000\000\000\371\002\000\000\000\000\000\000\205\005\000\000\000\000\000\000I\004\000\000\000\000\000\000\346\002\000\000\000\000\000\000\\\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000\274\003\000\000\000\000\000\000\205\003\000\000\000\000\000\000@\003\000\000\000\000\000\000y\004\000\000\000\000\000\000\005\004\000\000\000\000\000\000]\004\000\000\000\000\000\000\330\005\000\000\000\000\000\000\310\002\000\000\000\000\000\000\212\002\000\000\000\000\000\000\224\002\000\000\000\000\000\000\005\003\000\000\000\000\000\000\206\007\000\000\000\000\000\000\333\002\000\000\000\000\000\000h\002\000\000\000\000\000\000\254\004\000\000\000\000\000\000\330\002\000\000\000\000\000\000\306\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\211\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000,\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000Q\003\000\000\000\000\000\000\020\004\000\000\000\000\000\000P\003\000\000\000\000\000\000\034\002\000\000\000\000\000\000\242\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000q\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000 \006\000\000\000\000\000\000\362\003\000\000\000\000\000\000N\005\000\000\000\000\000\000\036\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000O\003\000\000\000\000\000\000\n\003\000\000\000\000\000\000\321\005\000\000\000\000\000\000\036\010\000\000\000\000\000\000\020\003\000\000\000\000\000\000\256\005\000\000\000\000\000\000\365\003\000\000\000\000\000\000X\002\000\000\000\000\000\000p\005\000\000\000\000\000\000X\002\000\000\000\000\000\000\255\003\000\000\000\000\000\000\354\005\000\000\000\000\000\000x\004\000\000\000\000\000\000+\004\000\000\000\000\000\000\027\006\000\000\000\000\000\000\343\001\000\000\000\000\000\000K\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\212\002\000\000\000\000\000\000g\004\000\000\000\000\000\000\010\007\000\000\000\000\000\000l\003\000\000\000\000\000\000n\005\000\000\000\000\000\000\344\002\000\000\000\000\000\000`\003\000\000\000\000\000\000\213\003\000\000\000\000\000\000\020\002\000\000\000\000\000\000P\003\000\000\000\000\000\000\371\004\000\000\000\000\000\000\226\003\000\000\000\000\000\000g\004\000\000\000\000\000\000\343\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\254\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000B\004\000\000\000\000\000\000\036\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\017\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000|\004\000\000\000\000\000\000\\\005\000\000\000\000\000\000\352\003\000\000\000\000\000\000f\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\004\000\000\000\000\000\000~\003\000\000\000\000\000\000$\003\000\000\000\000\000\000i\000\000\000\000\000\000\000@\003\000\000\000\000\000\000\244\002\000\000\000\000\000\000\240\004\000\000\000\000\000\000(\004\000\000\000\000\000\000\266\005\000\000\000\000\000\000U\004\000\000\000\000\000\000`\003\000\000\000\000\000\000B\004\000\000\000\000\000\000\204\004\000\000\000\000\000\000(\003\000\000\000\000\000\000\033\003\000\000\000\000\000\000|\003\000\000\000\000\000\000\242\006\000\000\000\000\000\000Z\006\000\000\000\000\000\0000\003\000\000\000\000\000\000\251\010\000\000\000\000\000\000\341\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000\226\003\000\000\000\000\000\000#\004\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\267\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\220\003\000\000\000\000\000\000Z\003\000\000\000\000\000\000\340\003\000\000\000\000\000\000\017\003\000\000\000\000\000\000\206\006\000\000\000\000\000\000l\003\000\000\000\000\000\000 \004\000\000\000\000\000\000W\006\000\000\000\000\000\000\371\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\346\002\000\000\000\000\000\000Q\004\000\000\000\000\000\000\364\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\351\003\000\000\000\000\000\000d\002\000\000\000\000\000\000\"\002\000\000\000\000\000\000\340\001\000\000\000\000\000\000n\004\000\000\000\000\000\000P\004\000\000\000\000\000\000\240\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\370\004\000\000\000\000\000\000$\005\000\000\000\000\000\000D\006\000\000\000\000\000\000\226\006\000\000\000\000\000\000f\004\000\000\000\000\000\000\235\004\000\000\000\000\000\000@\003\000\000\000\000\000\000\331\006\000\000\000\000\000\000\304\003\000\000\000\000\000\000\272\005\000\000\000\000\000\000\235\003\000\000\000\000\000\000q\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000I\002\000\000\000\000\000\000X\002\000\000\000\000\000\000\230\004\000\000\000\000\000\000Y\004\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000\340\003\000\000\000\000\000\000\240\005\000\000\000\000\000\000`\006\000\000\000\000\000\0003\003\000\000\000\000\000\000@\004\000\000\000\000\000\000x\004\000\000\000\000\000\000P\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\211\004\000\000\000\000\000\000`~\003\000\000\000\000\000\000a\004\000\000\000\000\000\000\260\003\000\000\000\000\000\000\311\004\000\000\000\000\000\000\362\004\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\004\000\000\000\000\000\000\345\001\000\000\000\000\000\000\212\007\000\000\000\000\000\000P\003\000\000\000\000\000\000\002\003\000\000\000\000\000\000t\005\000\000\000\000\000\000\224\003\000\000\000\000\000\0006\003\000\000\000\000\000\000\356\002\000\000\000\000\000\000\244\006\000\000\000\000\000\000\353\002\000\000\000\000\000\000\032\004\000\000\000\000\000\000\242\005\000\000\000\000\000\000\357\003\000\000\000\000\000\000\243\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\002\000\000\000\000\000\000&\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000B\005\000\000\000\000\000\000\331\003\000\000\000\000\000\000y\006\000\000\000\000\000\000\"\002\000\000\000\000\000\000\256\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\002\000\000\000\000\000\000\376\003\000\000\000\000\000\000:\004\000\000\000\000\000\000*\003\000\000\000\000\000\000\340\005\000\000\000\000\000\000\304\004\000\000\000\000\000\000\200\001\000\000\000\000\000\000R\005\000\000\000\000\000\000l\004\000\000\000\000\000\000\257\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000B\005\000\000\000\000\000\000\035\006\000\000\000\000\000\000r\003\000\000\000\000\000\000\364\004\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\256\002\000\000\000\000\000\0008\003\000\000\000\000\000\000:\005\000\000\000\000\000\000v\006\000\000\000\000\000\000\230\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\006\000\000\000\000\000\000\037\004\000\000\000\000\000\000\"\002\000\000\000\000\000\000v\002\000\000\000\000\000\000n\004\000\000\000\000\000\000 \003\000\000\000\000\000\000\032\005\000\000\000\000\000\000\303\005\000\000\000\000\000\000\334\t~`\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000\"\005\000\000\000\000\000\000\254\002\000\000\000\000\000\0002\004\000\000\000\000\000\000\240\002\000\000\000\000\000\000\367\004\000\000\000\000\000\000\"\001\000\000\000\000\000\000\266\003\000\000\000\000\000\000\362\003\000\000\000\000\000\000\217\002\000\000\000\000\000\000v\002\000\000\000\000\000\000\267\005\000\000\000\000\000\000\216\003\000\000\000\000\000\000d\003\000\000\000\000\000\000\234\003\000\000\000\000\000\000,\007\000\000\000\000\000\000\005\003\000\000\000\000\000\000#\003\000\000\000\000\000\0000\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000A\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\230\001\000\000\000\000\000\000~\003\000\000\000\000\000\000\025\002\000\000\000\000\000\000\020\004\000\000\000\000\000\000\364\003\000\000\000\000\000\000\020\006\000\000\000\000\000\000\240\002\000\000\000\000\000\000\272\002\000\000\000\000\000\000\200\001\000\000\000\000\000\000\355\003\000\000\000\000\000\000]\005\000\000\000\000\000\000\372\005\000\000\000\000\000\000O\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000b\004\000\000\000\000\000\000\316\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000h`\003\000\000\000\000\000\000\235\005\000\000\000\000\000\000\303\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000,\006\000\000\000\000\000\000\205\003\000\000\000\000\000\000W\003\000\000\000\000\000\000\020\005\000\000\000\000\000\000~\003\000\000\000\000\000\000\256\004\000\000\000\000\000\000P\005\000\000\000\000\000\000\336\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000\277\003\000\000\000\000\000\000g\004\000\000\000\000\000\000\212\007\000\000\000\000\000\000H\004\000\000\000\000\000\000\355\004\000\000\000\000\000\000q\002\000\000\000\000\000\000>\006\000\000\000\000\000\000\270\003\000\000\000\000\000\000\223\006\000\000\000\000\000\000l\003\000\000\000\000\000\0002\003\000\000\000\000\000\000\333\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\004\000\000\000\000\000\000@\006\000\000\000\000\000\000\\\t\000\000\000\000\000\000`\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\020\003\000\000\000\000\000\000\322\003\000\000\000\000\000\000X\006\000\000\000\000\000\000?\003\000\000\000\000\000\000\342\003\000\000\000\000\000\000\341\004\000\000\000\000\000\000\010\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000\310\004\000\000\000\000\000\000\227\002\000\000\000\000\000\000\330\002\000\000\000\000\000\000o\003\000\000\000\000\000\000/\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000\033\004\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "tensors/component_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1200
          }
        }
        tensor_content: "t.\003\000\000\000\000\000\374\304\002\000\000\000\000\000\014i\003\000\000\000\000\000\340\"\002\000\000\000\000\000\220\320\003\000\000\000\000\000\230.\002\000\000\000\000\0008\257\004\000\000\000\000\000@\r\003\000\000\000\000\000l\373\001\000\000\000\000\000\360\314\001\000\000\000\000\000\334\371\001\000\000\000\000\000\250C\005\000\000\000\000\000\2002\002\000\000\000\000\000\314C\004\000\000\000\000\000He\002\000\000\000\000\000\240\003\002\000\000\000\000\000\010F\002\000\000\000\000\000\220_\001\000\000\000\000\000\030m\002\000\000\000\000\000\370\036\002\000\000\000\000\000\264\366\004\000\000\000\000\000\210 \002\000\000\000\000\000p\202\003\000\000\000\000\000l\373\001\000\000\000\000\000\220Y\002\000\000\000\000\000,\351\003\000\000\000\000\000\220\016\002\000\000\000\000\000P\253\004\000\000\000\000\000\214*\003\000\000\000\000\000\224\013\001\000\000\000\000\000@\234\000\000\000\000\000\000fG\002\000\000\000\000\000\274\276\002\000\000\000\000\000|\206\002\000\000\000\000\000\374;\004\000\000\000\000\000\010\267\004\000\000\000\000\000h6\002\000\000\000\000\000\250U\002\000\000\000\000\000\310\251\001\000\000\000\000\000P@\001\000\000\000\000\000\000q\002\000\000\000\000\000\020\230\002\000\000\000\000\000\2002\002\000\000\000\000\000\312\374\001\000\000\000\000\000\310&\002\000\000\000\000\000\234\341\004\000\000\000\000\000F\250\003\000\000\000\000\000d\317\003\000\000\000\000\000h\271\001\000\000\000\000\000\030\360\001\000\000\000\000\000h\263\002\000\000\000\000\000D\277\001\000\000\000\000\000\260\255\001\000\000\000\000\000\350\337\005\000\000\000\000\000\320\373\001\000\000\000\000\000\024\301\002\000\000\000\000\000\324\241\002\000\000\000\000\000\224\377\002\000\000\000\000\000\374\261\006\000\000\000\000\000\344\347\001\000\000\000\000\0000i\002\000\000\000\000\000\210\212\001\000\000\000\000\000\004\027\003\000\000\000\000\000\340\"\002\000\000\000\000\000lY\003\000\000\000\000\000H\326\004\000\000\000\000\000 \277\002\000\000\000\000\000\320r\003\000\000\000\000\000\2008\001\000\000\000\000\000\350n\003\000\000\000\000\000 \271\003\000\000\000\000\000\334\371\001\000\000\000\000\000\250\322\002\000\000\000\000\000\0046\002\000\000\000\000\000\210\243\001\000\000\000\000\000xc\001\000\000\000\000\000F\022\002\000\000\000\000\000\030\360\001\000\000\000\000\0004\025\002\000\000\000\000\000\260\255\001\000\000\000\000\000\334\363\002\000\000\000\000\000\234W\002\000\000\000\000\000\010\275\003\000\000\000\000\000$\356\001\000\000\000\000\0004\222\002\000\000\000\000\000\240\367\003\000\000\000\000\000\260\247\002\000\000\000\000\000\224\202\002\000\000\000\000\000\010L\001\000\000\000\000\000\320\342\001\000\000\000\000\000L\255\001\000\000\000\000\000(\201\001\000\000\000\000\000\254~\002\000\000\000\000\000\014\013\002\000\000\000\000\000\316\037\003\000\000\000\000\000\250\322\002\000\000\000\000\000\360C\003\000\000\000\000\000\036rx]\002\000\000\000\000\000\000\342\004\000\000\000\000\000\226\200\002\000\000\000\000\000 \277\002\000\000\000\000\000\240\206\001\000\000\000\000\000@\023\002\000\000\000\000\000,Y\002\000\000\000\000\000\010\303\002\000\000\000\000\000\024J\001\000\000\000\000\000\000\364\001\000\000\000\000\000\330S\001\000\000\000\000\000x]\002\000\000\000\000\000\360I\002\000\000\000\000\000\320r\003\000\000\000\000\000 \271\003\000\000\000\000\000\336L\002\000\000\000\000\000`[\003\000\000\000\000\000 \277\002\000\000\000\000\000\260\247\002\000\000\000\000\000\230.\002\000\000\000\000\000\370\233\002\000\000\000\000\000p\202\003\000\000\000\000\000L\210\003\000\000\000\000\0008\301\001\000\000\000\000\000\240\367\003\000\000\000\000\000p\210\002\000\000\000\000\000\340\034\003\000\000\000\000\000H\350\001\000\000\000\000\000\320\373\001\000\000\000\000\000(\232\001\000\000\000\000\000$e\003\000\000\000\000\000\310&\002\000\000\000\000\0008\301\001\000\000\000\000\000\220\334\001\000\000\000\000\000\262\256\005\000\000\000\000\0000\346\002\000\000\000\000\000\370\225\003\000\000\000\000\000H\350\001\000\000\000\000\000\2304\001\000\000\000\000\000\274\253\001\000\000\000\000\000\274\034\004\000\000\000\000\000\264\343\003\000\000\000\000\000\000\342\004\000\000\000\000\000\304z\002\000\000\000\000\000TK\006\000\000\000\000\000`[\003\000\000\000\000\000 \223\001\000\000\000\000\000\300Q\002\000\000\000\000\000\014\362\001\000\000\000\000\0000\346\002\000\000\000\000\000\370\367\004\000\000\000\000\000\314\314\002\000\000\000\000\000\240z\003\000\000\000\000\000\364\365\001\000\000\000\000\000\330G\003\000\000\000\000\000\230\245\003\000\000\000\000\000\270|\002\000\000\000\000\000\300\316\002\000\000\000\000\0008\265\003\000\000\000\000\00088\003\000\000\000\000\000\324\241\002\000\000\000\000\000M\250\007\000\000\000\000\000\240\206\001\000\000\000\000\000h\263\002\000\000\000\000\000\244\r\003\000\000\000\000\000\300\324\001\000\000\000\000\000@\r\003\000\000\000\000\000\030\360\001\000\000\000\000\000x?\007\000\000\000\000\000\310\243\002\000\000\000\000\000X\017\002\000\000\000\000\000\371V\002\000\000\000\000\0000]\004\000\000\000\000\000xh6\002\000\000\000\000\000\320~\001\000\000\000\000\000\220\326\002\000\000\000\000\000\006\333\003\000\000\000\000\000`a\002\000\000\000\000\000\326w\002\000\000\000\000\0002\r\002\000\000\000\000\000P4\003\000\000\000\000\000\370\241\001\000\000\000\000\000\314\300\004\000\000\000\000\000H\215\002\000\000\000\000\000d \003\000\000\000\000\000@\r\003\000\000\000\000\000\274\276\002\000\000\000\000\000\350z\001\000\000\000\000\000\312\344\005\000\000\000\000\000\200\265\001\000\000\000\000\000\320l\004\000\000\000\000\000\020\236\001\000\000\000\000\000H\350\001\000\000\000\000\000\364\357\002\000\000\000\000\000 B\002\000\000\000\000\0008&\006\000\000\000\000\000$q\001\000\000\000\000\000\310\364\001\000\000\000\000\000\264M\003\000\000\000\000\000\234]\001\000\000\000\000\000\234\324\002\000\000\000\000\000\304\367\002\000\000\000\000\0000\332\004\000\000\000\000\000h\271\001\000\000\000\000\000d\001\004\000\000\000\000\000\244\257\001\000\000\000\000\000\2304\001\000\000\000\000\000\300\324\001\000\000\000\000\000\310 \003\000\000\000\000\000\\\257\003\000\000\000\000\000(\027\002\000\000\000\000\000\340\"\002\000\000\000\000\000 \277\002\000\000\000\000\000\010:\004\000\000\000\000\000\324*\001\000\000\000\000\000\370\225\003\000\000\000\000\000\310\243\002\000\000\000\000\0000i\002\000\000\000\000\000h6\002\000\000\000\000\000p\202\003\000\000\000\000\000\214*\003\000\000\000\000\000`[\003\000\000\000\000\000L\210\003\000\000\000\000\000\350z\001\000\000\000\000\000\200\257\002\000\000\000\000\000 6\004\000\000\000\000\000\330M\002\000\000\000\000\000\320\373\001\000\000\000\000\000(\035\001\000\000\000\000\000\214\255\002\000\000\000\000\000\250\322\002\000\000\000\000\000,\275\002\000\000\000\000\000\264\326\001\000\000\000\000\000 B\002\000\000\000\000\000\020\017\004\000\000\000\000\000\\\257\003\000\000\000\000\000\320l\004\000\000\000\000\000\370\036\002\000\000\000\000\000T\346\001\000\000\000\000\000\310 \003\000\000\000\000\000(\021\003\000\000\000\000\000\310&\002\000\000\000\000\000BV\006\000\000\000\000\000\000\356\002\000\000\000\000\000\224|\003\000\000\000\000\000\250\322\002\000\000\000\000\000\214*\003\000\000\000\000\000x\273\003\000\000\000\000\000\000\274\002\000\000\000\000\000\\\203\002\000\000\000\000\000\030m\002\000\000\000\000\000\300W\001\000\000\000\000\000\220\334\001\000\000\000\000\000\347W\002\000\000\000\000\000\016\217\003\000\000\000\000\000\334\022\002\000\000\000\000\000\270\377\001\000\000\000\000\000\370\225\003\000\000\000\000\000X\214\002\000\000\000\000\000\244,\002\000\000\000\000\000\300Q\002\000\000\000\000\000\230\245\003\000\000\000\000\000\230\253\002\000\000\000\000\000$k\002\000\000\000\000\000He\002\000\000\000\000\000\370\022\004\000\000\000\000\000\310 \003\000\000\000\000\000\214I\002\000\000\000\000\000X\200\004\000\000\000\000\000\354\252\004\000\000\000\000\000\350n\003\000\000\000\000\000\234]\001\000\000\000\000\000DB\001\000\000\000\000\000@~\005\000\000\000\000\000\340\206\002\000\000\000\000\000\240\003\002\000\000\000\000\000\\\324\001\000\000\000\000\000\330\270\005\000\000\000\000\000P\267\002\000\000\000\000\000T\340\002\000\000\000\000\000\240\367\003\000\000\000\000\000\260\036\004\000\000\000\000\000\240\367\003\000\000\000\000\000l\334\002\000\000\000\000\000s:\005\000\000\000\000\000\320f\005\000\000\000\000\000\310\227\004\000\000\000\000\000\337\354\001\000\000\000\000\000P\261\003\000\000\000\000\000\330S\001\000\000\000\000\000\240\361\004\000\000\000\000\000b7\002\000\000\000\000\000\344E\003\000\000\000\000\000\2600\001\000\000\000\000\000\330\320\001\000\000\000\000\000\370\036\002\000\000\000\000\000`U\004\000\000\000\000\000\230(\003\000\000\000\000\000\000\356\002\000\000\000\000\000V~\003\000\000\000\000\000R\302\005\000\000\000\000\000\360C\003\000\000\000\000\000\004\027\003\000\000\000\000\000x]\002\000\000\000\000\000\224\030\003\000\000\000\000\000P@\001\000\000\000\000\000\314U\001\000\000\000\000\000\020\017\004\000\000\000\000\000\010L\001\000\000\000\000\000\250#\002\000\000\000\000\000\314O\002\000\000\000\000\000<g\002\000\000\000\000\000\220Y\002\000\000\000\000\000\242\253\006\000\000\000\000\000m\332\004\000\000\000\000\0000\346\002\000\000\000\000\000\030s\001\000\000\000\000\000\254\235\001\000\000\000\000\000\340\"\002\000\000\000\000\000\\\265\002\000\000\000\000\000\310\243\002\000\000\000\000\000p\013\002\000\000\000\000\000\320\373\001\000\000\000\000\000\300E\004\000\000\000\000\000`a\002\000\000\000\000\000h6\002\000\000\000\000\000d\007\003\000\000\000\000\000\360\314\001\000\000\000\000\0000\346\002\000\000\000\000\0008>\002\000\000\000\000\000\030m\002\000\000\000\000\000\210\204\002\000\000\000\000\000\240\003\002\000\000\000\000\000\320x\002\000\000\000\000\000p\241\002\000\000\000\000\000 \r\002\000\000\000\000\000H\350\001\000\000\000\000\000x\340\001\000\000\000\000\000lY\003\000\000\000\000\000H\356\000\000\000\000\000\000 B\002\000\000\000\000\000 0\005\000\000\000\000\000\300\004\006\000\000\000\000\0008\273\002\000\000\000\000\000\030\360\001\000\000\000\000\000f\335\002\000\000\000\000\000\374A\003\000\000\000\000\000\340(\001\000\000\000\000\000\200\251\003\000\000\000\000\000\000\356\002\000\000\000\000\000h<\001\000\000\000\000\000H\350\001\000\000\000\000\000\030\352\002\000\000\000\000\000\020\200\006\000\000\000\000\000\330\320\001\000\000\000\000\000\330G\003\000\000\000\000\000\004\240\001\000\000\000\000\000\240\206\001\000\000\000\000\000\310\251\001\000\000\000\000\000\350\367\001\000\000\000\000\000x\340\001\000\000\000\000\000\034\226\002\000\000\000\000\000\270\005\001\000\000\000\000\000h\255\003\000\000\000\000\000\374\276\003\000\000\000\000\000~\204\002\000\000\000\000\000\340\245\001\000\000\000\000\000\320\357\003\000\000\000\000\000@\220\002\000\000\000\000\000\360I\002\000\000\000\000\0008\301\001\000\000\000\000\000h\263\002\000\000\000\000\000\300E\004\000\000\000\000\000&/\005\000\000\000\000\000`\352\000\000\000\000\000\000h6\002\000\000\000\000\0000c\003\000\000\000\000\0008\301\001\000\000\000\000\000\240z\003\000\000\000\000\000\216\303\002\000\000\000\000\000\374G\002\000\000\000\000\000\230\245\003\000\000\000\000\0000\354\001\000\000\000\000\000\260*\002\000\000\000\000\000\334%\003\000\000\000\000\000\330G\003\000\000\000\000\000h\271\001\000\000\000\000\000x\316\004\000\000\000\000\000\370\036\002\000\000\000\000\000X\017\002\000\000\000\000\00082\004\000\000\000\000\000\320\251\001\000\000\000\000\000H\373\002\000\000\000\000\000\230\253\002\000\000\000\000\000\230M\001\000\000\000\000\000\0348\001\000\000\000\000\000\204\336\001\000\000\000\000\000\010\303\002\000\000\000\000\000h<\001\000\000\000\000\000 <\003\000\000\000\000\000 \305\001\000\000\000\000\000\330\320\001\000\000\000\000\000\356`\001\000\000\000\000\000\260\255\001\000\000\000\000\000\370w\010\000\000\000\000\000\360\314\001\000\000\000\000\000T|\002\000\000\000\000\000\324\241\002\000\000\000\000\000P4\003\000\000\000\000\000\014\362\001\000\000\000\000\0000\346\002\000\000\000\000\000\334\014\003\000\000\000\000\000\314\322\001\000\000\000\000\000\300\324\001\000\000\000\000\000\260\255\001\000\000\000\000\000\300E\004\000\000\000\000\000\340\034\003\000\000\000\000\000P4\003\000\000\000\000\000`\336\002\000\000\000\000\000\214\255\002\000\000\000\000\000\320~\001\000\000\000\000\000\000\350\003\000\000\000\000\000\350t\002\000\000\000\000\000\260\255\001\000\000\000\000\000\013\005\004\000\000\000\000\000x]\002\000\000\000\000\000\257\363\000\000\000\000\000\000\034\341\002\000\000\000\000\000`\344\001\000\000\000\000\0004\272\002\000\000\000\000\000X\214\002\000\000\000\000\000D<\002\000\000\000\000\000\220\320\003\000\000\000\000\000x\332\002\000\000\000\000\000 <\003\000\000\000\000\0000\346\002\000\000\000\000\000 B\002\000\000\000\000\000\300\266\006\000\000\000\000\000x\324\003\000\000\000\000\000\224\005\002\000\000\000\000\000\0040\003\000\000\000\000\000`\314\005\000\000\000\000\000(\210\004\000\000\000\000\000\177]\001\000\000\000\000\000p\371\004\000\000\000\000\000\360\264\005\000\000\000\000\000x]\002\000\000\000\000\000\240\200\002\000\000\000\000\000\224\005\002\000\000\000\000\0008>\002\000\000\000\000\000`a\002\000\000\000\000\000\230\253\002\000\000\000\000\000\000q\002\000\000\000\000\000\360O\001\000\000\000\000\0008\301\001\000\000\000\000\000\210\007\002\000\000\000\000\000\361\242\002\000\000\000\000\000x]\002\000\000\000\000\000\244d\001\000\000\000\000\000T\210\000\000\000\000\000\000\260\217\006\000\000\000\000\000\300\316\002\000\000\000\000\000\320\373\001\000\000\000\000\000\300\324\001\000\000\000\000\000h\271\001\000\000\000\000\000\214u\003\000\000\000\000\000\340\"\002\000\000\000\000\000\350h\004\000\000\000\000\0008>\002\000\000\000\000\000T\346\001\000\000\000\000\000\330G\003\000\000\000\000\000\254-\003\000\000\000\000\000\350t\002\000\000\000\000\000T\346\001\000\000\000\000\000$\204\002\000\000\000\000\000\251\027\003\000\000\000\000\000l\373\001\000\000\000\000\000p\013\002\000\000\000\000\000\364x\001\000\000\000\000\000\255%\006\000\000\000\000\0000i\002\000\000\000\000\000(\013\004\000\000\000\000\00088\003\000\000\000\000\000\020\222\003\000\000\000\000\000\n\237\001\000\000\000\000\000\360I\002\000\000\000\000\000\030m\002\000\000\000\000\000\256\321\002\000\000\000\000\000f\321\004\000\000\000\000\000\200\257\002\000\000\000\000\000\240\003\002\000\000\000\000\0005\317\006\000\000\000\000\000\360O\001\000\000\000\000\000\260\017\003\000\000\000\000\000\230\253\002\000\000\000\000\000\000\364\001\000\000\000\000\000\354\243\001\000\000\000\000\000\204\231\000\000\000\000\000\000P\267\002\000\000\000\000\000\354\243\001\000\000\000\000\000`\336\002\000\000\000\000\000\222\262\001\000\000\000\000\0000i\002\000\000\000\000\000\200&\004\000\000\000\000\000x\316\004\000\000\000\000\000\300\310\003\000\000\000\000\000\002A\003\000\000\000\000\000\210\007\002\000\000\000\000\000\321\275\002\000\000\000\000\000\210~\003\000\000\000\000\000P4\003\000\000\000\000\000\334\371\001\000\000\000\000\000H\350\001\000\000\000\000\000X\003\004\000\000\000\000\000\340\"\002\000\000\000\000\000t\267\001\000\000\000\000\000\014\346\003\000\000\000\000\000\340\245\001\000\000\000\000\000`U\004\000\000\000\000\000hl\003\000\000\000\000\000\020\230\002\000\000\000\000\000\370\036\002\000\000\000\000\000\344\316\001\000\000\000\000\000h6\002\000\000\000\000\000\224\202\002\000\000\000\000\000P:\002\000\000\000\000\000\254\001\002\000\000\000\000\000\214\306\002\000\000\000\000\000m\335\003\000\000\000\000\000\344\316\001\000\000\000\000\000\210\365\004\000\000\000\000\000\210\007\002\000\000\000\000\000\354\244\005\000\000\000\000\000\320\373\001\000\000\000\000\000(\027\002\000\000\000\000\000\230.\002\000\000\000\000\000\2146\001\000\000\000\000\000,\326\002\000\000\000\000\000n\345\006\000\000\000\000\000\020\033\002\000\000\000\000\000\340\"\002\000\000\000\000\000\260\255\001\000\000\000\000\000\030\336\004\000\000\000\000\000H\277\001\000\000\000\000\000\231\366\002\000\000\000\000\000\234Q\003\000\000\000\000\000\330M\002\000\000\000\000\00082\004\000\000\000\000\000\310&\002\000\000\000\000\000`[\003\000\000\000\000\000\330M\002\000\000\000\000\000H_\003\000\000\000\000\000\310 \003\000\000\000\000\000\300Q\002\000\000\000\000\000\350n\003\000\000\000\000\000\274z\005\000\000\000\000\000\344\316\001\000\000\000\000\000\250\306\004\000\000\000\000\000 B\002\000\000\000\000\000|\375\003\000\000\000\000\0008>\002\000\000\000\000\000\354&\001\000\000\000\000\000\034\031\002\000\000\000\000\000\240\313\002\000\000\000\000\000\034\234\001\000\000\000\000\000\275\315\004\000\000\000\000\000h\247\004\000\000\000\000\000\270\005\001\000\000\000\000\000\200\251\003\000\000\000\000\000X\017\002\000\000\000\000\0004\222\002\000\000\000\000\000\036\205\002\000\000\000\000\000\000q\002\000\000\000\000\000|\"\002\000\000\000\000\000\250U\002\000\000\000\000\000X\017\002\000\000\000\000\0004\222\002\000\000\000\000\000`\344\001\000\000\000\000\000\\2\003\000\000\000\000\000DB\001\000\000\000\000\000\210 \002\000\000\000\000\000\2002\002\000\000\000\000\000@\r\003\000\000\000\000\000`\352\000\000\000\000\000\000Hk\001\000\000\000\000\000\010L\001\000\000\000\000\000q\t\004\000\000\000\000\000P.\004\000\000\000\000\000\320r\003\000\000\000\000\000\250C\005\000\000\000\000\000\300Q\002\000\000\000\000\000\276\250\005\000\000\000\000\000\222/\002\000\000\000\000\000\374\177\001\000\000\000\000\000x]\002\000\000\000\000\000x]\002\000\000\000\000\000\024J\001\000\000\000\000\000~$\003\000\000\000\000\000\340\245\001\000\000\000\000\000\030\352\002\000\000\000\000\000X\017\002\000\000\000\000\0000W\005\000\000\000\000\000\300W\001\000\000\000\000\000\\8\002\000\000\000\000\000\010F\002\000\000\000\000\000\334|\001\000\000\000\000\000X\214\002\000\000\000\000\000\014\005\003\000\000\000\000\000P\"\006\000\000\000\000\000\260\255\001\000\000\000\000\000\034\031\002\000\000\000\000\000Xt\006\000\000\000\000\000d\204\003\000\000\000\000\000\350\367\001\000\000\000\000\000\334\363\002\000\000\000\000\000@\220\002\000\000\000\000\000\034\031\002\000\000\000\000\000\274\245\002\000\000\000\000\000\260\224\001\000\000\000\000\000\210\204\002\000\000\000\000\000\334\355\003\000\000\000\000\000\340\"\002\000\000\000\000\000\024D\002\000\000\000\000\000\330S\001\000\000\000\000\000\274\253\001\000\000\000\000\000\024\257\005\000\000\000\000\000\364\365\001\000\000\000\000\000\230.\002\000\000\000\000\000\312n\002\000\000\000\000\000\310\243\002\000\000\000\000\000HY\004\000\000\000\000\000H_\003\000\000\000\000\000\214*\003\000\000\000\000\000#z\003\000\000\000\000\000@E\002\000\000\000\000\000@\373\005\000\000\000\000\000\214\370\002\000\000\000\000\000\310&\002\000\000\000\000\0008\205\013\000\000\000\000\000\230\034\005\000\000\000\000\000\300\247\001\000\000\000\000\000\274(\002\000\000\000\000\000\200\257\002\000\000\000\000\000\250[\001\000\000\000\000\000l\342\001\000\000\000\000\000\004\035\002\000\000\000\000\000\240\375\002\000\000\000\000\000\264\304\004\000\000\000\000\000\340\"\002\000\000\000\000\000\277\205\005\000\000\000\000\000\340\"\002\000\000\000\000\000\010@\003\000\000\000\000\000\330\326\000\000\000\000\000\000\260\233\004\000\000\000\000\0000\340\003\000\000\000\000\000T\275\002\000\000\000\000\000L\255\001\000\000\000\000\000 \313\000\000\000\000\000\000x\221\001\000\000\000\000\000H\342\002\000\000\000\000\000\350\367\001\000\000\000\000\000\304\375\001\000\000\000\000\000\210\204\002\000\000\000\000\000\014o\002\000\000\000\000\000He\002\000\000\000\000\000\0104\005\000\000\000\000\000\364\365\001\000\000\000\000\00082\004\000\000\000\000\000\230.\002\000\000\000\000\000T\346\001\000\000\000\000\000X\017\002\000\000\000\000\000\000\342\004\000\000\000\000\000\264\326\001\000\000\000\000\0000c\003\000\000\000\000\000\304\367\002\000\000\000\000\000\260\255\001\000\000\000\000\000X\222\001\000\000\000\000\000\324\233\003\000\000\000\000\000l\334\002\000\000\000\000\000$e\003\000\000\000\000\000H\001\002\000\000\000\000\000\340\245\001\000\000\000\000\000\270|\002\000\000\000\000\000<m\001\000\000\000\000\000\034\251\003\000\000\000\000\0008\273\002\000\000\000\000\0000\346\002\000\000\000\000\000\240\003\002\000\000\000\000\000\260*\002\000\000\000\000\0008\273\002\000\000\000\000\000\230\253\002\000\000\000\000\000 \277\002\000\000\000\000\000\030\223\004\000\000\000\000\000\340\231\003\000\000\000\000\000\373\016\004\000\000\000\000\0000\371\003\000\000\000\000\000\320~\001\000\000\000\000\000\364x\001\000\000\000\000\000\320x\002\000\000\000\000\000\250O\003\000\000\000\000\000,4\004\000\000\000\000\000`a\002\000\000\000\000\000\324\241\002\000\000\000\000\000 <\003\000\000\000\000\000\264l\002\000\000\000\000\000\310\274\002\000\000\000\000\000\320l\004\000\000\000\000\000\014\362\001\000\000\000\000\000\240\206\001\000\000\000\000\000\240H\003\000\000\000\000\000h$\005\000\000\000\000\000\260\036\004\000\000\000\000\000\304\007\004\000\000\000\000\000\224\377\002\000\000\000\000\000\000q\002\000\000\000\000\000\005O\003\000\000\000\000\000\2205\010\000\000\000\000\000\364\016\002\000\000\000\000\000p\216\001\000\000\000\000\000\370\241\001\000\000\000\000\000D\277\001\000\000\000\000\000\370\006\006\000\000\000\000\000\320x\002\000\000\000\000\000<a\003\000\000\000\000\000\244,\002\000\000\000\000\000\2002\002\000\000\000\000\000X\017\002\000\000\000\000\000\200\257\002\000\000\000\000\000\034\257\002\000\000\000\000\000\334\332\002\000\000\000\000\000|\206\002\000\000\000\000\000\000\364\001\000\000\000\000\000\334v\002\000\000\000\000\000\370\036\002\000\000\000\000\000(\216\003\000\000\000\000\000|\245\001\000\000\000\000\000l\334\002\000\000\000\000\000\310q\002\000\000\000\000\000p=\002\000\000\000\000\000\336\035\004\000\000\000\000\000\350n\003\000\000\000\000\000\304\367\002\000\000\000\000\000\370\233\002\000\000\000\000\000\2140\002\000\000\000\000\000\260\255\001\000\000\000\000\000\210f\007\000\000\000\000\000\230\253\002\000\000\000\000\000@\r\003\000\000\000\000\000L\255\001\000\000\000\000\000H\342\002\000\000\000\000\000\025\345\010\000\000\000\000\000\360\314\001\000\000\000\000\000`y\003\000\000\000\000\000L\021\002\000\000\000\000\000\014i\003\000\000\000\000\000\316p\002\000\000\000\000\000\020\236\001\000\000\000\000\000\010\303\002\000\000\000\000\000t4\002\000\000\000\000\000\271\332\000\000\000\000\000\000\314h\002\000\000\000\000\000 \305\001\000\000\000\000\000\204n\003\000\000\000\000\000(\027\002\000\000\000\000\000\230\"\004\000\000\000\000\000x]\002\000\000\000\000\000\000k\003\000\000\000\000\000\330\312\002\000\000\000\000\000Hk\001\000\000\000\000\000\350n\003\000\000\000\000\000\354 \002\000\000\000\000\000\230\214\003\000\000\000\000\000\350\337\005\000\000\000\000\000\274\253\001\000\000\000\000\000H\342\002\000\000\000\000\000\250\322\002\000\000\000\000\000\310?\002\000\000\000\000\000p\210\002\000\000\000\000\000\330M\002\000\000\000\000\000\310\235\003\000\000\000\000\000X\214\002\000\000\000\000\000\256\"\002\000\000\000\000\000\000\364\001\000\000\000\000\000\234W\002\000\000\000\000\000\240\206\001\000\000\000\000\000\2002\002\000\000\000\000\000\304\375\001\000\000\000\000\000\340\"\002\000\000\000\000\000<g\002\000\000\000\000\0004\253\002\000\000\000\000\000\310&\002\000\000\000\000\000,Y\002\000\000\000\000\000\370\233\002\000\000\000\000\000\010@\003\000\000\000\000\000|\t\002\000\000\000\000\000\200\251\003\000\000\000\000\000x\332\002\000\000\000\000\000\254\001\002\000\000\000\000\000\330G\003\000\000\000\000\000\240\200\002\000\000\000\000\0000iu\241\004\000\000\000\000\000\232\004\002\000\000\000\000\0000W\005\000\000\000\000\000 B\002\000\000\000\000\0004\025\002\000\000\000\000\000He\002\000\000\000\000\000l\334\002\000\000\000\000\000P\267\002\000\000\000\000\000\344\316\001\000\000\000\000\000\240\206\001\000\000\000\000\000\304\004\005\000\000\000\000\000h6\002\000\000\000\000\000L\021\002\000\000\000\000\000\340\026\004\000\000\000\000\000\374G\002\000\000\000\000\000\024\340\001\000\000\000\000\000\324\241\002\000\000\000\000\000\204[\002\000\000\000\000\000\210\204\002\000\000\000\000\000J\320\001\000\000\000\000\000\340\"\002\000\000\000\000\000\004\240\001\000\000\000\000\000i.\002\000\000\000\000\000IU\t\000\000\000\000\000X\017\002\000\000\000\000\000\260\255\001\000\000\000\000\000\250U\002\000\000\000\000\000 \277\002\000\000\000\000\000\200\251\003\000\000\000\000\000<\352\001\000\000\000\000\000\000\364\001\000\000\000\000\000\030\344\003\000\000\000\000\000\220\320\003\000\000\000\000\000\270\377\001\000\000\000\000\000\260\247\002\000\000\000\000\000\274Z\002\000\000\000\000\000\2140\002\000\000\000\000\000\300W\001\000\000\000\000\000h6\002\000\000\000\000\000\245\246\002\000\000\000\000\000\370$\001\000\000\000\000\000\357\211\000\000\000\000\000\000X\017\002\000\000\000\000\000\260\241\003\000\000\000\000\000t\261\002\000\000\000\000\000(\021\003\000\000\000\000\000\3549\002\000\000\000\000\000\006\230\002\000\000\000\000\000\350\361\002\000\000\000\000\000\214*\003\000\000\000\000\000\230\253\002\000\000\000\000\000HY\004\000\000\000\000\000\200\257\002\000\000\000\000\000\324\233\003\000\000\000\000\0000c\003\000\000\000\000\000(\021\003\000\000\000\000\000\374\312\001\000\000\000\000\000\000\342\004\000\000\000\000\0000\346\002\000\000\000\000\000P\261\003\000\000\000\000\000\0348\001\000\000\000\000\000D\322\002\000\000\000\000\000H\334\003\000\000\000\000\000\267\250\003\000\000\000\000\000\260\272\003\000\000\000\000\000tM\002\000\000\000\000\000\360C\003\000\000\000\000\000\360I\002\000\000\000\000\000\230.\002\000\000\000\000\000\034\031\002\000\000\000\000\000\344\347\001\000\000\000\000\000\230.\002\000\000\000\000\000\260\036\004\000\000\000\000\000\364\357\002\000\000\000\000\000|\003\003\000\000\000\000\000\350\367\001\000\000\000\000\000\\\324\001\000\000\000\000\000\014\013\002\000\000\000\000\000\340\237\002\000\000\000\000\000\014\362\001\000\000\000\000\000h6\002\000\000\000\000\000`\344\001\000\000\000\000\000\240\003\002\000\000\000\000\000\250\322\002\000\000\000\000\000x]\002\000\000\000\000\000\024\307\001\000\000\000\000\000\200&\004\000\000\000\000\000x]\002\000\000\000\000\000\230\245\003\000\000\000\000\000tG\003\000\000\000\000\000\324\272\002\000\000\000\000\000\000q\002\000\000\000\000\000X\017\002\000\000\000\000\000\014\224\000\000\000\000\000\000\340\"\002\000\000\000\000\000X\017\002\000\000\000\000\000\310\243\002\000\000\000\000\000\254\204\001\000\000\000\000\000\360\306\002\000\000\000\000\000L\216\002\000\000\000\000\000\210\204\002\000\000\000\000\000\374M\001\000\000\000\000\000\334\014\003\000\000\000\000\000\260\255\001\000\000\000\000\000\370\036\002\000\000\000\000\000\340\270\002\000\000\000\000\000\200 \005\000\000\000\000\000\227p\002\000\000\000\000\000\234\347\003\000\000\000\000\0000\354\001\000\000\000\000\000H\350\001\000\000\000\000\000\010\311\001\000\000\000\000\000\270\007\006\000\000\000\000\000\270\371\002\000\000\000\000\000\210\001\003\000\000\000\000\000`O\005\000\000\000\000\000@\220\002\000\000\000\000\000x\332\002\000\000\000\000\000L\247\002\000\000\000\000\000\\&\005\000\000\000\000\000\000\333\001\000\000\000\000\0004\025\002\000\000\000\000\000\250\322\002\000\000\000\000\000xc\001\000\000\000\000\000\260$\003\000\000\000\000\000P@\001\000\000\000\000\000\360O\001\000\000\000\000\000@\212\003\000\000\000\000\000\311\026\002\000\000\000\000\000\010\303\002\000\000\000\000\000\214I\002\000\000\000\000\000\254~\002\000\000\000\000\000\300W\001\000\000\000\000\000\200\251\003\000\000\000\000\000p\216\001\000\000\000\000\000X\017\002\000\000\000\000\000\240\206\001\000\000\000\000\000\210\204\002\000\000\000\000\000\010L\001\000\000\000\000\000\240\321\001\000\000\000\000\000\270v\003\000\000\000\000\000\370\030\003\000\000\000\000\000l\334\002\000\000\000\000\000\000q\002\000\000\000\000\000\362A\003\000\000\000\000\000\200\257\002\000\000\000\000\000\320\365\002\000\000\000\000\000\330S\001\000\000\000\000\000\030\352\002\000\000\000\000\000\030a\004\000\000\000\000\000t\267\001\000\000\000\000\000L\216\002\000\000\000\000\000\325x\004\000\000\000\000\000(\232\001\000\000\000\000\000\360\314\001\000\000\000\000\000\000q\002\000\000\000\000\000\210\001\003\000\000\000\000\000\360\272\004\000\000\000\000\000p\202\003\000\000\000\000\000\306\323\001\000\000\000\000\000 H\001\000\000\000\000\000l\320\004\000\000\000\000\000\030a\004\000\000\000\000\000\350z\001\000\000\000\000\000\2008\001\000\000\000\000\000x]\002\000\000\000\000\000\310\243\002\000\000\000\000\000\240\375\002\000\000\000\000\000\210\000\004\000\000\000\000\000\360=\004\000\000\000\000\000P!\002\000\000\000\000\000%~\010\000\000\000\000\000h6\002\000\000\000\000\0008\301\001\000\000\000\000\000\244K\001\000\000\000\000\000e\261\002\000\000\000\000\000\315\r\003\000\000\000\000\000\210\204\002\000\000\000\000\000t4\002\000\000\000\000\000\030\344\003\000\000\000\000\000 \277\002\000\000\000\000\000\372\325\002\000\000\000\000\000\300\310\003\000\000\000\000\000\230\034\005\000\000\000\000\000`[\003\000\000\000\000\000\374A\003\000\000\000\000\000h<\001\000\000\000\000\000\220_\001\000\000\000\000\000\244\257\001\000\000\000\000\000\220Y\002\000\000\000\000\000@\001\005\000\000\000\000\000P\267\002\000\000\000\000\000\334\217\002\000\000\000\000\000hO\002\000\000\000\000\000X\017\002\000\000\000\000\000X\017\002\000\000\000\000\000\220Y\002\000\000\000\000\000le\001\000\000\000\000\000\014o\002\000\000\000\000\000\320\365\002\000\000\000\000\000lY\003\000\000\000\000\000\020\230\002\000\000\000\000\0000\036\002\000\000\000\000\000\374`\002\000\000\000\000\0000\354\001\000\000\000\000\000h6\002\000\000\000\000\000\210\007\002\000\000\000\000\000\000\356\002\000\000\000\000\000\000q\002\000\000\000\000\000l\334\002\000\000\000\000\0008>\002\000\000\000\000\000,F\001\000\000\000\000\000`\330\003\000\000\000\000\000\034\031\002\000\000\000\000\000\210\001\003\000\000\000\000\000\344j\001\000\000\000\000\000\000q\002\000\000\000\000\0004\025\002\000\000\000\000\000P:\002\000\000\000\000\000\350\367\001\000\000\000\000\0000\261\002\000\000\000\000\000\030\360\001\000\000\000\000\000\020\230\002\000\000\000\000\000\000\364\001\000\000\000\000\000He\002\000\000\000\000\000`\352\000\000\000\000\000\000\314\322\001\000\000\000\000\000X\017\002\000\000\000\000\000\014o\002\000\000\000\000\000\020\236\001\000\000\000\000\000\210\365\004\000\000\000\000\000\274\276\002\000\000\000\000\000%1\004\000\000\000\000\000\010\303\002\000\000\000\000\000\300E\004\000\000\000\000\000`\336\002\000\000\000\000\000\310 \003\000\000\000\000\000l\373\001\000\000\000\000\000d\r\002\000\000\000\000\000\010\311\001\000\000\000\000\0000\332\004\000\000\000\000\000$\317\002\000\000\000\000\000\320\373\001\000\000\000\000\000\340\"\002\000\000\000\000\000D\n\002\000\000\000\000\000\200\316\001\000\000\000\000\000\244?\003\000\000\000\000\000\200\265\001\000\000\000\000\000\360\314\001\000\000\000\000\000<\200\002\000\000\000\000\0008\301\001\000\000\000\000\000\260\247\002\000\000\000\000\000\270\363\003\000\000\000\000\000\330G\003\000\000\000\000\000\340\"\002\000\000\000\000\000X\017\002\000\000\000\000\000<m\001\000\000\000\000\000\374\312\001\000\000\000\000\000\214\247\003\000\000\000\000\000(\224\002\000\000\000\000\000p\216\001\000\000\000\000\000\330\320\001\000\000\000\000\0000o\001\000\000\000\000\000\240\375\002\000\000\000\000\000\2002\002\000\000\000\000\000\370\036\002\000\000\000\000\000|\003\003\000\000\000\000\000\246{\006\000\000\000\000\000\2008\001\000\000\000\000\000\2008\001\000\000\000\000\000\010F\002\000\000\000\000\000 \277\002\000\000\000\000\000\244\251\002\000\000\000\000\000\244\310\001\000\000\000\000\000\230.\002\000\000\000\000\000`\344\001\000\000\000\000\000\214I\002\000\000\000\000\000p\202\003\000\000\000\000\000\264\326\001\000\000\000\000\000H\024\003\000\000\000\000\000\220S\003\000\000\000\000\000\274\276\002\000\000\000\000\000p\202\003\000\000\000\000\000x\226\003\000\000\000\000\000\250\322\002\000\000\000\000\000P:\002\000\000\000\000\000\000k\003\000\000\000\000\000\350\367\001\000\000\000\000\000\237\251\001\000\000\000\000\000\320\365\002\000\000\000\000\000\322\216\003\000\000\000\000\000f\276\003\000\000\000\000\000\310\243\002\000\000\000\000\000\370\225\003\000\000\000\000\000h\211\t\000\000\000\000\000\370\233\002\000\000\000\000\000\270|\002\000\000\000\000\000|\237\002\000\000\000\000\0004\017\003\000\000\000\000\000\230\245\003\000\000\000\000\000HY\004\000\000\000\000\000\314\322\001\000\000\000\000\0008\301\001\000\000\000\000\000\024]\002\000\000\000\000\000Hk\001\000\000\000\000\000\220\320\003\000\000\000\000\0004\375\005\000\000\000\000\000(^\013\000\000\000\000\000\300\324\001\000\000\000\000\000L\331\002\000\000\000\000\000\304\231\001\000\000\000\000\000\030s\001\000\000\000\000\000p\377\003\000\000\000\000\000\270\371\002\000\000\000\000\000H\342\002\000\000\000\000\000@\220\002\000\000\000\000\000\260\247\002\000\000\000\000\000H\350\001\000\000\000\000\000\210\204\002\000\000\000\000\0000i\002\000\000\000\000\000\200\257\002\000\000\000\000\000JX\003\000\000\000\000\000\2002\002\000\000\000\000\000P\267\002\000\000\000\000\000 B\002\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 5
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_TyjCXm5gAY8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/Shape"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/Shape"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:2"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/Shape"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:3"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Shape"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/GarageCars/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/GrLivArea/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/OverallQual/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/TotalBsmtSF/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.17149858176708221
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.17149858176708221
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/kernel/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/bias/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_0/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_0/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Size"
  op: "Size"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction/LessEqual"
  input: "dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction/counts_to_fraction/Cast"
  input: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/fraction"
  op: "Identity"
  input: "dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0/activation/tag"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/kernel/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/bias/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_1/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_1/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Size"
  op: "Size"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_1/LessEqual"
  input: "dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_1/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1/activation/tag"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298023224
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/kernel/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/bias/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_2/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_2/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Size"
  op: "Size"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_2/LessEqual"
  input: "dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_2/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_2/activation/tag"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\031\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2828427255153656
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2828427255153656
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 25
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_3/kernel/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  input: "dnn/hiddenlayer_3/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 25
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_3/bias/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  input: "dnn/hiddenlayer_3/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_3/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/hiddenlayer_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_3/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_3/MatMul"
  input: "dnn/hiddenlayer_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Size"
  op: "Size"
  input: "dnn/hiddenlayer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_3/LessEqual"
  input: "dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_3/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_3/Relu"
  input: "dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_3/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_3/Relu"
  input: "dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_3/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_3/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_3/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_3/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_3/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_3/activation/tag"
  input: "dnn/hiddenlayer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\031\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_4/kernel/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  input: "dnn/hiddenlayer_4/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_4/bias/part_0"
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  input: "dnn/hiddenlayer_4/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_4/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_3/Relu"
  input: "dnn/hiddenlayer_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_4/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_4/MatMul"
  input: "dnn/hiddenlayer_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/Size"
  op: "Size"
  input: "dnn/hiddenlayer_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_4/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_4/Size"
  input: "dnn/zero_fraction_4/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_4/LessEqual"
  input: "dnn/zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_4/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_4/Relu"
  input: "dnn/zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_4/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_4/Relu"
  input: "dnn/zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_4/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_4/Size"
  input: "dnn/zero_fraction_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_4/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_4/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_4/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_4/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_4/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_4/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_4/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_4/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_4/activation/tag"
  input: "dnn/hiddenlayer_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.6793662309646606
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6793662309646606
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/logits/kernel/part_0"
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/logits/bias/part_0"
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Assign"
  op: "AssignVariableOp"
  input: "dnn/logits/bias/part_0"
  input: "dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/kernel"
  op: "Identity"
  input: "dnn/logits/kernel/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_4/Relu"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/bias"
  op: "Identity"
  input: "dnn/logits/bias/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_5/Size"
  op: "Size"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_5/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_5/Size"
  input: "dnn/zero_fraction_5/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_5/LessEqual"
  input: "dnn/zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_5/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_5/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_5/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_5/Size"
  input: "dnn/zero_fraction_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_5/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_5/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_5/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_5/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_5/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits/activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/logits/Shape"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:4"
  input: "dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/Shape"
  op: "Shape"
  input: "dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/Shape_1"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "dnn/head/labels/Shape_1"
  input: "dnn/head/labels/strided_slice/stack"
  input: "dnn/head/labels/strided_slice/stack_1"
  input: "dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/concat/axis"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/concat"
  op: "ConcatV2"
  input: "dnn/head/labels/strided_slice"
  input: "dnn/head/labels/concat/values_1"
  input: "dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "dnn/head/labels/concat"
  input: "dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/All"
  op: "All"
  input: "dnn/head/labels/assert_equal/Equal"
  input: "dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/labels/assert_equal/All"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "dnn/head/labels/concat"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/labels"
  op: "Identity"
  input: "dnn/head/labels/ExpandDims"
  input: "^dnn/head/labels/assert_equal/Assert/Assert"
  input: "^dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/ToFloat"
  op: "Cast"
  input: "dnn/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "dnn/logits/BiasAdd"
  input: "dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/mean_squared_error/ToFloat/x"
  op: "Const"
  input: "^dnn/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/mean_squared_error/Mul"
  op: "Mul"
  input: "dnn/head/mean_squared_error/SquaredDifference"
  input: "dnn/head/mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "dnn/head/mean_squared_error/Mul"
  input: "dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "dnn/head/weighted_loss/Mul"
  input: "dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/gradients/Fill"
  op: "Fill"
  input: "dnn/head/gradients/Shape"
  input: "dnn/head/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/Fill"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  input: "dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/head/mean_squared_error/Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "dnn/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "dnn/head/mean_squared_error/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Mul"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/head/mean_squared_error/SquaredDifference"
  input: "dnn/head/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Mul_1"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Sum_1"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "dnn/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/scalar"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "dnn/head/ToFloat"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Mul"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_4/Relu"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_3/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/stack"
  op: "Pack"
  input: "dnn/head/global_norm/L2Loss"
  input: "dnn/head/global_norm/L2Loss_1"
  input: "dnn/head/global_norm/L2Loss_2"
  input: "dnn/head/global_norm/L2Loss_3"
  input: "dnn/head/global_norm/L2Loss_4"
  input: "dnn/head/global_norm/L2Loss_5"
  input: "dnn/head/global_norm/L2Loss_6"
  input: "dnn/head/global_norm/L2Loss_7"
  input: "dnn/head/global_norm/L2Loss_8"
  input: "dnn/head/global_norm/L2Loss_9"
  input: "dnn/head/global_norm/L2Loss_10"
  input: "dnn/head/global_norm/L2Loss_11"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/head/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/Sum"
  op: "Sum"
  input: "dnn/head/global_norm/stack"
  input: "dnn/head/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/mul"
  op: "Mul"
  input: "dnn/head/global_norm/Sum"
  input: "dnn/head/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/global_norm/global_norm"
  op: "Sqrt"
  input: "dnn/head/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/VerifyFinite/CheckNumerics"
  op: "CheckNumerics"
  input: "dnn/head/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/global_norm/global_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Found Inf or NaN global norm."
    }
  }
}
node {
  name: "dnn/head/VerifyFinite/control_dependency"
  op: "Identity"
  input: "dnn/head/global_norm/global_norm"
  input: "^dnn/head/VerifyFinite/CheckNumerics"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/global_norm/global_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "dnn/head/clip_by_global_norm/truediv/x"
  input: "dnn/head/VerifyFinite/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "dnn/head/clip_by_global_norm/Const"
  input: "dnn/head/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "dnn/head/clip_by_global_norm/truediv"
  input: "dnn/head/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul"
  op: "Mul"
  input: "dnn/head/clip_by_global_norm/mul/x"
  input: "dnn/head/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_0"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_1"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_2"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_3"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_4"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_5"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_6"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_7"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_8"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_9"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "dnn/head/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_10"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "dnn/head/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  input: "dnn/head/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_11"
  op: "Identity"
  input: "dnn/head/clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/GradientDescent/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_0/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_0/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_1/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_1/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_2/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_2/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_3/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_3/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_3/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_4/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/hiddenlayer_4/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/hiddenlayer_4/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/logits/kernel/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update_dnn/logits/bias/part_0/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "dnn/logits/bias/part_0"
  input: "dnn/head/GradientDescent/learning_rate"
  input: "dnn/head/clip_by_global_norm/dnn/head/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/GradientDescent/update"
  op: "NoOp"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_0/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_0/kernel/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_1/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_1/kernel/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_2/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_2/kernel/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_3/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_3/kernel/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_4/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/hiddenlayer_4/kernel/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/logits/bias/part_0/ResourceApplyGradientDescent"
  input: "^dnn/head/GradientDescent/update_dnn/logits/kernel/part_0/ResourceApplyGradientDescent"
}
node {
  name: "dnn/head/GradientDescent/value"
  op: "Const"
  input: "^dnn/head/GradientDescent/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/GradientDescent"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/head/GradientDescent/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/ones_like/Shape"
  op: "Shape"
  input: "dnn/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/ones_like"
  op: "Fill"
  input: "dnn/head/ones_like/Shape"
  input: "dnn/head/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/head/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/mul"
  op: "Mul"
  input: "dnn/head/mul/x"
  input: "dnn/head/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/Sum"
  op: "Sum"
  input: "dnn/head/mul"
  input: "dnn/head/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/truediv"
  op: "RealDiv"
  input: "dnn/head/weighted_loss/Sum"
  input: "dnn/head/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "dnn/head/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "average_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_loss"
      }
    }
  }
}
node {
  name: "average_loss"
  op: "ScalarSummary"
  input: "average_loss/tags"
  input: "dnn/head/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_2/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_2/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_3/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_3/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_4/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_4/kernel/part_0/Assign"
  input: "^dnn/logits/bias/part_0/Assign"
  input: "^dnn/logits/kernel/part_0/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 13
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/hiddenlayer_3/kernel/part_0"
        string_val: "dnn/hiddenlayer_3/bias/part_0"
        string_val: "dnn/hiddenlayer_4/kernel/part_0"
        string_val: "dnn/hiddenlayer_4/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 13
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/hiddenlayer_3/kernel/part_0"
        string_val: "dnn/hiddenlayer_3/bias/part_0"
        string_val: "dnn/hiddenlayer_4/kernel/part_0"
        string_val: "dnn/hiddenlayer_4/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0/activation"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1/activation"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_2/activation"
  input: "dnn/dnn/hiddenlayer_3/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_3/activation"
  input: "dnn/dnn/hiddenlayer_4/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_4/activation"
  input: "dnn/dnn/logits/fraction_of_zero_values"
  input: "dnn/dnn/logits/activation"
  input: "loss"
  input: "average_loss"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/Read_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/Read_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/Identity_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/Read_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/Identity_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/Read_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/Identity_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/Read_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/Identity_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/Read_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/Identity_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/Read_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/Identity_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_5eb20bb7be6e422a98230b14b75a5741/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Read_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/Read_12/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/Identity_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/Read_13/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/Identity_26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/Read_14/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/Identity_28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/Read_15/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/Identity_30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/Read_16/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/Identity_32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/Read_17/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/Identity_34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/Read_18/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/Identity_36"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/Read_19/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/Identity_38"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/Read_20/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/Identity_40"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/Read_21/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/Identity_42"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/Read_22/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/Identity_44"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/Read_23/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/Identity_46"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 12
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_3/bias"
        string_val: "dnn/hiddenlayer_3/kernel"
        string_val: "dnn/hiddenlayer_4/bias"
        string_val: "dnn/hiddenlayer_4/kernel"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 12
          }
        }
        string_val: "200 0,200"
        string_val: "4 200 0,4:0,200"
        string_val: "100 0,100"
        string_val: "200 100 0,200:0,100"
        string_val: "50 0,50"
        string_val: "100 50 0,100:0,50"
        string_val: "25 0,25"
        string_val: "50 25 0,50:0,25"
        string_val: "12 0,12"
        string_val: "25 12 0,25:0,12"
        string_val: "1 0,1"
        string_val: "12 1 0,12:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "save/Identity_25"
  input: "save/Identity_27"
  input: "save/Identity_29"
  input: "save/Identity_31"
  input: "save/Identity_33"
  input: "save/Identity_35"
  input: "save/Identity_37"
  input: "save/Identity_39"
  input: "save/Identity_41"
  input: "save/Identity_43"
  input: "save/Identity_45"
  input: "save/Identity_47"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 12
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_3/bias"
        string_val: "dnn/hiddenlayer_3/kernel"
        string_val: "dnn/hiddenlayer_4/bias"
        string_val: "dnn/hiddenlayer_4/kernel"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 12
          }
        }
        string_val: "200 0,200"
        string_val: "4 200 0,4:0,200"
        string_val: "100 0,100"
        string_val: "200 100 0,200:0,100"
        string_val: "50 0,50"
        string_val: "100 50 0,100:0,50"
        string_val: "25 0,25"
        string_val: "50 25 0,50:0,25"
        string_val: "12 0,12"
        string_val: "25 12 0,25:0,12"
        string_val: "1 0,1"
        string_val: "12 1 0,12:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
        shape {
          dim {
            size: 25
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
        shape {
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "save/Identity_49"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "save/Identity_50"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "save/Identity_51"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "save/Identity_52"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2_1:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "save/Identity_53"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2_1:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "save/Identity_54"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2_1:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_3/bias/part_0"
  input: "save/Identity_55"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2_1:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_3/kernel/part_0"
  input: "save/Identity_56"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2_1:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_4/bias/part_0"
  input: "save/Identity_57"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2_1:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_4/kernel/part_0"
  input: "save/Identity_58"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2_1:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "dnn/logits/bias/part_0"
  input: "save/Identity_59"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2_1:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dnn/logits/kernel/part_0"
  input: "save/Identity_60"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
library {
  function {
    signature {
      name: "_make_dataset_TyjCXm5gAY8"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1200
              }
            }
            tensor_content
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1200
              }
            }
            tensor_content: "\256\006\000\000\000\000\000\000\356\004\000\000\000\000\000\000\372\006\000\000\000\000\000\000\265\006\000\000\000\000\000\000\226\010\000\000\000\000\000\000R\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000*\010\000\000\000\000\000\000\356\006\000\000\000\000\000\0005\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\024\t\000\000\000\000\000\000\220\003\000\000\000\000\000\000\326\005\000\000\000\000\000\000\345\004\000\000\000\000\000\000V\003\000\000\000\000\000\000\354\003\000\000\000\000\000\000\020\005\000\000\000\000\000\000Z\004\000\000\000\000\000\000;\005\000\000\000\000\000\000H\t\000\000\000\000\000\000T\004\000\000\000\000\000\000\003\007\000\000\000\000\000\000$\004\000\000\000\000\000\000$\004\000\000\000\000\000\000@\006\000\000\000\000\000\000\204\003\000\000\000\000\000\000\250\006\000\000\000\000\000\000@\006\000\000\000\000\000\000\010\002\000\000\000\000\000\000%\005\000\000\000\000\000\000\314\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000\244\006\000\000\000\000\000\000\031\006\000\000\000\000\000\000\224\t\000\000\000\000\000\000I\004\000\000\000\000\000\000\021\005\000\000\000\000\000\000!\004\000\000\000\000\000\000\200\004\000\000\000\000\000\000,\005\000\000\000\000\000\0000\005\000\000\000\000\000\000t\003\000\000\000\000\000\000\252\003\000\000\000\000\000\000~\004\000\000\000\000\000\000\330\006\000\000\000\000\000\000e\010\000\000\000\000\000\000xtq\t\000\000\000\000\000\000\030\006\000\000\000\000\000\000\310\004\000\000\000\000\000\000\366\005\000\000\000\000\000\000\336\003\000\000\000\000\000\000\020\004\000\000\000\000\000\000\323\004\000\000\000\000\000\000\304\003\000\000\000\000\000\000\363\010\000\000\000\000\000\000\372\006\000\000\000\000\000\000\276\005\000\000\000\000\000\0004\006\000\000\000\000\000\000\300\003\000\000\000\000\000\000C\003\000\000\000\000\000\000\311\004\000\000\000\000\000\000J\006\000\000\000\000\000\000\304\006\000\000\000\000\000\000\377\005\000\000\000\000\000\000\312\004\000\000\000\000\000\000\032\007\000\000\000\000\000\000\310\007\000\000\000\000\000\000\027\004\000\000\000\000\000\000\025\003\000\000\000\000\000\000\355\005\000\000\000\000\000\0004\007\000\000\000\000\000\000?\007\000\000\000\000\000\000\226\005\000\000\000\000\000\000\210\n\000\000\000\000\000\000\323\010\000\000\000\000\000\000\020\t\000\000\000\000\000\000\262\005\000\000\000\000\000\000D\004\000\000\000\000\000\000e\004\000\000\000\000\000\000\226\014\000\000\000\000\000\000\260\005\000\000\000\000\000\000\334\003\000\000\000\000\000\000c\004\000\000\000\000\000\0008\004\000\000\000\000\000\000\257\004\000\000\000\000\000\0002\006\000\000\000\000\000\000\362\002\000\000\000\000\000\000\276\003\000\000\000\000\000\000H\003\000\000\000\000\000\000D\005\000\000\000\000\000\000\035\004\000\000\000\000\000\000m\010\000\000\000\000\000\000\006\010\000\000\000\000\000\000/\005\000\000\000\000\000\000\020\005\000\000\000\000\000\000\271\006\000\000\000\000\000\000\222\006\000\000\000\000\000\000\276\004\000\000\000\000\000\000\247\007\000\000\000\000\000\000<\007\000\000\000\000\000\000\344\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000i\005\000\000\000\000\000\000\335\005\000\000\000\000\000\000\300\006\000\000\000\000\000\000\255\006\000\000\000\000\000\000k\003\000\000\000\000\000\000\363\007\000\000\000\000\000\0008\004\000\000\000\000\000\000@\005\000\000\000\000\000\000\311\003\000\000\000\000\000\000\256\006\000\000\000\000\000\000\311\007\000\000\000\000\000\000\344\004\000\000\000\000\000\000\260\004\000\000\000\000\000\000H\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\260\007\000\000\000\000\000\000\233\007\000\000\000\000\000\000\236\t\000\000\000\000\000\000\320\004\000\000\000\000\000\000l\n\000\000\000\000\000\000\005\006\000\000\000\000\000\000r\003\000\000\000\000\000\000P\006\000\000\000\000\000\000K\005\000\000\000\000\000\000K\007\000\000\000\000\000\000q\010\000\000\000\000\000\000\270\006\000\000\000\000\000\000\253\006\000\000\000\000\000\000f\005\000\000\000\000\000\000x\006\000\000\000\000\000\000\347\006\000\000\000\000\000\000R\005\000\000\000\000\000\000s\006\000\000\000\000\000\000n\010\000\000\000\000\000\000\014\010\000\000\000\000\000\000\200\007\000\000\000\000\000\000\272\010\000\000\000\000\000\000\310\003\000\000\000\000\000\000\365\005\000\000\000\000\000\000\n\007\000\000\000\000\000\000<\005\000\000\000\000\000\000\"\010\000\000\000\000\000\000\344\004\000\000\000\000\000\000\030\016\000\000\000\000\000\000\301\004\000\000\000\000\000\000x\006\000\000\000\000\000\000\310\004\000\000\000\000\000\0009\006\000\000\000\000\000\000\247\n\000\000\000\000\000\000\307\005\000\000\000\000\000\000\227\005\000\000\000\000\000\000\255\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\260\005\000\000\000\000\000\000\276\006\000\000\000\000\000\000(\014\000\000\000\000\000\000\265\010\000\000\000\000\000\000\261\006\000\000\000\000\000\000a\004\000\000\000\000\000\000\377\004\000\000\000\000\000\000\036\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\004\005\000\000\000\000\000\000\242\005\000\000\000\000\000\000\240\006\000\000\000\000\000\000L\004\000\000\000\000\000\000\016\010\000\000\000\000\000\000D\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000<\007\000\000\000\000\000\000\336\003\000\000\000\000\000\000p\005\000\000\000\000\000\000\324\004\000\000\000\000\000\000\234\005\000\000\000\000\000\0000\005\000\000\000\000\000\000\242\007\000\000\000\000\000\000\340\004\000\000\000\000\000\000\332\005\000\000\000\000\000\000\333\010\000\000\000\000\000\000\020\006\000\000\000\000\000\000`\003\000\000\000\000\000\000X\t\000\000\000\000\000\000\026\005\000\000\000\000\000\000\330\t\000\000\000\000\000\000\333\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\023\006\000\000\000\000\000\000\252\004\000\000\000\000\000\000\352\n\000\000\000\000\000\000\333\003\000\000\000\000\000\000~\003\000\000\000\000\000\000\250\007\000\000\000\000\000\000\333\003\000\000\000\000\000\000\206\005\000\000\000\000\000\000\320\006\000\000\000\000\000\000\236\006\000\000\000\000\000\000\317\005\000\000\000\000\000\000\036\006\000\000\000\000\000\000b\003\000\000\000\000\000\000\240\005\000\000\000\000\000\000\301\004\000\000\000\000\000\000>\010\000\000\000\000\000\000P\007\000\000\000\000\000\000\210\007\000\000\000\000\000\000_\005\000\000\000\000\000\000\204\006\000\000\000\000\000\000`\010\000\000\000\000\000\000\032\005\000\000\000\000\000\000Y\006\000\000\000\000\000\000h\006\000\000\000\000\000\000\026\005\000\000\000\000\000\000\"\005\000\000\000\000\000\000\363\010\000\000\000\000\000\000\300\006\000\000\000\000\000\000D\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000r\003\000\000\000\000\000\000f\005\000\000\000\000\000\000\016\n\000\000\000\000\000\000\274\004\000\000\000\000\000\000$\005\000\000\000\000\000\000\374\002\000\000\000\000\000\000\216\005\000\000\000\000\000\000\347\005\000\000\000\000\000\000\220\010\000\000\000\000\000\000\n\003\000\000\000\000\000\000Y\004\000\000\000\000\000\000\223\007\000\000\000\000\000\000S\005\000\000\000\000\000\000\336\010\000\000\000\000\000\000`\006\000\000\000\000\000\0000\003\000\000\000\000\000\000\014\006\000\000\000\000\000\000\030\006\000\000\000\000\000\000`\003\000\000\000\000\000\000I\010\000\000\000\000\000\000\346\007\000\000\000\000\000\000\276\007\000\000\000\000\000\000\356\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000\274\005\000\000\000\000\000\000\'\006\000\000\000\000\000\000\342\004\000\000\000\000\000\000\306\006\000\000\000\000\000\000Z\003\000\000\000\000\000\000\204\003\000\000\000\000\000\000t\005\000\000\000\000\000\000\177\007\000\000\000\000\000\000\264\006\000\000\000\000\000\000\264\006\000\000\000\000\000\000\327\010\000\000\000\000\000\000l\006\000\000\000\000\000\000\353\003\000\000\000\000\000\000\026\006\000\000\000\000\000\000\236\007\000\000\000\000\000\000\317\006\000\000\000\000\000\000\200\004\000\000\000\000\000\0008\005\000\000\000\000\000\000\224\t\000\000\000\000\000\000\005\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\245\r\000\000\000\000\000\000\320\007\000\000\000\000\000\000\303\010\000\000\000\000\000\000~\005\000\000\000\000\000\000]\003\000\000\000\000\000\000\230\007\000\000\000\000\000\000\335\005\000\000\000\000\000\000\314\003\000\000\000\000\000\000^\004\000\000\000\000\000\000\364\007\000\000\000\000\000\000i\006\000\000\000\000\000\000\230\005\000\000\000\000\000\0001\t\000\000\000\000\000\000\247\007\000\000\000\000\000\000V\n\000\000\000\000\000\000\300\005\000\000\000\000\000\000$\n\000\000\000\000\000\000\244\t\000\000\000\000\000\000\252\n\000\000\000\000\000\000\213\004\000\000\000\000\000\000\242\013\000\000\000\000\000\000#\003\000\000\000\000\000\000\267\006\000\000\000\000\000\000g\005\000\000\000\000\000\000V\010\000\000\000\000\000\000\250\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000 \004\000\000\000\000\000\000]\006\000\000\000\000\000\000N\005\000\000\000\000\000\000f\006\000\000\000\000\000\000\372\006\000\000\000\000\000\000\202\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000U\006\000\000\000\000\000\000\277\004\000\000\000\000\000\000t\007\000\000\000\000\000\000I\003\000\000\000\000\000\000\020\004\000\000\000\000\000\000\224\006\000\000\000\000\000\000X\004\000\000\000\000\000\000)\006\000\000\000\000\000\000\276\003\000\000\000\000\000\000\306\005\000\000\000\000\000\000Z\006\000\000\000\000\000\000\250\n\000\000\000\000\000\000M\007\000\000\000\000\000\000\255\005\000\000\000\000\000\000W\004\000\000\000\000\000\000\320\002\000\000\000\000\000\000;\006\000\000\000\000\000\000\260\004\000\000\000\000\000\000\217\004\000\000\000\000\000\000v\004\000\000\000\000\000\000H\005\000\000\000\000\000\000\204\007\000\000\000\000\000\000\220\003\000\000\000\000\000\000\341\005\000\000\000\000\000\000\202\007\000\000\000\000\000\000\333\003\000\000\000\000\000\000&\006\000\000\000\000\000\000@\005\000\000\000\000\000\000r\005\000\000\000\000\000\000\227\005\000\000\000\000\000\000\364\004\000\000\000\000\000\000\007\005\000\000\000\000\000\000\200\006\000\000\000\000\000\0004\006\000\000\000\000\000\000\360\002\000\000\000\000\000\000\'\005\000\000\000\000\000\000\210\007\000\000\000\000\000\000\210\003\000\000\000\000\000\000\222\003\000\000\000\000\000\000\242\t\000\000\000\000\000\000@\007\000\000\000\000\000\000\010\007\000\000\000\000\000\000\233\006\000\000\000\000\000\000\025\005\000\000\000\000\000\000\005\007\000\000\000\000\000\000\020\003\000\000\000\000\000\000\241\007\000\000\000\000\000\000\365\004\000\000\000\000\000\000\240\004\000\000\000\000\000\000e\004\000\000\000\000\000\000\307\005\000\000\000\000\000\000\034\t\000\000\000\000\000\000W\005\000\000\000\000\000\000\251\007\000\000\000\000\000\000r\003\000\000\000\000\000\000\024\003\000\000\000\000\000\000\n\004\000\000\000\000\000\000x\004\000\000\000\000\000\000~\003\000\000\000\000\000\000\024\007\000\000\000\000\000\0005\004\000\000\000\000\000\000\016\006\000\000\000\000\000\000\010\005\000\000\000\000\000\000\036\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000\327\010\000\000\000\000\000\000$\006\000\000\000\000\000\000T\006\000\000\000\000\000\000g\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000|\010\000\000\000\000\000\000\036\010\000\000\000\000\000\000\374\004\000\000\000\000\000\000 \004\000\000\000\000\000\000\306\005\000\000\000\000\000\000\004\004\000\000\000\000\000\0001\010\000\000\000\000\000\000<\005\000\000\000\000\000\000x\005\000\000\000\000\000\000@\n\000\000\000\000\000\000n\004\000\000\000\000\000\000 \004\000\000\000\000\000\000@\005\000\000\000\000\000\000B\006\000\000\000\000\000\000\334\003\000\000\000\000\000\000F\n\000\000\000\000\000\000\254\004\000\000\000\000\000\000m\005\000\000\000\000\000\000l\006\000\000\000\000\000\000\213\003\000\000\000\000\000\000\270\004\000\000\000\000\000\000\204\005\000\000\000\000\000\000\333\003\000\000\000\000\000\000\256\004\000\000\000\000\000\000U\005\000\000\000\000\000\000D\006\000\000\000\000\000\000v\002\000\000\000\000\000\000}\006\000\000\000\000\000\000^\004\000\000\000\000\000\000\210\003\000\000\000\000\000\000\266\002\000\000\000\000\000\000\254\004\000\000\000\000\000\000b\t\000\000\000\000\000\000\240\005\000\000\000\000\000\000%\006\000\000\000\000\000\000\352\004\000\000\000\000\000\000t\007\000\000\000\000\000\000\231\006\000\000\000\000\000\000`\007\000\000\000\000\000\000^\007\000\000\000\000\000\000`\005\000\000\000\000\000\000\237\004\000\000\000\000\000\000-\003\000\000\000\000\000\000\375\005\000\000\000\000\000\000\334\006\000\000\000\000\000\0006\006\000\000\000\000\000\000\300\006\000\000\000\000\000\000\332\004\000\000\000\000\000\000@\005\000\000\000\000\000\000\177\006\000\000\000\000\000\000\202\006\000\000\000\000\000\000\263\004\000\000\000\000\000\000\217\007\000\000\000\000\000\000o\004\000\000\000\000\000\000`\003\000\000\000\000\000\000|\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\206\005\000\000\000\000\000\000\375\004\000\000\000\000\000\000l\006\000\000\000\000\000\000b\006\000\000\000\000\000\000\256\006\000\000\000\000\000\000\336\005\000\000\000\000\000\000\261\007\000\000\000\000\000\0000\004\000\000\000\000\000\000\270\007\000\000\000\000\000\000t\006\000\000\000\000\000\000\312\003\000\000\000\000\000\000\325\005\000\000\000\000\000\000S\n\000\000\000\000\000\000\266\006\000\000\000\000\000\000k\004\000\000\000\000\000\000:\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\"\007\000\000\000\000\000\000\300\004\000\000\000\000\000\000\347\003\000\000\000\000\000\000Y\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000n\t\000\000\000\000\000\000v\002\000\000\000\000\000\000\030\005\000\000\000\000\000\000*\006\000\000\000\000\000\000\260\005\000\000\000\000\000\000\365\004\000\000\000\000\000\000v\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\234\014\000\000\000\000\000\000\034\007\000\000\000\000\000\000\203\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\302\004\000\000\000\000\000\000\350\006\000\000\000\000\000\000\276\004\000\000\000\000\000\000\t\007\000\000\000\000\000\000*\005\000\000\000\000\000\000\250\007\000\000\000\000\000\000w\007\000\000\000\000\000\000\302\004\000\000\000\000\000\000b\005\000\000\000\000\000\000\021\004\000\000\000\000\000\000S\005\000\000\000\000\000\000X\005\000\000\000\000\000\000`\003\000\000\000\000\000\0008\004\000\000\000\000\000\000\025\003\000\000\000\000\000\000\344\007\000\000\000\000\000\000G\010\000\000\000\000\000\000(\t\000\000\000\000\000\000\004\007\000\000\000\000\000\000 \010\000\000\000\000\000\000\016\005\000\000\000\000\000\000\334\004\000\000\000\000\000\000\200\006\000\000\000\000\000\000D\022\000\000\000\000\000\000^\t\000\000\000\000\000\000\362\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\231\n\000\000\000\000\000\000]\002\000\000\000\000\000\000\323\t\000\000\000\000\000\000\345\005\000\000\000\000\000\000R\005\000\000\000\000\000\000;\003\000\000\000\000\000\000N\001\000\000\000\000\000\000\206\005\000\000\000\000\000\000C\005\000\000\000\000\000\000\274\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\207\004\000\000\000\000\000\000A\006\000\000\000\000\000\000.\007\000\000\000\000\000\000\355\010\000\000\000\000\000\000\220\006\000\000\000\000\000\000\377\002\000\000\000\000\000\000\330\005\000\000\000\000\000\000\207\010\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\003\000\000\000\000\000\0009\003\000\000\000\000\000\000.\010\000\000\000\000\000\000-\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\265\006\000\000\000\000\000\000f\004\000\000\000\000\000\000\376\007\000\000\000\000\000\000\030\004\000\000\000\000\000\000D\004\000\000\000\000\000\0008\005\000\000\000\000\000\000\246\005\000\000\000\000\000\000\025\006\000\000\000\000\000\000p\005\000\000\000\000\000\000m\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\212\006\000\000\000\000\000\000\367\010\000\000\000\000\000\000o\006\000\000\000\000\000\000\310\t\000\000\000\000\000\000\377\005\000\000\000\000\000\000T\010\000\000\000\000\000\000\257\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\234\006\000\000\000\000\000\000\226\005\000\000\000\000\000\000U\004\000\000\000\000\000\000\300\004\000\000\000\000\000\000\305\005\000\000\000\000\000\000(\005\000\000\000\000\000\000p\005\000\000\000\000\000\000\003\007\000\000\000\000\000\000\225\005\000\000\000\000\000\000\372\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\327\n\000\000\000\000\000\000%\006\000\000\000\000\000\000\354\007\000\000\000\000\000\000F\003\000\000\000\000\000\000\\\003\000\000\000\000\000\000\301\005\000\000\000\000\000\000\247\003\000\000\000\000\000\000.\006\000\000\000\000\000\000\370\010\000\000\000\000\000\0000\003\000\000\000\000\000\000P\003\000\000\000\000\000\000\234\003\000\000\000\000\000\000\"\007\000\000\000\000\000\000X\005\000\000\000\000\000\000z\005\000\000\000\000\000\000o\006\000\000\000\000\000\000\024\006\000\000\000\000\000\000p\007\000\000\000\000\000\000_\005\000\000\000\000\000\000{\007\000\000\000\000\000\000\260\004\000\000\000\000\000\000\326\005\000\000\000\000\000\000\302\007\000\000\000\000\000\000\020\004\000\000\000\000\000\000\330\007\000\000\000\000\000\000z\014\000\000\000\000\000\000\005\004\000\000\000\000\000\000i\010\000\000\000\000\000\000\010\004\000\000\000\000\000\000P\007\000\000\000\000\000\000`\004\000\000\000\000\000\000v\002\000\000\000\000\000\000\036\004\000\000\000\000\000\000\345\005\000\000\000\000\000\000@\003\000\000\000\000\000\000$\007\000\000\000\000\000\000\326\010\000\000\000\000\000\000`\003\000\000\000\000\000\0006\n\000\000\000\000\000\000\324\003\000\000\000\000\000\000\350\005\000\000\000\000\000\000\376\006\000\000\000\000\000\000\\\004\000\000\000\000\000\000\216\005\000\000\000\000\000\000\360\005\000\000\000\000\000\000 \010\000\000\000\000\000\000F\005\000\000\000\000\000\000\326\006\000\000\000\000\000\000\022\006\000\000\000\000\000\000\203\005\000\000\000\000\000\000 \004\000\000\000\000\000\000 \004\000\000\000\000\000\000C\r\000\000\000\000\000\000 \003\000\000\000\000\000\000k\005\000\000\000\000\000\000\034\003\000\000\000\000\000\000\037\006\000\000\000\000\000\000\356\005\000\000\000\000\000\000\211\007\000\000\000\000\000\000\220\n\000\000\000\000\000\000T\006\000\000\000\000\000\000\346\006\000\000\000\000\000\000\325\003\000\000\000\000\000\000\030\004\000\000\000\000\000\000F\004\000\000\000\000\000\000/\007\000\000\000\000\000\000v\002\000\000\000\000\000\000\201\006\000\000\000\000\000\000\346\005\000\000\000\000\000\000\264\006\000\000\000\000\000\000\275\005\000\000\000\000\000\000A\010\000\000\000\000\000\000D\004\000\000\000\000\000\000\035\004\000\000\000\000\000\000\336\005\000\000\000\000\000\000\262\005\000\000\000\000\000\000\316\005\000\000\000\000\000\000\217\007\000\000\000\000\000\000\220\t\000\000\000\000\000\000p\005\000\000\000\000\000\000\235\004\000\000\000\000\000\0001\010\000\000\000\000\000\000\220\007\000\000\000\000\000\000L\t\000\000\000\000\000\000\217\006\000\000\000\000\000\000\235\005\000\000\000\000\000\000\234\004\000\000\000\000\000\000\304\005\000\000\000\000\000\000Y\005\000\000\000\000\000\000\270\004\000\000\000\000\000\000/\007\000\000\000\000\000\000pt\000\000\000\000\000\0001\004\000\000\000\000\000\000\003\006\000\000\000\000\000\000q\004\000\000\000\000\000\000h\002\000\000\000\000\000\000|\004\000\000\000\000\000\000~\003\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\007\000\000\000\000\000\000\214\004\000\000\000\000\000\000\020\n\000\000\000\000\000\000\024\007\000\000\000\000\000\000\314\005\000\000\000\000\000\000D\004\000\000\000\000\000\000 \007\000\000\000\000\000\000,\005\000\000\000\000\000\000\260\005\000\000\000\000\000\000\210\003\000\000\000\000\000\000\331\002\000\000\000\000\000\000\232\004\000\000\000\000\000\000\314\004\000\000\000\000\000\000\300\003\000\000\000\000\000\000\307\005\000\000\000\000\000\000F\005\000\000\000\000\000\000\372\t\000\000\000\000\000\000\232\004\000\000\000\000\000\000r\t\000\000\000\000\000\000\313\003\000\000\000\000\000\000\316\006\000\000\000\000\000\000P\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\276\005\000\000\000\000\000\000\242\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\220\006\000\000\000\000\000\000\320\004\000\000\000\000\000\000\360\006\000\000\000\000\000\000\270\004\000\000\000\000\000\000P\006\000\000\000\000\000\000z\004\000\000\000\000\000\000\357\007\000\000\000\000\000\000x\004\000\000\000\000\000\000\264\003\000\000\000\000\000\000\350\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\t\007\000\000\000\000\000\000\260\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000\230\005\000\000\000\000\000\000\220\003\000\000\000\000\000\000E\005\000\000\000\000\000\000\270\005\000\000\000\000\000\0009\005\000\000\000\000\000\000\233\n\000\000\000\000\000\000\320\010\000\000\000\000\000\000P\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\371\005\000\000\000\000\000\000t\004\000\000\000\000\000\000(\005\000\000\000\000\000\000\326\005\000\000\000\000\000\0002\010\000\000\000\000\000\000\002\004\000\000\000\000\000\000\277\005\000\000\000\000\000\000\350\006\000\000\000\000\000\000j\005\000\000\000\000\000\000\335\005\000\000\000\000\000\000\343\t\000\000\000\000\000\000`\003\000\000\000\000\000\000\025\005\000\000\000\000\000\000\013\006\000\000\000\000\000\000=\t\000\000\000\000\000\000\326\005\000\000\000\000\000\000\342\005\000\000\000\000\000\000\262\006\000\000\000\000\000\000\326\006\000\000\000\000\000\000,\007\000\000\000\000\000\000\317\014\000\000\000\000\000\000Z\003\000\000\000\000\000\000\304\004\000\000\000\000\000\000]\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\265\007\000\000\000\000\000\000\264\004\000\000\000\000\000\000N\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\344\007\000\000\000\000\000\000\354\003\000\000\000\000\000\000\345\004\000\000\000\000\000\000C\006\000\000\000\000\000\000\226\005\000\000\000\000\000\000V\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000>\005\000\000\000\000\000\000t\006\000\000\000\000\000\000$\010\000\000\000\000\000\000\205\003\000\000\000\000\000\000\'\010\000\000\000\000\000\000y\004\000\000\000\000\000\000&\004\000\000\000\000\000\000\335\007\000\000\000\000\000\000\330\005\000\000\000\000\000\000g\007\000\000\000\000\000\000\034\006\000\000\000\000\000\000\005\005\000\000\000\000\000\000\005\003\000\000\000\000\000\000D\014\000\000\000\000\000\000\350\006\000\000\000\000\000\000\230\006\000\000\000\000\000\000\254\004\000\000\000\000\000\000\260\005\000\000\000\000\000\000\006\013\000\000\000\000\000\000h\004\000\000\000\000\000\000\224\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000(\006\000\000\000\000\000\000>\004\000\000\000\000\000\000Z\010\000\000\000\000\000\000\035\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\024\004\000\000\000\000\000\000\242\005\000\000\000\000\000\000\342\004\000\000\000\000\000\000}\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000\231\006\000\000\000\000\000\000\034\004\000\000\000\000\000\000N\005\000\000\000\000\000\000h\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\305\006\000\000\000\000\000\000\321\005\000\000\000\000\000\000\321\005\000\000\000\000\000\000$\010\000\000\000\000\000\000\020\003\000\000\000\000\000\000\232\005\000\000\000\000\000\000N\010\000\000\000\000\000\000\307\004\000\000\000\000\000\000p\005\000\000\000\000\000\000\260\004\000\000\000\000\000\000%\007\000\000\000\000\000\000\354\005\000\000\000\000\000\000x\004\000\000\000\000\000\000+\004\000\000\000\000\000\000\027\006\000\000\000\000\000\000\333\003\000\000\000\000\000\000K\004\000\000\000\000\000\000\260\004\000\000\000\000\000\000\312\005\000\000\000\000\000\000\003\006\000\000\000\000\000\000\215\004\000\000\000\000\000\000\010\007\000\000\000\000\000\000\210\005\000\000\000\000\000\000\245\006\000\000\000\000\000\000\357\006\000\000\000\000\000\000`\003\000\000\000\000\000\0006\t\000\000\000\000\000\000?\007\000\000\000\000\000\000P\003\000\000\000\000\000\000\260\005\000\000\000\000\000\000n\006\000\000\000\000\000\000\245\005\000\000\000\000\000\000\363\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\002\004\000\000\000\000\000\000\311\005\000\000\000\000\000\000Z\005\000\000\000\000\000\000^\n\000\000\000\000\000\000\222\005\000\000\000\000\000\000\017\004\000\000\000\000\000\000I\004\000\000\000\000\000\000|\004\000\000\000\000\000\000\\\005\000\000\000\000\000\000\352\003\000\000\000\000\000\000n\006\000\000\000\000\000\000`\004\000\000\000\000\000\000\020\t\000\000\000\000\000\000\235\007\000\000\000\000\000\000~\003\000\000\000\000\000\000\222\006\000\000\000\000\000\000\216\003\000\000\000\000\000\000\364\004\000\000\000\000\000\000k\004\000\000\000\000\000\0002\n\000\000\000\000\000\000\020\004\000\000\000\000\000\000\260\010\000\000\000\000\000\000\203\004\000\000\000\000\000\000`\003\000\000\000\000\000\000B\004\000\000\000\000\000\000\265\006\000\000\000\000\000\0009\006\000\000\000\000\000\000\266\010\000\000\000\000\000\000|\003\000\000\000\000\000\000\255\006\000\000\000\000\000\000\260\006\000\000\000\000\000\000q\005\000\000\000\000\000\000\251\010\000\000\000\000\000\000\341\005\000\000\000\000\000\000\234\003\000\000\000\000\000\000\223\006\000\000\000\000\000\000,\004\000\000\000\000\000\000g\005\000\000\000\000\000\000\377\005\000\000\000\000\000\000\004\007\000\000\000\000\000\000\267\003\000\000\000\000\000\000\300\010\000\000\000\000\000\000<\t\000\000\000\000\000\000\324\004\000\000\000\000\000\000Z\003\000\000\000\000\000\000\032\005\000\000\000\000\000\000\345\005\000\000\000\000\000\000\206\006\000\000\000\000\000\000\206\003\000\000\000\000\000\000\'\004\000\000\000\000\000\000d\006\000\000\000\000\000\000\t\010\000\000\000\000\000\000\206\003\000\000\000\000\000\000\314\005\000\000\000\000\000\000\342\010\000\000\000\000\000\000\364\004\000\000\000\000\000\000\367\003\000\000\000\000\000\000\322\007\000\000\000\000\000\000\310\004\000\000\000\000\000\000D\004\000\000\000\000\000\000\340\001\000\000\000\000\000\000\315\004\000\000\000\000\000\000O\010\000\000\000\000\000\000\206\005\000\000\000\000\000\000\271\006\000\000\000\000\000\000\230\010\000\000\000\000\000\000$\005\000\000\000\000\000\000Q\006\000\000\000\000\000\000\226\006\000\000\000\000\000\000f\004\000\000\000\000\000\000F\t\000\000\000\000\000\000\272\007\000\000\000\000\000\000\374\006\000\000\000\000\000\000\274\010\000\000\000\000\000\000\272\005\000\000\000\000\000\000\235\003\000\000\000\000\000\000q\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000\025\010\000\000\000\000\000\000\353\002\000\000\000\000\000\000\260\004\000\000\000\000\000\000\263\007\000\000\000\000\000\000\252\007\000\000\000\000\000\000c\t\000\000\000\000\000\000\300\006\000\000\000\000\000\000\014\010\000\000\000\000\000\000\240\005\000\000\000\000\000\000`\006\000\000\000\000\000\000@\005\000\000\000\000\000\000M\007\000\000\000\000\000\000x\004\000\000\000\000\000\000]\006\000\000\000\000\000\000\360\006\000\000\000\000\000\000e\005\000\000\000\000\000\000`\003\000\000\000\000\000\000\305\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\260\007\000\000\000\000\000\000\324\003\000\000\000\000\000\000\246\007\000\000\000\000\000\000\315\004\000\000\000\000\000\000!\004\000\000\000\000\000\0009\005\000\000\000\000\000\000\210\005\000\000\000\000\000\000Z\003\000\000\000\000\000\0008\013\000\000\000\000\000\000\014\006\000\000\000\000\000\000\010\007\000\000\000\000\000\000f\007\000\000\000\000\000\000\314\005\000\000\000\000\000\000\034\005\000\000\000\000\000\000J\004\000\000\000\000\000\000\310\003\000\000\000\000\000\000G\004\000\000\000\000\000\000\250\004\000\000\000\000\000\000Z\006\000\000\000\000\000\000\226\003\000\000\000\000\000\000\224\005\000\000\000\000\000\000\343\007\000\000\000\000\000\000f\005\000\000\000\000\000\000e\003\000\000\000\000\000\000\331\004\000\000\000\000\000\000~\003\000\000\000\000\000\000a\004\000\000\000\000\000\000\347\003\000\000\000\000\000\0004\n\000\000\000\000\000\000\362\004\000\000\000\000\000\000\362\010\000\000\000\000\000\000\306\006\000\000\000\000\000\000\214\004\000\000\000\000\000\000c\006\000\000\000\000\000\000\224\007\000\000\000\000\000\000\356\007\000\000\000\000\000\000(\006\000\000\000\000\000\000X\t\000\000\000\000\000\000\316\006\000\000\000\000\000\000;\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000\266\006\000\000\000\000\000\000\316\004\000\000\000\000\000\000\032\004\000\000\000\000\000\000\242\005\000\000\000\000\000\0005\004\000\000\000\000\000\000\270\004\000\000\000\000\000\000\260\003\000\000\000\000\000\000\263\002\000\000\000\000\000\000&\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000\340\005\000\000\000\000\000\000\331\003\000\000\000\000\000\000y\006\000\000\000\000\000\000D\004\000\000\000\000\000\000\256\006\000\000\000\000\000\000\362\005\000\000\000\000\000\000\367\004\000\000\000\000\000\000\200\006\000\000\000\000\000\000\336\005\000\000\000\000\000\000\376\003\000\000\000\000\000\000:\004\000\000\000\000\000\000\201\006\000\000\000\000\000\000\340\005\000\000\000\000\000\000P\005\000\000\000\000\000\000\300\005\000\000\000\000\000\000\342\005\000\000\000\000\000\000l\004\000\000\000\000\000\000\304\004\000\000\000\000\000\000\340\004\000\000\000\000\000\000\340\005\000\000\000\000\000\000R\013\000\000\000\000\000\000r\003\000\000\000\000\000\000\360\004\000\000\000\000\000\000n\006\000\000\000\000\000\000`\005\000\000\000\000\000\000\302\004\000\000\000\000\000\000\210\007\000\000\000\000\000\000\n\014\000\000\000\000\000\000\330\t\000\000\000\000\000\000v\006\000\000\000\000\000\000\272\003\000\000\000\000\000\000M\003\000\000\000\000\000\000T\006\000\000\000\000\000\000\327\010\000\000\000\000\000\000@\005\000\000\000\000\000\000v\002\000\000\000\000\000\000\013\007\000\000\000\000\000\000`\006\000\000\000\000\000\000\032\005\000\000\000\000\000\000\031\t\000\000\000\000\000\000\334\t~\003\000\000\000\000\000\000!\t\000\000\000\000\000\000O\004\000\000\000\000\000\000\202\004\000\000\000\000\000\000\324\010\000\000\000\000\000\000#\006\000\000\000\000\000\000K\006\000\000\000\000\000\000\331\t\000\000\000\000\000\000}n\004\000\000\000\000\000\000\252\004\000\000\000\000\000\000\026\005\000\000\000\000\000\000>\n\000\000\000\000\000\000\242\005\000\000\000\000\000\000\345\007\000\000\000\000\000\000\232\006\000\000\000\000\000\000,\007\000\000\000\000\000\000z\006\000\000\000\000\000\000\254\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000A\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\213\005\000\000\000\000\000\000~h\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\352\004\000\000\000\000\000\000\230\005\000\000\000\000\000\000\336\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000\207\006\000\000\000\000\000\000<\010\000\000\000\000\000\000+\016\000\000\000\000\000\000^\004\000\000\000\000\000\000\355\004\000\000\000\000\000\000\342\004\000\000\000\000\000\000\016\014\000\000\000\000\000\000)\t\000\000\000\000\000\0008\013\000\000\000\000\000\000\233\003\000\000\000\000\000\000\310\004\000\000\000\000\000\000?\005\000\000\000\000\000\000d\004\000\000\000\000\000\000\322\t\000\000\000\000\000\000t\006\000\000\000\000\000\000|\021\000\000\000\000\000\000j\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\305\004\000\000\000\000\000\000\243\006\000\000\000\000\000\000X\006\000\000\000\000\000\000|\006\000\000\000\000\000\000\014\007\000\000\000\000\000\000V\006\000\000\000\000\000\000\241\005\000\000\000\000\000\000\300\005\000\000\000\000\000\000\310\004\000\000\000\000\000\000H\005\000\000\000\000\000\000\260\005\000\000\000\000\000\000G\007\000\000\000\000\000\000\232\006\000\000\000\000\000\000\274\004\000\000\000\000\000\000f\005\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1200
              }
            }
            tensor_content: "\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\ntt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\nnt\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\tt\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\tt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\nnt\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\ttn\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\nt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\ttt\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\nttt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\tnt\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\tttt\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\nt\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\tn\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\n
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1200
              }
            }
            tensor_content: "X\003\000\000\000\000\000\000\356\004\000\000\000\000\000\000\230\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000y}\002\000\000\000\000\000\000\361\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000$\004\000\000\000\000\000\000\036\006\000\000\000\000\000\000\204\003\000\000\000\000\000\000\250\006\000\000\000\000\000\000\314\005\000\000\000\000\000\000\010\002\000\000\000\000\000\000\211\002\000\000\000\000\000\000\314\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000v\005\000\000\000\000\000\000\031\006\000\000\000\000\000\000]\004\000\000\000\000\000\000I\004\000\000\000\000\000\000\021\005\000\000\000\000\000\000!\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\004\000\000\000\000\000\000F\005\000\000\000\000\000\000H\003\000\000\000\000\000\000\252\003\000\000\000\000\000\000~\004\000\000\000\000\000\000\330\006\000\000\000\000\000\000\232\005\000\000\000\000\000\000xwd\002\000\000\000\000\000\000\365\003\000\000\000\000\000\000\336\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\004\000\000\000\000\000\000les\007\000\000\000\000\000\000\354\003\000\000\000\000\000\000\240\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\216\003\000\000\000\000\000\000\322\005\000\000\000\000\000\000\300\006\000\000\000\000\000\000\312\003\000\000\000\000\000\000\313\002\000\000\000\000\000\000t\003\000\000\000\000\000\0008\004\000\000\000\000\000\000\200\003\000\000\000\000\000\000\311\003\000\000\000\000\000\000\256\006\000\000\000\000\000\0009\003\000\000\000\000\000\000B\006\000\000\000\000\000\000\260\004\000\000\000\000\000\000<\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\003\000\000\000\000\000\000\337\003\000\000\000\000\000\000p\005\000\000\000\000\000\000\320\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\005\006\000\000\000\000\000\000r\003\000\000\000\000\000\000}`\003\000\000\000\000\000\000W\003\000\000\000\000\000\000\276\006\000\000\000\000\000\000P\005\000\000\000\000\000\000\363\002\000\000\000\000\000\000\261\006\000\000\000\000\000\000a\004\000\000\000\000\000\000\254\004\000\000\000\000\000\000i\002\000\000\000\000\000\000P\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\220\005\000\000\000\000\000\000t\004\000\000\000\000\000\000L\004\000\000\000\000\000\000\205\004\000\000\000\000\000\000D\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000\204\003\000\000\000\000\000\000\336\003\000\000\000\000\000\000\261\002\000\000\000\000\000\000.\004\000\000\000\000\000\000\234\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000\036\003\000\000\000\000\000\000\340\004\000\000\000\000\000\000\332\005\000\000\000\000\000\000\362\003\000\000\000\000\000\000\311\002\000\000\000\000\000\000`\003\000\000\000\000\000\000X\t\000\000\000\000\000\000v\002\000\000\000\000\000\000\263\004\000\000\000\000\000\000\343\001\000\000\000\000\000\000\220\003\000\000\000\000\000\000]\005\000\000\000\000\000\000\252\004\000\000\000\000\000\000\266\005\000\000\000\000\000\000\343\001\000\000\000\000\000\000~\003\000\000\000\000\000\000\\\003\000\000\000\000\000\000\343\001\000\000\000\000\000\000\206\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\236\006\000\000\000\000\000\000\337\002\000\000\000\000\000\000\036\006\000\000\000\000\000\000\256\002\000\000\000\000\000\000\034\002\000\000\000\000\000\000r\002\000\000\000\000\000\000\264\003\000\000\000\000\000\0005\007\000\000\000\000\000\000\374\003\000\000\000\000\000\000W\005\000\000\000\000\000\000H\003\000\000\000\000\000\000\244\005\000\000\000\000\000\000\330\002\000\000\000\000\000\000%\006\000\000\000\000\000\000\036\003\000\000\000\000\000\000\026\005\000\000\000\000\000\000\"\005\000\000\000\000\000\000\317\003\000\000\000\000\000\000`\003\000\000\000\000\000\000D\006\000\000\000\000\000\000\303\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\005\000\000\000\000\000\000\312\005\000\000\000\000\000\000\372\001\000\000\000\000\000\000\236\003\000\000\000\000\000\000\250\002\000\000\000\000\000\000\216\005\000\000\000\000\000\000\"\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\344\002\000\000\000\000\000\000w\004\000\000\000\000\000\000G\004\000\000\000\000\000\000i\005\000\000\000\000\000\000\200\004\000\000\000\000\000\000\330\004\000\000\000\000\000\0000\003\000\000\000\000\000\000\270\003\000\000\000\000\000\000\030\006\000\000\000\000\000\000`\003\000\000\000\000\000\000I\010\000\000\000\000\000\000\210\004\000\000\000\000\000\000\'\003\000\000\000\000\000\000\356\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000\274\005\000\000\000\000\000\000\'\006\000\000\000\000\000\000q\002\000\000\000\000\000\000\220\003\000\000\000\000\000\000Z\003\000\000\000\000\000\000r\003\000\000\000\000\000\000\272\002\000\000\000\000\000\0007\004\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\033\003\000\000\000\000\000\000\210\005\000\000\000\000\000\000\353\003\000\000\000\000\000\000\216\003\000\000\000\000\000\000\317\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000D\004\000\000\000\000\000\000\215\004\000\000\000\000\000\000\004\004\000\000\000\000\000\000\005\006\000\000\000\000\000\000~\003\000\000\000\000\000\000\276\005\000\000\000\000\000\000\320\007\000\000\000\000\000\000\274\002\000\000\000\000\000\000?\001\000\000\000\000\000\000]\003\000\000\000\000\000\000h\007\000\000\000\000\000\000\271\002\000\000\000\000\000\000\314\003\000\000\000\000\000\000\031\003\000\000\000\000\000\000X\010\000\000\000\000\000\000\330\002\000\000\000\000\000\000\314\002\000\000\000\000\000\000M\003\000\000\000\000\000\000@\004\000\000\000\000\000\000C\005\000\000\000\000\000\000\\\005\000\000\000\000\000\000\341\004\000\000\000\000\000\000p\004\000\000\000\000\000\000\336\005\000\000\000\000\000\000\212\004\000\000\000\000\000\000\306\002\000\000\000\000\000\000\320\002\000\000\000\000\000\000\267\006\000\000\000\000\000\000gh\002\000\000\000\000\000\000p\002\000\000\000\000\000\000\254\003\000\000\000\000\000\000\260\004\000\000\000\000\000\000\206\004\000\000\000\000\000\000v\004\000\000\000\000\000\000&\004\000\000\000\000\000\000>\004\000\000\000\000\000\000x\003\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\001\000\000\000\000\000\000\034\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000r\005\000\000\000\000\000\000K\004\000\000\000\000\000\000\364\004\000\000\000\000\000\000\'\004\000\000\000\000\000\000\271\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\002\000\000\000\000\000\000`\002\000\000\000\000\000\000O\003\000\000\000\000\000\000\253\002\000\000\000\000\000\000f\003\000\000\000\000\000\000,\006\000\000\000\000\000\000@\007\000\000\000\000\000\000\326\003\000\000\000\000\000\000\002\004\000\000\000\000\000\000\r\005\000\000\000\000\000\000\253\003\000\000\000\000\000\000\020\003\000\000\000\000\000\000,\006\000\000\000\000\000\000\350\004\000\000\000\000\000\000\222\002\000\000\000\000\000\000\021\004\000\000\000\000\000\000\274\005\000\000\000\000\000\000\222\006\000\000\000\000\000\000]\003\000\000\000\000\000\000$\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\003\000\000\000\000\000\000\337\002\000\000\000\000\000\000x\004\000\000\000\000\000\000~\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\301\003\000\000\000\000\000\000D\004\000\000\000\000\000\000\354\004\000\000\000\000\000\000\036\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000u\004\000\000\000\000\000\000&\003\000\000\000\000\000\000\001\005\000\000\000\000\000\000(\004\000\000\000\000\000\000H\003\000\000\000\000\000\000\'\004\000\000\000\000\000\000\np\005\000\000\000\000\000\000\343\001\000\000\000\000\000\000\205\003\000\000\000\000\000\000\375\002\000\000\000\000\000\000\236\003\000\000\000\000\000\000v\002\000\000\000\000\000\000\037\003\000\000\000\000\000\000\210\002\000\000\000\000\000\000t\003\000\000\000\000\000\000\270\001\000\000\000\000\000\000\254\002\000\000\000\000\000\000\026\014\000\000\000\000\000\000\240\005\000\000\000\000\000\0006\004\000\000\000\000\000\000\352\004\000\000\000\000\000\000\223\003\000\000\000\000\000\000\234\005\000\000\000\000\000\000\355\005\000\000\000\000\000\000\242\003\000\000\000\000\000\000\014\003\000\000\000\000\000\000\211\002\000\000\000\000\000\000-\003\000\000\000\000\000\000\375\005\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000\332\004\000\000\000\000\000\000p\002\000\000\000\000\000\000T\005\000\000\000\000\000\000L\002\000\000\000\000\000\000\305\002\000\000\000\000\000\000@\003\000\000\000\000\000\0000\002\000\000\000\000\000\000`\003\000\000\000\000\000\000\313\002\000\000\000\000\000\000\020\004\000\000\000\000\000\000_\005\000\000\000\000\000\000\375\004\000\000\000\000\000\000\330\002\000\000\000\000\000\000Z\006\000\000\000\000\000\000@\003\000\000\000\000\000\000\320\005\000\000\000\000\000\000(\003\000\000\000\000\000\000#\002\000\000\000\000\000\000\270\007\000\000\000\000\000\000\326\005\000\000\000\000\000\000\312\003\000\000\000\000\000\000\306\005\000\000\000\000\000\000i\010\000\000\000\000\000\000\251\006\000\000\000\000\000\000\213\003\000\000\000\000\000\000)\007\000\000\000\000\000\000\000\007\000\000\000\000\000\000\216\003\000\000\000\000\000\000\300\004\000\000\000\000\000\000\347\003\000\000\000\000\000\000Y\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\314\005\000\000\000\000\000\000\272\003\000\000\000\000\000\000v\002\000\000\000\000\000\000\010\001\000\000\000\000\000\000&\003\000\000\000\000\000\000\330\002\000\000\000\000\000\000\365\004\000\000\000\000\000\000\276\000\000\000\000\000\000\000\320\002\000\000\000\000\000\000\200\014\000\000\000\000\000\000\002\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000b\003\000\000\000\000\000\000\276\004\000\000\000\000\000\000\335\005\000\000\000\000\000\000W\003\000\000\000\000\000\000\300\003\000\000\000\000\000\000\t\003\000\000\000\000\000\000\302\004\000\000\000\000\000\000\261\002\000\000\000\000\000\000\021\004\000\000\000\000\000\000\360\003\000\000\000\000\000\000X\005\000\000\000\000\000\000`\003\000\000\000\000\000\000<\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\326\007\000\000\000\000\000\000\261\002\000\000\000\000\000\000\360\004\000\000\000\000\000\000\032\003\000\000\000\000\000\000\374\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\004\000\000\000\000\000\000\354\003\000\000\000\000\000\000B\014\000\000\000\000\000\000c\005\000\000\000\000\000\000\351\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\254\005\000\000\000\000\000\000\020\002\000\000\000\000\000\000\363\007\000\000\000\000\000\000\265\005\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\002\000\000\000\000\000\000]\004\000\000\000\000\000\000p\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\033\004\000\000\000\000\000\000-\006\000\000\000\000\000\000.\007\000\000\000\000\000\000\311\003\000\000\000\000\000\000r\006\000\000\000\000\000\000\323\002\000\000\000\000\000\000\216\002\000\000\000\000\000\000\264\004\000\000\000\000\000\000)\004\000\000\000\000\000\000\000\003\000\000\000\000\000\0009\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000-\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\255\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\003\000\000\000\000\000\000\341\003\000\000\000\000\000\000D\004\000\000\000\000\000\000}\002\000\000\000\000\000\000\331\002\000\000\000\000\000\000^\005\000\000\000\000\000\000p\005\000\000\000\000\000\000m\005\000\000\000\000\000\000\344\003\000\000\000\000\000\000\213\004\000\000\000\000\000\000G\004\000\000\000\000\000\000&\003\000\000\000\000\000\000b\004\000\000\000\000\000\000\355\005\000\000\000\000\000\000\330\005\000\000\000\000\000\000\257\003\000\000\000\000\000\000\300\006\000\000\000\000\000\000`\003\000\000\000\000\000\000N\003\000\000\000\000\000\000\200\001\000\000\000\000\000\000t\001\000\000\000\000\000\000@\003\000\000\000\000\000\000]\003\000\000\000\000\000\000\214\004\000\000\000\000\000\000\261\002\000\000\000\000\000\000\032\004\000\000\000\000\000\000x\004\000\000\000\000\000\000\372\007\000\000\000\000\000\0000\003\000\000\000\000\000\000\325\004\000\000\000\000\000\000t`\004\000\000\000\000\000\000v\002\000\000\000\000\000\000\250\003\000\000\000\000\000\000\017\003\000\000\000\000\000\000@\003\000\000\000\000\000\000\036\007\000\000\000\000\000\000\312\005\000\000\000\000\000\000`\003\000\000\000\000\000\000\362\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000\334\002\000\000\000\000\000\000\\\004\000\000\000\000\000\000\322\003\000\000\000\000\000\000\204\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000\340\004\000\000\000\000\000\000|\002\000\000\000\000\000\000\022\006\000\000\000\000\000\000jv\002\000\000\000\000\000\000-\003\000\000\000\000\000\000\363\002\000\000\000\000\000\000p\003\000\000\000\000\000\000\364\002\000\000\000\000\000\000=\010\000\000\000\000\000\000\r\002\000\000\000\000\000\000\035\004\000\000\000\000\000\000\010\003\000\000\000\000\000\000\220\003\000\000\000\000\000\000\316\005\000\000\000\000\000\000\031\003\000\000\000\000\000\000]\006\000\000\000\000\000\000p\005\000\000\000\000\000\000r\004\000\000\000\000\000\000\035\010\000\000\000\000\000\000~\005\000\000\000\000\000\000\375\003\000\000\000\000\000\000\200\005\000\000\000\000\000\000\244\004\000\000\000\000\000\000\274\002\000\000\000\000\000\000\342\002\000\000\000\000\000\000\240\002\000\000\000\000\000\000\270\004\000\000\000\000\000\000\305\005\000\000\000\000\000\000p\004\000\000\000\000\000\000W\003\000\000\000\000\000\000G\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\376\007\000\000\000\000\000\000\334\003\000\000\000\000\000\000\233\003\000\000\000\000\000\000\031\003\000\000\000\000\000\000\013\005\000\000\000\000\000\000Z\006\000\000\000\000\000\000\253\004\000\000\000\000\000\000\246\004\000\000\000\000\000\000j\003\000\000\000\000\000\000\'\002\000\000\000\000\000\000\213\005\000\000\000\000\000\000R\005\000\000\000\000\000\000P\003\000\000\000\000\000\000\214\t\000\000\000\000\000\000\272\004\000\000\000\000\000\0001\004\000\000\000\000\000\000\237\003\000\000\000\000\000\000X\004\000\000\000\000\000\000h\002\000\000\000\000\000\000\324\003\000\000\000\000\000\000~\003\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\007\000\000\000\000\000\000\214\004\000\000\000\000\000\000\322\004\000\000\000\000\000\000h\001\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000,\005\000\000\000\000\000\000\330\002\000\000\000\000\000\000l\003\000\000\000\000\000\000\016\001\000\000\000\000\000\000[\003\000\000\000\000\000\000\314\004\000\000\000\000\000\000\300\003\000\000\000\000\000\000\325\002\000\000\000\000\000\000(\004\000\000\000\000\000\000\316\002\000\000\000\000\000\000\230\004\000\000\000\000\000\000\037\005\000\000\000\000\000\000\313\003\000\000\000\000\000\000\316\006\000\000\000\000\000\000P\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\255\003\000\000\000\000\000\000\242\006\000\000\000\000\000\000`\003\000\000\000\000\000\000p\003\000\000\000\000\000\000\320\004\000\000\000\000\000\0000\006\000\000\000\000\000\000\014\003\000\000\000\000\000\000;\006\000\000\000\000\000\000d\003\000\000\000\000\000\000\201\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\264\003\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\260\004\000\000\000\000\000\000`\003\000\000\000\000\000\000\010\001\000\000\000\000\000\000\220\003\000\000\000\000\000\000E\005\000\000\000\000\000\000\010\002\000\000\000\000\000\0009\005\000\000\000\000\000\000v\004\000\000\000\000\000\000\270\003\000\000\000\000\000\000\330\004\000\000\000\000\000\000\270\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\002\000\000\000\000\000\000\224\002\000\000\000\000\000\000\307\005\000\000\000\000\000\000\006\004\000\000\000\000\000\000\002\004\000\000\000\000\000\000\331\002\000\000\000\000\000\000b\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\350\002\000\000\000\000\000\000&\005\000\000\000\000\000\000`\003\000\000\000\000\000\000y\004\000\000\000\000\000\000\364\002\000\000\000\000\000\000\344\004\000\000\000\000\000\000\326\005\000\000\000\000\000\000\332\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000\327\003\000\000\000\000\000\000D\007\000\000\000\000\000\000r\006\000\000\000\000\000\000Z\003\000\000\000\000\000\000D\003\000\000\000\000\000\000\005\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\217\007\000\000\000\000\000\000\264\004\000\000\000\000\000\000N\006\000\000\000\000\000\000`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\003\000\000\000\000\000\000\325\004\000\000\000\000\000\000\371\002\000\000\000\000\000\000\205\005\000\000\000\000\000\000I\004\000\000\000\000\000\000\346\002\000\000\000\000\000\000\\\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000\274\003\000\000\000\000\000\000\205\003\000\000\000\000\000\000@\003\000\000\000\000\000\000y\004\000\000\000\000\000\000\005\004\000\000\000\000\000\000]\004\000\000\000\000\000\000\330\005\000\000\000\000\000\000\310\002\000\000\000\000\000\000\212\002\000\000\000\000\000\000\224\002\000\000\000\000\000\000\005\003\000\000\000\000\000\000\206\007\000\000\000\000\000\000\333\002\000\000\000\000\000\000h\002\000\000\000\000\000\000\254\004\000\000\000\000\000\000\330\002\000\000\000\000\000\000\306\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\211\005\000\000\000\000\000\000\324\003\000\000\000\000\000\000,\005\000\000\000\000\000\000\000\004\000\000\000\000\000\000Q\003\000\000\000\000\000\000\020\004\000\000\000\000\000\000P\003\000\000\000\000\000\000\034\002\000\000\000\000\000\000\242\005\000\000\000\000\000\000\256\002\000\000\000\000\000\000q\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000 \006\000\000\000\000\000\000\362\003\000\000\000\000\000\000N\005\000\000\000\000\000\000\036\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000O\003\000\000\000\000\000\000\n\003\000\000\000\000\000\000\321\005\000\000\000\000\000\000\036\010\000\000\000\000\000\000\020\003\000\000\000\000\000\000\256\005\000\000\000\000\000\000\365\003\000\000\000\000\000\000X\002\000\000\000\000\000\000p\005\000\000\000\000\000\000X\002\000\000\000\000\000\000\255\003\000\000\000\000\000\000\354\005\000\000\000\000\000\000x\004\000\000\000\000\000\000+\004\000\000\000\000\000\000\027\006\000\000\000\000\000\000\343\001\000\000\000\000\000\000K\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\212\002\000\000\000\000\000\000g\004\000\000\000\000\000\000\010\007\000\000\000\000\000\000l\003\000\000\000\000\000\000n\005\000\000\000\000\000\000\344\002\000\000\000\000\000\000`\003\000\000\000\000\000\000\213\003\000\000\000\000\000\000\020\002\000\000\000\000\000\000P\003\000\000\000\000\000\000\371\004\000\000\000\000\000\000\226\003\000\000\000\000\000\000g\004\000\000\000\000\000\000\343\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\254\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000B\004\000\000\000\000\000\000\036\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000\017\004\000\000\000\000\000\000\020\004\000\000\000\000\000\000|\004\000\000\000\000\000\000\\\005\000\000\000\000\000\000\352\003\000\000\000\000\000\000f\006\000\000\000\000\000\000\020\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\004\000\000\000\000\000\000~\003\000\000\000\000\000\000$\003\000\000\000\000\000\000i\000\000\000\000\000\000\000@\003\000\000\000\000\000\000\244\002\000\000\000\000\000\000\240\004\000\000\000\000\000\000(\004\000\000\000\000\000\000\266\005\000\000\000\000\000\000U\004\000\000\000\000\000\000`\003\000\000\000\000\000\000B\004\000\000\000\000\000\000\204\004\000\000\000\000\000\000(\003\000\000\000\000\000\000\033\003\000\000\000\000\000\000|\003\000\000\000\000\000\000\242\006\000\000\000\000\000\000Z\006\000\000\000\000\000\0000\003\000\000\000\000\000\000\251\010\000\000\000\000\000\000\341\005\000\000\000\000\000\000\240\002\000\000\000\000\000\000\226\003\000\000\000\000\000\000#\004\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\267\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\220\003\000\000\000\000\000\000Z\003\000\000\000\000\000\000\340\003\000\000\000\000\000\000\017\003\000\000\000\000\000\000\206\006\000\000\000\000\000\000l\003\000\000\000\000\000\000 \004\000\000\000\000\000\000W\006\000\000\000\000\000\000\371\003\000\000\000\000\000\000`\003\000\000\000\000\000\000\346\002\000\000\000\000\000\000Q\004\000\000\000\000\000\000\364\004\000\000\000\000\000\000\000\003\000\000\000\000\000\000\351\003\000\000\000\000\000\000d\002\000\000\000\000\000\000\"\002\000\000\000\000\000\000\340\001\000\000\000\000\000\000n\004\000\000\000\000\000\000P\004\000\000\000\000\000\000\240\004\000\000\000\000\000\000\240\003\000\000\000\000\000\000\370\004\000\000\000\000\000\000$\005\000\000\000\000\000\000D\006\000\000\000\000\000\000\226\006\000\000\000\000\000\000f\004\000\000\000\000\000\000\235\004\000\000\000\000\000\000@\003\000\000\000\000\000\000\331\006\000\000\000\000\000\000\304\003\000\000\000\000\000\000\272\005\000\000\000\000\000\000\235\003\000\000\000\000\000\000q\007\000\000\000\000\000\000\334\005\000\000\000\000\000\000I\002\000\000\000\000\000\000X\002\000\000\000\000\000\000\230\004\000\000\000\000\000\000Y\004\000\000\000\000\000\000o\005\000\000\000\000\000\000\010\004\000\000\000\000\000\000\300\006\000\000\000\000\000\000\340\003\000\000\000\000\000\000\240\005\000\000\000\000\000\000`\006\000\000\000\000\000\0003\003\000\000\000\000\000\000@\004\000\000\000\000\000\000x\004\000\000\000\000\000\000P\006\000\000\000\000\000\000\250\003\000\000\000\000\000\000\211\004\000\000\000\000\000\000`~\003\000\000\000\000\000\000a\004\000\000\000\000\000\000\260\003\000\000\000\000\000\000\311\004\000\000\000\000\000\000\362\004\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\004\000\000\000\000\000\000\345\001\000\000\000\000\000\000\212\007\000\000\000\000\000\000P\003\000\000\000\000\000\000\002\003\000\000\000\000\000\000t\005\000\000\000\000\000\000\224\003\000\000\000\000\000\0006\003\000\000\000\000\000\000\356\002\000\000\000\000\000\000\244\006\000\000\000\000\000\000\353\002\000\000\000\000\000\000\032\004\000\000\000\000\000\000\242\005\000\000\000\000\000\000\357\003\000\000\000\000\000\000\243\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\002\000\000\000\000\000\000&\006\000\000\000\000\000\000\220\006\000\000\000\000\000\000B\005\000\000\000\000\000\000\331\003\000\000\000\000\000\000y\006\000\000\000\000\000\000\"\002\000\000\000\000\000\000\256\006\000\000\000\000\000\000\360\003\000\000\000\000\000\000\320\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\002\000\000\000\000\000\000\376\003\000\000\000\000\000\000:\004\000\000\000\000\000\000*\003\000\000\000\000\000\000\340\005\000\000\000\000\000\000\304\004\000\000\000\000\000\000\200\001\000\000\000\000\000\000R\005\000\000\000\000\000\000l\004\000\000\000\000\000\000\257\004\000\000\000\000\000\000\220\003\000\000\000\000\000\000B\005\000\000\000\000\000\000\035\006\000\000\000\000\000\000r\003\000\000\000\000\000\000\364\004\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\003\000\000\000\000\000\000\240\002\000\000\000\000\000\000\256\002\000\000\000\000\000\0008\003\000\000\000\000\000\000:\005\000\000\000\000\000\000v\006\000\000\000\000\000\000\230\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\006\000\000\000\000\000\000\037\004\000\000\000\000\000\000\"\002\000\000\000\000\000\000v\002\000\000\000\000\000\000n\004\000\000\000\000\000\000 \003\000\000\000\000\000\000\032\005\000\000\000\000\000\000\303\005\000\000\000\000\000\000\334\t~`\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000\"\005\000\000\000\000\000\000\254\002\000\000\000\000\000\0002\004\000\000\000\000\000\000\240\002\000\000\000\000\000\000\367\004\000\000\000\000\000\000\"\001\000\000\000\000\000\000\266\003\000\000\000\000\000\000\362\003\000\000\000\000\000\000\217\002\000\000\000\000\000\000v\002\000\000\000\000\000\000\267\005\000\000\000\000\000\000\216\003\000\000\000\000\000\000d\003\000\000\000\000\000\000\234\003\000\000\000\000\000\000,\007\000\000\000\000\000\000\005\003\000\000\000\000\000\000#\003\000\000\000\000\000\0000\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000A\003\000\000\000\000\000\000\306\006\000\000\000\000\000\000\230\001\000\000\000\000\000\000~\003\000\000\000\000\000\000\025\002\000\000\000\000\000\000\020\004\000\000\000\000\000\000\364\003\000\000\000\000\000\000\020\006\000\000\000\000\000\000\240\002\000\000\000\000\000\000\272\002\000\000\000\000\000\000\200\001\000\000\000\000\000\000\355\003\000\000\000\000\000\000]\005\000\000\000\000\000\000\372\005\000\000\000\000\000\000O\003\000\000\000\000\000\000\250\003\000\000\000\000\000\000b\004\000\000\000\000\000\000\316\003\000\000\000\000\000\000\360\003\000\000\000\000\000\000h`\003\000\000\000\000\000\000\235\005\000\000\000\000\000\000\303\004\000\000\000\000\000\000\"\005\000\000\000\000\000\000,\006\000\000\000\000\000\000\205\003\000\000\000\000\000\000W\003\000\000\000\000\000\000\020\005\000\000\000\000\000\000~\003\000\000\000\000\000\000\256\004\000\000\000\000\000\000P\005\000\000\000\000\000\000\336\005\000\000\000\000\000\000\236\006\000\000\000\000\000\000\277\003\000\000\000\000\000\000g\004\000\000\000\000\000\000\212\007\000\000\000\000\000\000H\004\000\000\000\000\000\000\355\004\000\000\000\000\000\000q\002\000\000\000\000\000\000>\006\000\000\000\000\000\000\270\003\000\000\000\000\000\000\223\006\000\000\000\000\000\000l\003\000\000\000\000\000\0002\003\000\000\000\000\000\000\333\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\004\000\000\000\000\000\000@\006\000\000\000\000\000\000\\\t\000\000\000\000\000\000`\004\000\000\000\000\000\000$\006\000\000\000\000\000\000\020\003\000\000\000\000\000\000\322\003\000\000\000\000\000\000X\006\000\000\000\000\000\000?\003\000\000\000\000\000\000\342\003\000\000\000\000\000\000\341\004\000\000\000\000\000\000\010\003\000\000\000\000\000\000\276\002\000\000\000\000\000\000\310\004\000\000\000\000\000\000\227\002\000\000\000\000\000\000\330\002\000\000\000\000\000\000o\003\000\000\000\000\000\000/\003\000\000\000\000\000\000\274\004\000\000\000\000\000\000\033\004\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/tensors/component_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1200
              }
            }
            tensor_content: "t.\003\000\000\000\000\000\374\304\002\000\000\000\000\000\014i\003\000\000\000\000\000\340\"\002\000\000\000\000\000\220\320\003\000\000\000\000\000\230.\002\000\000\000\000\0008\257\004\000\000\000\000\000@\r\003\000\000\000\000\000l\373\001\000\000\000\000\000\360\314\001\000\000\000\000\000\334\371\001\000\000\000\000\000\250C\005\000\000\000\000\000\2002\002\000\000\000\000\000\314C\004\000\000\000\000\000He\002\000\000\000\000\000\240\003\002\000\000\000\000\000\010F\002\000\000\000\000\000\220_\001\000\000\000\000\000\030m\002\000\000\000\000\000\370\036\002\000\000\000\000\000\264\366\004\000\000\000\000\000\210 \002\000\000\000\000\000p\202\003\000\000\000\000\000l\373\001\000\000\000\000\000\220Y\002\000\000\000\000\000,\351\003\000\000\000\000\000\220\016\002\000\000\000\000\000P\253\004\000\000\000\000\000\214*\003\000\000\000\000\000\224\013\001\000\000\000\000\000@\234\000\000\000\000\000\000fG\002\000\000\000\000\000\274\276\002\000\000\000\000\000|\206\002\000\000\000\000\000\374;\004\000\000\000\000\000\010\267\004\000\000\000\000\000h6\002\000\000\000\000\000\250U\002\000\000\000\000\000\310\251\001\000\000\000\000\000P@\001\000\000\000\000\000\000q\002\000\000\000\000\000\020\230\002\000\000\000\000\000\2002\002\000\000\000\000\000\312\374\001\000\000\000\000\000\310&\002\000\000\000\000\000\234\341\004\000\000\000\000\000F\250\003\000\000\000\000\000d\317\003\000\000\000\000\000h\271\001\000\000\000\000\000\030\360\001\000\000\000\000\000h\263\002\000\000\000\000\000D\277\001\000\000\000\000\000\260\255\001\000\000\000\000\000\350\337\005\000\000\000\000\000\320\373\001\000\000\000\000\000\024\301\002\000\000\000\000\000\324\241\002\000\000\000\000\000\224\377\002\000\000\000\000\000\374\261\006\000\000\000\000\000\344\347\001\000\000\000\000\0000i\002\000\000\000\000\000\210\212\001\000\000\000\000\000\004\027\003\000\000\000\000\000\340\"\002\000\000\000\000\000lY\003\000\000\000\000\000H\326\004\000\000\000\000\000 \277\002\000\000\000\000\000\320r\003\000\000\000\000\000\2008\001\000\000\000\000\000\350n\003\000\000\000\000\000 \271\003\000\000\000\000\000\334\371\001\000\000\000\000\000\250\322\002\000\000\000\000\000\0046\002\000\000\000\000\000\210\243\001\000\000\000\000\000xc~\002\000\000\000\000\000\014\013\002\000\000\000\000\000\316\037\003\000\000\000\000\000\250\322\002\000\000\000\000\000\360C\003\000\000\000\000\000\036r\001\000\000\000\000\0008D\001\000\000\000\000\000\266\367\001\000\000\000\000\000\310 \003\000\000\000\000\000P\267\002\000\000\000\000\000\264\320\001\000\000\000\000\000\364\010\003\000\000\000\000\000\034\226\002\000\000\000\000\000\220\320\003\000\000\000\000\000\240\206\001\000\000\000\000\0008\301\001\000\000\000\000\0008\301\001\000\000\000\000\0000\346\002\000\000\000\000\000\304\026\002\000\000\000\000\000 \277\002\000\000\000\000\000\342\333\005\000\000\000\000\000\250O\003\000\000\000\000\000\254\365\003\000\000\000\000\000\200\257\002\000\000\000\000\000\370\036\002\000\000\000\000\000x]\002\000\000\000\000\000\000\342\004\000\000\000\000\000\226\200\002\000\000\000\000\000 \277\002\000\000\000\000\000\240\206\001\000\000\000\000\000@\023\002\000\000\000\000\000,Y\002\000\000\000\000\000\010\303\002\000\000\000\000\000\024J\001\000\000\000\000\000\000\364\001\000\000\000\000\000\330S\001\000\000\000\000\000x]\002\000\000\000\000\000\360I\002\000\000\000\000\000\320r\003\000\000\000\000\000 \271\003\000\000\000\000\000\336L\002\000\000\000\000\000`[\003\000\000\000\000\000 \277\002\000\000\000\000\000\260\247\002\000\000\000\000\000\230.\002\000\000\000\000\000\370\233\002\000\000\000\000\000p\202\003\000\000\000\000\000L\210\003\000\000\000\000\0008\301\001\000\000\000\000\000\240\367\003\000\000\000\000\000p\210\002\000\000\000\000\000\340\034\003\000\000\000\000\000H\350\001\000\000\000\000\000\320\373\001\000\000\000\000\000(\232\001\000\000\000\000\000$e\003\000\000\000\000\000\310&\002\000\000\000\000\0008\301\001\000\000\000\000\000\220\334\001\000\000\000\000\000\262\256\005\000\000\000\000\0000\346\002\000\000\000\000\000\370\225\003\000\000\000\000\000H\350\001\000\000\000\000\000\2304\001\000\000\000\000\000\274\253\001\000\000\000\000\000\274\034\004\000\000\000\000\000\264\343\003\000\000\000\000\000\000\342\004\000\000\000\000\000\304z\002\000\000\000\000\000TK\006\000\000\000\000\000`[\003\000\000\000\000\000 \223\001\000\000\000\000\000\300Q\002\000\000\000\000\000\014\362\001\000\000\000\000\0000\346\002\000\000\000\000\000\370\367\004\000\000\000\000\000\314\314\002\000\000\000\000\000\240z\003\000\000\000\000\000\364\365\001\000\000\000\000\000\330G\003\000\000\000\000\000\230\245\003\000\000\000\000\000\270|\002\000\000\000\000\000\300\316\002\000\000\000\000\0008\265\003\000\000\000\000\00088\003\000\000\000\000\000\324\241\002\000\000\000\000\000M\250\007\000\000\000\000\000\240\206\001\000\000\000\000\000h\263\002\000\000\000\000\000\244\r\003\000\000\000\000\000\300\324\001\000\000\000\000\000@\r\003\000\000\000\000\000\030\360\001\000\000\000\000\000x?\007\000\000\000\000\000\310\243\002\000\000\000\000\000X\017\002\000\000\000\000\000\371V\002\000\000\000\000\0000]\004\000\000\000\000\000xh6\002\000\000\000\000\000\320~\001\000\000\000\000\000\220\326\002\000\000\000\000\000\006\333\003\000\000\000\000\000`a\002\000\000\000\000\000\326w\002\000\000\000\000\0002\r\002\000\000\000\000\000P4\003\000\000\000\000\000\370\241\001\000\000\000\000\000\314\300\004\000\000\000\000\000H\215\002\000\000\000\000\000d \003\000\000\000\000\000@\r\003\000\000\000\000\000\274\276\002\000\000\000\000\000\350z\001\000\000\000\000\000\312\344\005\000\000\000\000\000\200\265\001\000\000\000\000\000\320l\004\000\000\000\000\000\020\236\001\000\000\000\000\000H\350\001\000\000\000\000\000\364\357\002\000\000\000\000\000 B\002\000\000\000\000\0008&\006\000\000\000\000\000$q\001\000\000\000\000\000\310\364\001\000\000\000\000\000\264M\003\000\000\000\000\000\234]\001\000\000\000\000\000\234\324\002\000\000\000\000\000\304\367\002\000\000\000\000\0000\332\004\000\000\000\000\000h\271\001\000\000\000\000\000d\001\004\000\000\000\000\000\244\257\001\000\000\000\000\000\2304\001\000\000\000\000\000\300\324\001\000\000\000\000\000\310 \003\000\000\000\000\000\\\257\003\000\000\000\000\000(\027\002\000\000\000\000\000\340\"\002\000\000\000\000\000 \277\002\000\000\000\000\000\010:\004\000\000\000\000\000\324*\001\000\000\000\000\000\370\225\003\000\000\000\000\000\310\243\002\000\000\000\000\0000i\002\000\000\000\000\000h6\002\000\000\000\000\000p\202\003\000\000\000\000\000\214*\003\000\000\000\000\000`[\003\000\000\000\000\000L\210\003\000\000\000\000\000\350z\001\000\000\000\000\000\200\257\002\000\000\000\000\000 6\004\000\000\000\000\000\330M\002\000\000\000\000\000\320\373\001\000\000\000\000\000(\035\001\000\000\000\000\000\214\255\002\000\000\000\000\000\250\322\002\000\000\000\000\000,\275\002\000\000\000\000\000\264\326\001\000\000\000\000\000 B\002\000\000\000\000\000\020\017\004\000\000\000\000\000\\\257\003\000\000\000\000\000\320l\004\000\000\000\000\000\370\036\002\000\000\000\000\000T\346\001\000\000\000\000\000\310 \003\000\000\000\000\000(\021\003\000\000\000\000\000\310&\002\000\000\000\000\000BV\006\000\000\000\000\000\000\356\002\000\000\000\000\000\224|\003\000\000\000\000\000\250\322\002\000\000\000\000\000\214*\003\000\000\000\000\000x\273\003\000\000\000\000\000\000\274\002\000\000\000\000\000\\\203\002\000\000\000\000\000\030m\002\000\000\000\000\000\300W\001\000\000\000\000\000\220\334\001\000\000\000\000\000\347W\002\000\000\000\000\000\016\217\003\000\000\000\000\000\334\022\002\000\000\000\000\000\270\377\001\000\000\000\000\000\370\225\003\000\000\000\000\000X\214\002\000\000\000\000\000\244,\002\000\000\000\000\000\300Q\002\000\000\000\000\000\230\245\003\000\000\000\000\000\230\253\002\000\000\000\000\000$k\002\000\000\000\000\000He\002\000\000\000\000\000\370\022\004\000\000\000\000\000\310 \003\000\000\000\000\000\214I\002\000\000\000\000\000X\200\004\000\000\000\000\000\354\252\004\000\000\000\000\000\350n\003\000\000\000\000\000\234]\001\000\000\000\000\000DB\001\000\000\000\000\000@~\005\000\000\000\000\000\340\206\002\000\000\000\000\000\240\003\002\000\000\000\000\000\\\324\001\000\000\000\000\000\330\270\005\000\000\000\000\000P\267\002\000\000\000\000\000T\340\002\000\000\000\000\000\240\367\003\000\000\000\000\000\260\036\004\000\000\000\000\000\240\367\003\000\000\000\000\000l\334\002\000\000\000\000\000s:\005\000\000\000\000\000\320f\005\000\000\000\000\000\310\227\004\000\000\000\000\000\337\354\001\000\000\000\000\000P\261\003\000\000\000\000\000\330S\001\000\000\000\000\000\240\361\004\000\000\000\000\000b7\002\000\000\000\000\000\344E\003\000\000\000\000\000\2600\001\000\000\000\000\000\330\320\001\000\000\000\000\000\370\036\002\000\000\000\000\000`U\004\000\000\000\000\000\230(\003\000\000\000\000\000\000\356\002\000\000\000\000\000V~\003\000\000\000\000\000R\302\005\000\000\000\000\000\360C\003\000\000\000\000\000\004\027\003\000\000\000\000\000x]\002\000\000\000\000\000\224\030\003\000\000\000\000\000P@\001\000\000\000\000\000\314U\001\000\000\000\000\000\020\017\004\000\000\000\000\000\010L\001\000\000\000\000\000\250#\002\000\000\000\000\000\314O\002\000\000\000\000\000<g\002\000\000\000\000\000\220Y\002\000\000\000\000\000\242\253\006\000\000\000\000\000m\332\004\000\000\000\000\0000\346\002\000\000\000\000\000\030s\001\000\000\000\000\000\254\235\001\000\000\000\000\000\340\"\002\000\000\000\000\000\\\265\002\000\000\000\000\000\310\243\002\000\000\000\000\000p\013\002\000\000\000\000\000\320\373\001\000\000\000\000\000\300E\004\000\000\000\000\000`a\002\000\000\000\000\000h6\002\000\000\000\000\000d\007\003\000\000\000\000\000\360\314\001\000\000\000\000\0000\346\002\000\000\000\000\0008>\002\000\000\000\000\000\030m\002\000\000\000\000\000\210\204\002\000\000\000\000\000\240\003\002\000\000\000\000\000\320x\002\000\000\000\000\000p\241\002\000\000\000\000\000 \r\002\000\000\000\000\000H\350\001\000\000\000\000\000x\340\001\000\000\000\000\000lY\003\000\000\000\000\000H\356\000\000\000\000\000\000 B\002\000\000\000\000\000 0\005\000\000\000\000\000\300\004\006\000\000\000\000\0008\273\002\000\000\000\000\000\030\360\001\000\000\000\000\000f\335\002\000\000\000\000\000\374A\003\000\000\000\000\000\340(\001\000\000\000\000\000\200\251\003\000\000\000\000\000\000\356\002\000\000\000\000\000h<\001\000\000\000\000\000H\350\001\000\000\000\000\000\030\352\002\000\000\000\000\000\020\200\006\000\000\000\000\000\330\320\001\000\000\000\000\000\330G\003\000\000\000\000\000\004\240\001\000\000\000\000\000\240\206\001\000\000\000\000\000\310\251\001\000\000\000\000\000\350\367\001\000\000\000\000\000x\340\001\000\000\000\000\000\034\226\002\000\000\000\000\000\270\005\001\000\000\000\000\000h\255\003\000\000\000\000\000\374\276\003\000\000\000\000\000~\204\002\000\000\000\000\000\340\245\001\000\000\000\000\000\320\357\003\000\000\000\000\000@\220\002\000\000\000\000\000\360I\002\000\000\000\000\0008\301\001\000\000\000\000\000h\263\002\000\000\000\000\000\300E\004\000\000\000\000\000&/\005\000\000\000\000\000`\352\000\000\000\000\000\000h6\002\000\000\000\000\0000c\003\000\000\000\000\0008\301\001\000\000\000\000\000\240z\003\000\000\000\000\000\216\303\002\000\000\000\000\000\374G\002\000\000\000\000\000\230\245\003\000\000\000\000\0000\354\001\000\000\000\000\000\260*\002\000\000\000\000\000\334%\003\000\000\000\000\000\330G\003\000\000\000\000\000h\271\001\000\000\000\000\000x\316\004\000\000\000\000\000\370\036\002\000\000\000\000\000X\017\002\000\000\000\000\00082\004\000\000\000\000\000\320\251\001\000\000\000\000\000H\373\002\000\000\000\000\000\230\253\002\000\000\000\000\000\230M\001\000\000\000\000\000\0348\001\000\000\000\000\000\204\336\001\000\000\000\000\000\010\303\002\000\000\000\000\000h<\001\000\000\000\000\000 <\003\000\000\000\000\000 \305\001\000\000\000\000\000\330\320\001\000\000\000\000\000\356`\001\000\000\000\000\000\260\255\001\000\000\000\000\000\370w\010\000\000\000\000\000\360\314\001\000\000\000\000\000T|\002\000\000\000\000\000\324\241\002\000\000\000\000\000P4\003\000\000\000\000\000\014\362\001\000\000\000\000\0000\346\002\000\000\000\000\000\334\014\003\000\000\000\000\000\314\322\001\000\000\000\000\000\300\324\001\000\000\000\000\000\260\255\001\000\000\000\000\000\300E\004\000\000\000\000\000\340\034\003\000\000\000\000\000P4\003\000\000\000\000\000`\336\002\000\000\000\000\000\214\255\002\000\000\000\000\000\320~\001\000\000\000\000\000\000\350\003\000\000\000\000\000\350t\002\000\000\000\000\000\260\255\001\000\000\000\000\000\013\005\004\000\000\000\000\000x]\002\000\000\000\000\000\257\363\000\000\000\000\000\000\034\341\002\000\000\000\000\000`\344\001\000\000\000\000\0004\272\002\000\000\000\000\000X\214\002\000\000\000\000\000D<\002\000\000\000\000\000\220\320\003\000\000\000\000\000x\332\002\000\000\000\000\000 <\003\000\000\000\000\0000\346\002\000\000\000\000\000 B\002\000\000\000\000\000\300\266\006\000\000\000\000\000x\324\003\000\000\000\000\000\224\005\002\000\000\000\000\000\0040\003\000\000\000\000\000`\314\005\000\000\000\000\000(\210\004\000\000\000\000\000\177]\001\000\000\000\000\000p\371\004\000\000\000\000\000\360\264\005\000\000\000\000\000x]\002\000\000\000\000\000\240\200\002\000\000\000\000\000\224\005\002\000\000\000\000\0008>\002\000\000\000\000\000`a\002\000\000\000\000\000\230\253\002\000\000\000\000\000\000q\002\000\000\000\000\000\360O\001\000\000\000\000\0008\301\001\000\000\000\000\000\210\007\002\000\000\000\000\000\361\242\002\000\000\000\000\000x]\002\000\000\000\000\000\244d\001\000\000\000\000\000T\210\000\000\000\000\000\000\260\217\006\000\000\000\000\000\300\316\002\000\000\000\000\000\320\373\001\000\000\000\000\000\300\324\001\000\000\000\000\000h\271\001\000\000\000\000\000\214u\003\000\000\000\000\000\340\"\002\000\000\000\000\000\350h\004\000\000\000\000\0008>\002\000\000\000\000\000T\346\001\000\000\000\000\000\330G\003\000\000\000\000\000\254-\003\000\000\000\000\000\350t\002\000\000\000\000\000T\346\001\000\000\000\000\000$\204\002\000\000\000\000\000\251\027\003\000\000\000\000\000l\373\001\000\000\000\000\000p\013\002\000\000\000\000\000\364x\001\000\000\000\000\000\255%\006\000\000\000\000\0000i\002\000\000\000\000\000(\013\004\000\000\000\000\00088\003\000\000\000\000\000\020\222\003\000\000\000\000\000\n\237\001\000\000\000\000\000\360I\002\000\000\000\000\000\030m\002\000\000\000\000\000\256\321\002\000\000\000\000\000f\321\004\000\000\000\000\000\200\257\002\000\000\000\000\000\240\003\002\000\000\000\000\0005\317\006\000\000\000\000\000\360O\001\000\000\000\000\000\260\017\003\000\000\000\000\000\230\253\002\000\000\000\000\000\000\364\001\000\000\000\000\000\354\243\001\000\000\000\000\000\204\231\000\000\000\000\000\000P\267\002\000\000\000\000\000\354\243\001\000\000\000\000\000`\336\002\000\000\000\000\000\222\262\001\000\000\000\000\0000i\002\000\000\000\000\000\200&\004\000\000\000\000\000x\316\004\000\000\000\000\000\300\310\003\000\000\000\000\000\002A\003\000\000\000\000\000\210\007\002\000\000\000\000\000\321\275\002\000\000\000\000\000\210~\003\000\000\000\000\000P4\003\000\000\000\000\000\334\371\001\000\000\000\000\000H\350\001\000\000\000\000\000X\003\004\000\000\000\000\000\340\"\002\000\000\000\000\000t\267\001\000\000\000\000\000\014\346\003\000\000\000\000\000\340\245\001\000\000\000\000\000`U\004\000\000\000\000\000hl\003\000\000\000\000\000\020\230\002\000\000\000\000\000\370\036\002\000\000\000\000\000\344\316\001\000\000\000\000\000h6\002\000\000\000\000\000\224\202\002\000\000\000\000\000P:\002\000\000\000\000\000\254\001\002\000\000\000\000\000\214\306\002\000\000\000\000\000m\335\003\000\000\000\000\000\344\316\001\000\000\000\000\000\210\365\004\000\000\000\000\000\210\007\002\000\000\000\000\000\354\244\005\000\000\000\000\000\320\373\001\000\000\000\000\000(\027\002\000\000\000\000\000\230.\002\000\000\000\000\000\2146\001\000\000\000\000\000,\326\002\000\000\000\000\000n\345\006\000\000\000\000\000\020\033\002\000\000\000\000\000\340\"\002\000\000\000\000\000\260\255\001\000\000\000\000\000\030\336\004\000\000\000\000\000H\277\001\000\000\000\000\000\231\366\002\000\000\000\000\000\234Q\003\000\000\000\000\000\330M\002\000\000\000\000\00082\004\000\000\000\000\000\310&\002\000\000\000\000\000`[\003\000\000\000\000\000\330M\002\000\000\000\000\000H_\003\000\000\000\000\000\310 \003\000\000\000\000\000\300Q\002\000\000\000\000\000\350n\003\000\000\000\000\000\274z\005\000\000\000\000\000\344\316\001\000\000\000\000\000\250\306\004\000\000\000\000\000 B\002\000\000\000\000\000|\375\003\000\000\000\000\0008>\002\000\000\000\000\000\354&\001\000\000\000\000\000\034\031\002\000\000\000\000\000\240\313\002\000\000\000\000\000\034\234\001\000\000\000\000\000\275\315\004\000\000\000\000\000h\247\004\000\000\000\000\000\270\005\001\000\000\000\000\000\200\251\003\000\000\000\000\000X\017\002\000\000\000\000\0004\222\002\000\000\000\000\000\036\205\002\000\000\000\000\000\000q\002\000\000\000\000\000|\"\002\000\000\000\000\000\250U\002\000\000\000\000\000X\017\002\000\000\000\000\0004\222\002\000\000\000\000\000`\344\001\000\000\000\000\000\\2\003\000\000\000\000\000DB\001\000\000\000\000\000\210 \002\000\000\000\000\000\2002\002\000\000\000\000\000@\r\003\000\000\000\000\000`\352\000\000\000\000\000\000Hk\001\000\000\000\000\000\010L\001\000\000\000\000\000q\t\004\000\000\000\000\000P.\004\000\000\000\000\000\320r\003\000\000\000\000\000\250C\005\000\000\000\000\000\300Q\002\000\000\000\000\000\276\250\005\000\000\000\000\000\222/\002\000\000\000\000\000\374\177\001\000\000\000\000\000x]\002\000\000\000\000\000x]\002\000\000\000\000\000\024J\001\000\000\000\000\000~$\003\000\000\000\000\000\340\245\001\000\000\000\000\000\030\352\002\000\000\000\000\000X\017\002\000\000\000\000\0000W\005\000\000\000\000\000\300W\001\000\000\000\000\000\\8\002\000\000\000\000\000\010F\002\000\000\000\000\000\334|\001\000\000\000\000\000X\214\002\000\000\000\000\000\014\005\003\000\000\000\000\000P\"\006\000\000\000\000\000\260\255\001\000\000\000\000\000\034\031\002\000\000\000\000\000Xt\006\000\000\000\000\000d\204\003\000\000\000\000\000\350\367\001\000\000\000\000\000\334\363\002\000\000\000\000\000@\220\002\000\000\000\000\000\034\031\002\000\000\000\000\000\274\245\002\000\000\000\000\000\260\224\001\000\000\000\000\000\210\204\002\000\000\000\000\000\334\355\003\000\000\000\000\000\340\"\002\000\000\000\000\000\024D\002\000\000\000\000\000\330S\001\000\000\000\000\000\274\253\001\000\000\000\000\000\024\257\005\000\000\000\000\000\364\365\001\000\000\000\000\000\230.\002\000\000\000\000\000\312n\002\000\000\000\000\000\310\243\002\000\000\000\000\000HY\004\000\000\000\000\000H_\003\000\000\000\000\000\214*\003\000\000\000\000\000#z\003\000\000\000\000\000@E\002\000\000\000\000\000@\373\005\000\000\000\000\000\214\370\002\000\000\000\000\000\310&\002\000\000\000\000\0008\205\013\000\000\000\000\000\230\034\005\000\000\000\000\000\300\247\001\000\000\000\000\000\274(\002\000\000\000\000\000\200\257\002\000\000\000\000\000\250[\001\000\000\000\000\000l\342\001\000\000\000\000\000\004\035\002\000\000\000\000\000\240\375\002\000\000\000\000\000\264\304\004\000\000\000\000\000\340\"\002\000\000\000\000\000\277\205\005\000\000\000\000\000\340\"\002\000\000\000\000\000\010@\003\000\000\000\000\000\330\326\000\000\000\000\000\000\260\233\004\000\000\000\000\0000\340\003\000\000\000\000\000T\275\002\000\000\000\000\000L\255\001\000\000\000\000\000 \313\000\000\000\000\000\000x\221\001\000\000\000\000\000H\342\002\000\000\000\000\000\350\367\001\000\000\000\000\000\304\375\001\000\000\000\000\000\210\204\002\000\000\000\000\000\014o\002\000\000\000\000\000He\002\000\000\000\000\000\0104\005\000\000\000\000\000\364\365\001\000\000\000\000\00082\004\000\000\000\000\000\230.\002\000\000\000\000\000T\346\001\000\000\000\000\000X\017\002\000\000\000\000\000\000\342\004\000\000\000\000\000\264\326\001\000\000\000\000\0000c\003\000\000\000\000\000\304\367\002\000\000\000\000\000\260\255\001\000\000\000\000\000X\222\001\000\000\000\000\000\324\233\003\000\000\000\000\000l\334\002\000\000\000\000\000$e\003\000\000\000\000\000H\001\002\000\000\000\000\000\340\245\001\000\000\000\000\000\270|\002\000\000\000\000\000<m\001\000\000\000\000\000\034\251\003\000\000\000\000\0008\273\002\000\000\000\000\0000\346\002\000\000\000\000\000\240\003\002\000\000\000\000\000\260*\002\000\000\000\000\0008\273\002\000\000\000\000\000\230\253\002\000\000\000\000\000 \277\002\000\000\000\000\000\030\223\004\000\000\000\000\000\340\231\003\000\000\000\000\000\373\016\004\000\000\000\000\0000\371\003\000\000\000\000\000\320~\001\000\000\000\000\000\364x\001\000\000\000\000\000\320x\002\000\000\000\000\000\250O\003\000\000\000\000\000,4\004\000\000\000\000\000`a\002\000\000\000\000\000\324\241\002\000\000\000\000\000 <\003\000\000\000\000\000\264l\002\000\000\000\000\000\310\274\002\000\000\000\000\000\320l\004\000\000\000\000\000\014\362\001\000\000\000\000\000\240\206\001\000\000\000\000\000\240H\003\000\000\000\000\000h$\005\000\000\000\000\000\260\036\004\000\000\000\000\000\304\007\004\000\000\000\000\000\224\377\002\000\000\000\000\000\000q\002\000\000\000\000\000\005O\003\000\000\000\000\000\2205\010\000\000\000\000\000\364\016\002\000\000\000\000\000p\216\001\000\000\000\000\000\370\241\001\000\000\000\000\000D\277\001\000\000\000\000\000\370\006\006\000\000\000\000\000\320x\002\000\000\000\000\000<a\003\000\000\000\000\000\244,\002\000\000\000\000\000\2002\002\000\000\000\000\000X\017\002\000\000\000\000\000\200\257\002\000\000\000\000\000\034\257\002\000\000\000\000\000\334\332\002\000\000\000\000\000|\206\002\000\000\000\000\000\000\364\001\000\000\000\000\000\334v\002\000\000\000\000\000\370\036\002\000\000\000\000\000(\216\003\000\000\000\000\000|\245\001\000\000\000\000\000l\334\002\000\000\000\000\000\310q\002\000\000\000\000\000p=\002\000\000\000\000\000\336\035\004\000\000\000\000\000\350n\003\000\000\000\000\000\304\367\002\000\000\000\000\000\370\233\002\000\000\000\000\000\2140\002\000\000\000\000\000\260\255\001\000\000\000\000\000\210f\007\000\000\000\000\000\230\253\002\000\000\000\000\000@\r\003\000\000\000\000\000L\255\001\000\000\000\000\000H\342\002\000\000\000\000\000\025\345\010\000\000\000\000\000\360\314\001\000\000\000\000\000`y\003\000\000\000\000\000L\021\002\000\000\000\000\000\014i\003\000\000\000\000\000\316p\002\000\000\000\000\000\020\236\001\000\000\000\000\000\010\303\002\000\000\000\000\000t4\002\000\000\000\000\000\271\332\000\000\000\000\000\000\314h\002\000\000\000\000\000 \305\001\000\000\000\000\000\204n\003\000\000\000\000\000(\027\002\000\000\000\000\000\230\"\004\000\000\000\000\000x]\002\000\000\000\000\000\000k\003\000\000\000\000\000\330\312\002\000\000\000\000\000Hk\001\000\000\000\000\000\350n\003\000\000\000\000\000\354 \002\000\000\000\000\000\230\214\003\000\000\000\000\000\350\337\005\000\000\000\000\000\274\253\001\000\000\000\000\000H\342\002\000\000\000\000\000\250\322\002\000\000\000\000\000\310?\002\000\000\000\000\000p\210\002\000\000\000\000\000\330M\002\000\000\000\000\000\310\235\003\000\000\000\000\000X\214\002\000\000\000\000\000\256\"\002\000\000\000\000\000\000\364\001\000\000\000\000\000\234W\002\000\000\000\000\000\240\206\001\000\000\000\000\000\2002\002\000\000\000\000\000\304\375\001\000\000\000\000\000\340\"\002\000\000\000\000\000<g\002\000\000\000\000\0004\253\002\000\000\000\000\000\310&\002\000\000\000\000\000,Y\002\000\000\000\000\000\370\233\002\000\000\000\000\000\010@\003\000\000\000\000\000|\t\002\000\000\000\000\000\200\251\003\000\000\000\000\000x\332\002\000\000\000\000\000\254\001\002\000\000\000\000\000\330G\003\000\000\000\000\000\240\200\002\000\000\000\000\0000iu\241\004\000\000\000\000\000\232\004\002\000\000\000\000\0000W\005\000\000\000\000\000 B\002\000\000\000\000\0004\025\002\000\000\000\000\000He\002\000\000\000\000\000l\334\002\000\000\000\000\000P\267\002\000\000\000\000\000\344\316\001\000\000\000\000\000\240\206\001\000\000\000\000\000\304\004\005\000\000\000\000\000h6\002\000\000\000\000\000L\021\002\000\000\000\000\000\340\026\004\000\000\000\000\000\374G\002\000\000\000\000\000\024\340\001\000\000\000\000\000\324\241\002\000\000\000\000\000\204[\002\000\000\000\000\000\210\204\002\000\000\000\000\000J\320\001\000\000\000\000\000\340\"\002\000\000\000\000\000\004\240\001\000\000\000\000\000i.\002\000\000\000\000\000IU\t\000\000\000\000\000X\017\002\000\000\000\000\000\260\255\001\000\000\000\000\000\250U\002\000\000\000\000\000 \277\002\000\000\000\000\000\200\251\003\000\000\000\000\000<\352\001\000\000\000\000\000\000\364\001\000\000\000\000\000\030\344\003\000\000\000\000\000\220\320\003\000\000\000\000\000\270\377\001\000\000\000\000\000\260\247\002\000\000\000\000\000\274Z\002\000\000\000\000\000\2140\002\000\000\000\000\000\300W\001\000\000\000\000\000h6\002\000\000\000\000\000\245\246\002\000\000\000\000\000\370$\001\000\000\000\000\000\357\211\000\000\000\000\000\000X\017\002\000\000\000\000\000\260\241\003\000\000\000\000\000t\261\002\000\000\000\000\000(\021\003\000\000\000\000\000\3549\002\000\000\000\000\000\006\230\002\000\000\000\000\000\350\361\002\000\000\000\000\000\214*\003\000\000\000\000\000\230\253\002\000\000\000\000\000HY\004\000\000\000\000\000\200\257\002\000\000\000\000\000\324\233\003\000\000\000\000\0000c\003\000\000\000\000\000(\021\003\000\000\000\000\000\374\312\001\000\000\000\000\000\000\342\004\000\000\000\000\0000\346\002\000\000\000\000\000P\261\003\000\000\000\000\000\0348\001\000\000\000\000\000D\322\002\000\000\000\000\000H\334\003\000\000\000\000\000\267\250\003\000\000\000\000\000\260\272\003\000\000\000\000\000tM\002\000\000\000\000\000\360C\003\000\000\000\000\000\360I\002\000\000\000\000\000\230.\002\000\000\000\000\000\034\031\002\000\000\000\000\000\344\347\001\000\000\000\000\000\230.\002\000\000\000\000\000\260\036\004\000\000\000\000\000\364\357\002\000\000\000\000\000|\003\003\000\000\000\000\000\350\367\001\000\000\000\000\000\\\324\001\000\000\000\000\000\014\013\002\000\000\000\000\000\340\237\002\000\000\000\000\000\014\362\001\000\000\000\000\000h6\002\000\000\000\000\000`\344\001\000\000\000\000\000\240\003\002\000\000\000\000\000\250\322\002\000\000\000\000\000x]\002\000\000\000\000\000\024\307\001\000\000\000\000\000\200&\004\000\000\000\000\000x]\002\000\000\000\000\000\230\245\003\000\000\000\000\000tG\003\000\000\000\000\000\324\272\002\000\000\000\000\000\000q\002\000\000\000\000\000X\017\002\000\000\000\000\000\014\224\000\000\000\000\000\000\340\"\002\000\000\000\000\000X\017\002\000\000\000\000\000\310\243\002\000\000\000\000\000\254\204\001\000\000\000\000\000\360\306\002\000\000\000\000\000L\216\002\000\000\000\000\000\210\204\002\000\000\000\000\000\374M\001\000\000\000\000\000\334\014\003\000\000\000\000\000\260\255\001\000\000\000\000\000\370\036\002\000\000\000\000\000\340\270\002\000\000\000\000\000\200 \005\000\000\000\000\000\227p\002\000\000\000\000\000\234\347\003\000\000\000\000\0000\354\001\000\000\000\000\000H\350\001\000\000\000\000\000\010\311\001\000\000\000\000\000\270\007\006\000\000\000\000\000\270\371\002\000\000\000\000\000\210\001\003\000\000\000\000\000`O\005\000\000\000\000\000@\220\002\000\000\000\000\000x\332\002\000\000\000\000\000L\247\002\000\000\000\000\000\\&\005\000\000\000\000\000\000\333\001\000\000\000\000\0004\025\002\000\000\000\000\000\250\322\002\000\000\000\000\000xc\001\000\000\000\000\000\260$\003\000\000\000\000\000P@\001\000\000\000\000\000\360O\001\000\000\000\000\000@\212\003\000\000\000\000\000\311\026\002\000\000\000\000\000\010\303\002\000\000\000\000\000\214I\002\000\000\000\000\000\254~\002\000\000\000\000\000\300W\001\000\000\000\000\000\200\251\003\000\000\000\000\000p\216\001\000\000\000\000\000X\017\002\000\000\000\000\000\240\206\001\000\000\000\000\000\210\204\002\000\000\000\000\000\010L\001\000\000\000\000\000\240\321\001\000\000\000\000\000\270v\003\000\000\000\000\000\370\030\003\000\000\000\000\000l\334\002\000\000\000\000\000\000q\002\000\000\000\000\000\362A\003\000\000\000\000\000\200\257\002\000\000\000\000\000\320\365\002\000\000\000\000\000\330S\001\000\000\000\000\000\030\352\002\000\000\000\000\000\030a\004\000\000\000\000\000t\267\001\000\000\000\000\000L\216\002\000\000\000\000\000\325x\004\000\000\000\000\000(\232\001\000\000\000\000\000\360\314\001\000\000\000\000\000\000q\002\000\000\000\000\000\210\001\003\000\000\000\000\000\360\272\004\000\000\000\000\000p\202\003\000\000\000\000\000\306\323\001\000\000\000\000\000 H\001\000\000\000\000\000l\320\004\000\000\000\000\000\030a\004\000\000\000\000\000\350z\001\000\000\000\000\000\2008\001\000\000\000\000\000x]\002\000\000\000\000\000\310\243\002\000\000\000\000\000\240\375\002\000\000\000\000\000\210\000\004\000\000\000\000\000\360=\004\000\000\000\000\000P!\002\000\000\000\000\000%~\010\000\000\000\000\000h6\002\000\000\000\000\0008\301\001\000\000\000\000\000\244K\001\000\000\000\000\000e\261\002\000\000\000\000\000\315\r\003\000\000\000\000\000\210\204\002\000\000\000\000\000t4\002\000\000\000\000\000\030\344\003\000\000\000\000\000 \277\002\000\000\000\000\000\372\325\002\000\000\000\000\000\300\310\003\000\000\000\000\000\230\034\005\000\000\000\000\000`[\003\000\000\000\000\000\374A\003\000\000\000\000\000h<\001\000\000\000\000\000\220_\001\000\000\000\000\000\244\257\001\000\000\000\000\000\220Y\002\000\000\000\000\000@\001\005\000\000\000\000\000P\267\002\000\000\000\000\000\334\217\002\000\000\000\000\000hO\002\000\000\000\000\000X\017\002\000\000\000\000\000X\017\002\000\000\000\000\000\220Y\002\000\000\000\000\000le\001\000\000\000\000\000\014o\002\000\000\000\000\000\320\365\002\000\000\000\000\000lY\003\000\000\000\000\000\020\230\002\000\000\000\000\0000\036\002\000\000\000\000\000\374`\002\000\000\000\000\0000\354\001\000\000\000\000\000h6\002\000\000\000\000\000\210\007\002\000\000\000\000\000\000\356\002\000\000\000\000\000\000q\002\000\000\000\000\000l\334\002\000\000\000\000\0008>\002\000\000\000\000\000,F\001\000\000\000\000\000`\330\003\000\000\000\000\000\034\031\002\000\000\000\000\000\210\001\003\000\000\000\000\000\344j\001\000\000\000\000\000\000q\002\000\000\000\000\0004\025\002\000\000\000\000\000P:\002\000\000\000\000\000\350\367\001\000\000\000\000\0000\261\002\000\000\000\000\000\030\360\001\000\000\000\000\000\020\230\002\000\000\000\000\000\000\364\001\000\000\000\000\000He\002\000\000\000\000\000`\352\000\000\000\000\000\000\314\322\001\000\000\000\000\000X\017\002\000\000\000\000\000\014o\002\000\000\000\000\000\020\236\001\000\000\000\000\000\210\365\004\000\000\000\000\000\274\276\002\000\000\000\000\000%1\004\000\000\000\000\000\010\303\002\000\000\000\000\000\300E\004\000\000\000\000\000`\336\002\000\000\000\000\000\310 \003\000\000\000\000\000l\373\001\000\000\000\000\000d\r\002\000\000\000\000\000\010\311\001\000\000\000\000\0000\332\004\000\000\000\000\000$\317\002\000\000\000\000\000\320\373\001\000\000\000\000\000\340\"\002\000\000\000\000\000D\n\002\000\000\000\000\000\200\316\001\000\000\000\000\000\244?\003\000\000\000\000\000\200\265\001\000\000\000\000\000\360\314\001\000\000\000\000\000<\200\002\000\000\000\000\0008\301\001\000\000\000\000\000\260\247\002\000\000\000\000\000\270\363\003\000\000\000\000\000\330G\003\000\000\000\000\000\340\"\002\000\000\000\000\000X\017\002\000\000\000\000\000<m\001\000\000\000\000\000\374\312\001\000\000\000\000\000\214\247\003\000\000\000\000\000(\224\002\000\000\000\000\000p\216\001\000\000\000\000\000\330\320\001\000\000\000\000\0000o\001\000\000\000\000\000\240\375\002\000\000\000\000\000\2002\002\000\000\000\000\000\370\036\002\000\000\000\000\000|\003\003\000\000\000\000\000\246{\006\000\000\000\000\000\2008\001\000\000\000\000\000\2008\001\000\000\000\000\000\010F\002\000\000\000\000\000 \277\002\000\000\000\000\000\244\251\002\000\000\000\000\000\244\310\001\000\000\000\000\000\230.\002\000\000\000\000\000`\344\001\000\000\000\000\000\214I\002\000\000\000\000\000p\202\003\000\000\000\000\000\264\326\001\000\000\000\000\000H\024\003\000\000\000\000\000\220S\003\000\000\000\000\000\274\276\002\000\000\000\000\000p\202\003\000\000\000\000\000x\226\003\000\000\000\000\000\250\322\002\000\000\000\000\000P:\002\000\000\000\000\000\000k\003\000\000\000\000\000\350\367\001\000\000\000\000\000\237\251\001\000\000\000\000\000\320\365\002\000\000\000\000\000\322\216\003\000\000\000\000\000f\276\003\000\000\000\000\000\310\243\002\000\000\000\000\000\370\225\003\000\000\000\000\000h\211\t\000\000\000\000\000\370\233\002\000\000\000\000\000\270|\002\000\000\000\000\000|\237\002\000\000\000\000\0004\017\003\000\000\000\000\000\230\245\003\000\000\000\000\000HY\004\000\000\000\000\000\314\322\001\000\000\000\000\0008\301\001\000\000\000\000\000\024]\002\000\000\000\000\000Hk\001\000\000\000\000\000\220\320\003\000\000\000\000\0004\375\005\000\000\000\000\000(^\013\000\000\000\000\000\300\324\001\000\000\000\000\000L\331\002\000\000\000\000\000\304\231\001\000\000\000\000\000\030s\001\000\000\000\000\000p\377\003\000\000\000\000\000\270\371\002\000\000\000\000\000H\342\002\000\000\000\000\000@\220\002\000\000\000\000\000\260\247\002\000\000\000\000\000H\350\001\000\000\000\000\000\210\204\002\000\000\000\000\0000i\002\000\000\000\000\000\200\257\002\000\000\000\000\000JX\003\000\000\000\000\000\2002\002\000\000\000\000\000P\267\002\000\000\000\000\000 B\002\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/tensors/component_0:output:0"
      input: "TensorSliceDataset/tensors/component_1:output:0"
      input: "TensorSliceDataset/tensors/component_2:output:0"
      input: "TensorSliceDataset/tensors/component_3:output:0"
      input: "TensorSliceDataset/tensors/component_4:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 5
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "TensorSliceDataset:handle:0"
      input: "BatchDatasetV2/batch_size:output:0"
      input: "BatchDatasetV2/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "BatchDatasetV2:handle:0"
      input: "RepeatDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "RepeatDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "ShuffleDataset:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
